Leaf_js_exec_counter[0]++;
function Leaf(pos, rot, len) {
  Leaf_js_exec_counter[2]++;
  Leaf_js_exec_counter[4]++;
  this.pos = pos;
  Leaf_js_exec_counter[5]++;
  this.rot = rot;
  Leaf_js_exec_counter[6]++;
  this.vel = new Vec2(0, 0);
  Leaf_js_exec_counter[7]++;
  this.rotvel = 0;
  Leaf_js_exec_counter[8]++;
  var l2 = len * rand2(0.2, 0.3);
  Leaf_js_exec_counter[10]++;
  this.bez = [new Vec2(0, 0), new Vec2(len * 0.333, l2), new Vec2(len * 0.666, l2), new Vec2(len, 0), new Vec2(len * 0.666, -l2), new Vec2(len * 0.333, -l2), new Vec2(0, 0)];
  Leaf_js_exec_counter[3]++;
}
Leaf_js_exec_counter[11]++;
Leaf.prototype = {attached: true, udeath: 0, update: function() {
  Leaf_js_exec_counter[12]++;
  if (!this.attached) 
  {
    Leaf_js_exec_counter[14]++;
    this.udeath = Math.min(1, (g.millis() - this.detachTime) / this.pruneDelay);
    if (this.udeath == 1) 
    {
      Leaf_js_exec_counter[15]++;
      this.prune();
    } else {
      Leaf_js_exec_counter[16]++;
      this.pos.add(this.vel);
      Leaf_js_exec_counter[17]++;
      this.rot += this.rotvel;
    }
  }
  Leaf_js_exec_counter[13]++;
}, draw: function(scale) {
  Leaf_js_exec_counter[18]++;
  if (!this.attached) {
    Leaf_js_exec_counter[20]++;
    scale *= 1 - this.udeath;
  }
  Leaf_js_exec_counter[21]++;
  g.push();
  Leaf_js_exec_counter[22]++;
  g.gfx.translate(this.pos.x, this.pos.y);
  Leaf_js_exec_counter[23]++;
  g.gfx.rotate(this.rot);
  Leaf_js_exec_counter[24]++;
  g.gfx.scale(scale, scale);
  Leaf_js_exec_counter[25]++;
  g.beginPath();
  Leaf_js_exec_counter[26]++;
  g.gfx.moveTo(this.bez[0].x, this.bez[0].y);
  Leaf_js_exec_counter[27]++;
  g.gfx.bezierCurveTo(this.bez[1].x, this.bez[1].y, this.bez[2].x, this.bez[2].y, this.bez[3].x, this.bez[3].y);
  Leaf_js_exec_counter[28]++;
  g.gfx.bezierCurveTo(this.bez[4].x, this.bez[4].y, this.bez[5].x, this.bez[5].y, this.bez[6].x, this.bez[6].y);
  Leaf_js_exec_counter[29]++;
  g.endPath();
  Leaf_js_exec_counter[30]++;
  g.pop();
  Leaf_js_exec_counter[19]++;
}, transform: function(origin, mv, sc) {
  Leaf_js_exec_counter[31]++;
  Leaf_js_exec_counter[33]++;
  this.pos.transform(origin, mv, sc);
  Leaf_js_exec_counter[34]++;
  this.vel.mul2(sc);
  for (var i = this.bez.length; --i >= 0; ) {
    Leaf_js_exec_counter[35]++;
    this.bez[i].mul2(sc);
  }
  Leaf_js_exec_counter[32]++;
}, detach: function() {
  Leaf_js_exec_counter[36]++;
  Leaf_js_exec_counter[38]++;
  var mag = rand2(0.025, 0.1);
  Leaf_js_exec_counter[40]++;
  this.vel.set(rotx(this.bez[3].x, this.rot) * mag, roty(this.bez[3].x, this.rot) * mag);
  Leaf_js_exec_counter[41]++;
  this.rotvel = rand2(-0.1, 0.1);
  Leaf_js_exec_counter[42]++;
  this.attached = false;
  Leaf_js_exec_counter[43]++;
  this.detachTime = g.millis();
  Leaf_js_exec_counter[44]++;
  this.pruneDelay = randInt2(500, 1000);
  Leaf_js_exec_counter[37]++;
}, prune: function() {
  Leaf_js_exec_counter[45]++;
  if (this.parent) {
    Leaf_js_exec_counter[47]++;
    this.parent.removeLeaf(this);
  }
  Leaf_js_exec_counter[46]++;
}};
Leaf_js_exec_counter[1]++;
