phorm_js_exec_counter[0]++;
var AjaxVal = "";
phorm_js_exec_counter[2]++;
var isAjaxing = false;
phorm_js_exec_counter[4]++;
var md5 = "";
phorm_js_exec_counter[6]++;
var ss_cur = 0;
phorm_js_exec_counter[8]++;
var ss_play = 1;
phorm_js_exec_counter[10]++;
var ss_pid = new Array();
phorm_js_exec_counter[12]++;
var ss_ttl = new Array();
phorm_js_exec_counter[14]++;
var ss_src = new Array();
phorm_js_exec_counter[16]++;
var ss_date = new Array();
phorm_js_exec_counter[18]++;
var ss_desc = new Array();
phorm_js_exec_counter[20]++;
var ss_loaded = false;
phorm_js_exec_counter[22]++;
var ss_smaller = false;
phorm_js_exec_counter[24]++;
var ss_awaits = 1;
function dg(x) {
  phorm_js_exec_counter[26]++;
  phorm_js_exec_counter[27]++;
  return document.getElementById(x);
}
function setOpac(cur, strength) {
  phorm_js_exec_counter[28]++;
  if (cur.style.MozOpacity) {
    phorm_js_exec_counter[30]++;
    cur.style.MozOpacity = strength;
  } else if (cur.filters) {
    phorm_js_exec_counter[31]++;
    cur.filters.alpha.opacity = strength * 100;
  }
  phorm_js_exec_counter[29]++;
}
function LightenIt(cur) {
  phorm_js_exec_counter[32]++;
  phorm_js_exec_counter[34]++;
  setOpac(cur, 0.99);
  phorm_js_exec_counter[33]++;
}
function DarkenIt(cur, t) {
  phorm_js_exec_counter[35]++;
  if ((!t) || (t == '')) {
    phorm_js_exec_counter[37]++;
    t = DarkenVal / 100;
  }
  phorm_js_exec_counter[38]++;
  setOpac(cur, t);
  phorm_js_exec_counter[36]++;
}
function toggleInfo(wut) {
  phorm_js_exec_counter[39]++;
  if ((!wut) || (wut == '')) {
    phorm_js_exec_counter[41]++;
    wut = dg('hin').innerHTML;
  }
  if (wut == 'Show') 
  {
    phorm_js_exec_counter[42]++;
    dg('hin').innerHTML = 'Hide&nbsp;';
    phorm_js_exec_counter[43]++;
    dg('photoBoxes').style.display = 'block';
    phorm_js_exec_counter[44]++;
    dg('theImage').style.cssFloat = 'left';
    phorm_js_exec_counter[45]++;
    dg('theImage').style.styleFloat = 'left';
    phorm_js_exec_counter[46]++;
    dg('theImage').style.marginRight = '15px';
    phorm_js_exec_counter[47]++;
    setCookie('hideinfo', 'false');
  } else {
    phorm_js_exec_counter[48]++;
    dg('hin').innerHTML = 'Show';
    phorm_js_exec_counter[49]++;
    dg('photoBoxes').style.display = 'none';
    phorm_js_exec_counter[50]++;
    dg('theImage').style.cssFloat = 'none';
    phorm_js_exec_counter[51]++;
    dg('theImage').style.styleFloat = 'none';
    phorm_js_exec_counter[52]++;
    dg('theImage').style.marginRight = '55px';
    phorm_js_exec_counter[53]++;
    setCookie('hideinfo', 'true');
  }
  phorm_js_exec_counter[40]++;
}
function cookieVal(cookname) {
  phorm_js_exec_counter[54]++;
  phorm_js_exec_counter[55]++;
  thiscook = document.cookie.split("; ");
  for (i = 0; i < thiscook.length; i++) 
    if (cookname == thiscook[i].split("=")[0]) {
      phorm_js_exec_counter[56]++;
      return thiscook[i].split("=")[1];
    }
  phorm_js_exec_counter[57]++;
  return -1;
}
function setCookie(key, val) {
  phorm_js_exec_counter[58]++;
  phorm_js_exec_counter[60]++;
  newd = new Date();
  phorm_js_exec_counter[61]++;
  newd.setMonth(newd.getMonth() + 6);
  phorm_js_exec_counter[62]++;
  document.cookie = key + "=" + val + ";expires=" + newd.toGMTString();
  phorm_js_exec_counter[59]++;
}
function reToggleInfo() {
  phorm_js_exec_counter[63]++;
  phorm_js_exec_counter[65]++;
  toggleInfo((cookieVal('hideinfo') != 'true') ? 'Show' : 'Hide');
  phorm_js_exec_counter[64]++;
}
function rand(x) {
  phorm_js_exec_counter[66]++;
  phorm_js_exec_counter[67]++;
  return Math.round(Math.random() * x);
}
function reshuffle() {
  phorm_js_exec_counter[68]++;
  phorm_js_exec_counter[70]++;
  var maxRand = 400 - 75;
  phorm_js_exec_counter[72]++;
  var n = dg('thumbscount').value;
  for (var i = 0; i < n; i++) 
    {
      phorm_js_exec_counter[74]++;
      dg('ThumbInBox' + i).style.top = rand(maxRand) + 'px';
      phorm_js_exec_counter[75]++;
      dg('ThumbInBox' + i).style.left = rand(maxRand) + 'px';
    }
  phorm_js_exec_counter[69]++;
}
function updateIndic() {
  phorm_js_exec_counter[76]++;
  phorm_js_exec_counter[78]++;
  var v = dg('indicator').innerHTML;
  phorm_js_exec_counter[80]++;
  var l = v.length;
  phorm_js_exec_counter[82]++;
  var neck = 52;
  if (l > neck) {
    phorm_js_exec_counter[84]++;
    v = v.substring(0, l - 3 * 7);
  }
  if ((l % 3) == 0) {
    phorm_js_exec_counter[85]++;
    dg('indicator').innerHTML = '&#149;      ' + v;
  } else {
    phorm_js_exec_counter[86]++;
    dg('indicator').innerHTML = '&nbsp; ' + v;
  }
  if (isAjaxing) {
    phorm_js_exec_counter[87]++;
    setTimeout("updateIndic();", 500);
  } else {
    phorm_js_exec_counter[88]++;
    dg('indicator').innerHTML = '';
  }
  phorm_js_exec_counter[77]++;
}
function alertContents(http_request) {
  phorm_js_exec_counter[89]++;
  if (http_request.readyState == 4) 
  try {
    if (http_request.status == 200) 
    {
      phorm_js_exec_counter[91]++;
      AjaxVal = http_request.responseText;
      phorm_js_exec_counter[92]++;
      AjaxVal = AjaxVal.substr(6, AjaxVal.length - 13);
      phorm_js_exec_counter[93]++;
      AjaxValRead = false;
      if (AjaxVal.substr(0, 4) == 'Done') 
      {
        phorm_js_exec_counter[94]++;
        dg('rateStatus').innerHTML = 'Your rating saved!';
        phorm_js_exec_counter[95]++;
        dg('sumRate').innerHTML = AjaxVal.substr(4, AjaxVal.length - 1);
      }
      if (AjaxVal.substr(0, 6) == 'FakeWV') 
      {
        phorm_js_exec_counter[96]++;
        dg('wvwimg').src = "wv.php?rand=" + rand(10000000);
        phorm_js_exec_counter[97]++;
        md5 = AjaxVal.substr(6, 27);
      }
      if (AjaxVal.substr(0, 6) == 'TrueWV') 
      {
        phorm_js_exec_counter[98]++;
        md5 = md5;
      }
      phorm_js_exec_counter[99]++;
      AjaxVal = "";
      phorm_js_exec_counter[100]++;
      isAjaxing = false;
    }
  }  catch (e) {
}
  phorm_js_exec_counter[90]++;
}
function makeRequest(url) {
  phorm_js_exec_counter[101]++;
  phorm_js_exec_counter[103]++;
  var http_request = false;
  if (window.XMLHttpRequest) 
  {
    phorm_js_exec_counter[105]++;
    http_request = new XMLHttpRequest();
    if (http_request.overrideMimeType) {
      phorm_js_exec_counter[106]++;
      http_request.overrideMimeType('text/xml');
    }
  } else if (window.ActiveXObject) 
  {
    try {
      phorm_js_exec_counter[107]++;
      http_request = new ActiveXObject("Msxml2.XMLHTTP");
    }    catch (e) {
  try {
    phorm_js_exec_counter[108]++;
    http_request = new ActiveXObject("Microsoft.XMLHTTP");
  }  catch (e) {
}
}
  }
  if (!http_request) 
  {
    phorm_js_exec_counter[109]++;
    alert('Giving up :( Cannot create an XMLHTTP instance');
    phorm_js_exec_counter[110]++;
    return false;
  }
  phorm_js_exec_counter[111]++;
  http_request.onreadystatechange = function() {
  phorm_js_exec_counter[112]++;
  try {
    phorm_js_exec_counter[114]++;
    alertContents(http_request);
  }  catch (e) {
}
  phorm_js_exec_counter[113]++;
};
  phorm_js_exec_counter[115]++;
  http_request.open('GET', url, true);
  phorm_js_exec_counter[116]++;
  http_request.send(null);
  phorm_js_exec_counter[102]++;
}
function SaveRating(pid, rate) {
  phorm_js_exec_counter[117]++;
  if (rate == 0) 
  {
    phorm_js_exec_counter[119]++;
    alert('Select your rate among the other options!');
    phorm_js_exec_counter[120]++;
    return;
  }
  phorm_js_exec_counter[121]++;
  isAjaxing = true;
  phorm_js_exec_counter[122]++;
  dg('rateStatus').innerHTML = 'Saving your rate ';
  phorm_js_exec_counter[123]++;
  updateIndic();
  phorm_js_exec_counter[124]++;
  makeRequest("./?cmd=rate&p=" + pid + "&rate=" + rate + "&r=" + Math.round(Math.random() * 100000));
  phorm_js_exec_counter[118]++;
}
function prepareBody() {
  phorm_js_exec_counter[125]++;
  try {
    phorm_js_exec_counter[127]++;
    reToggleInfo();
  }  catch (e) {
}
  try {
    phorm_js_exec_counter[128]++;
    isAjaxing = true;
    phorm_js_exec_counter[129]++;
    makeRequest("./?cmd=wvcheck&md5=" + md5.substr(0, 20) + "&r=" + Math.round(Math.random() * 100000));
  }  catch (e) {
}
  phorm_js_exec_counter[126]++;
}
function confirmDelete(x) {
  phorm_js_exec_counter[130]++;
  phorm_js_exec_counter[131]++;
  return confirm('Are you sure you want to delete "' + x + '"?');
}
function hideElem(x) {
  phorm_js_exec_counter[132]++;
  try {
    phorm_js_exec_counter[134]++;
    dg(x).style.display = 'none';
  }  catch (e) {
}
  phorm_js_exec_counter[133]++;
}
function showElem(x) {
  phorm_js_exec_counter[135]++;
  try {
    phorm_js_exec_counter[137]++;
    dg(x).style.display = 'block';
  }  catch (e) {
}
  phorm_js_exec_counter[136]++;
}
function inlineElem(x) {
  phorm_js_exec_counter[138]++;
  try {
    phorm_js_exec_counter[140]++;
    dg(x).style.display = 'inline';
  }  catch (e) {
}
  phorm_js_exec_counter[139]++;
}
function tableRowElem(x) {
  phorm_js_exec_counter[141]++;
  try {
    phorm_js_exec_counter[143]++;
    dg(x).style;
    phorm_js_exec_counter[144]++;
    dg(x).style.display = 'table-row';
  }  catch (e) {
  if (dg(x)) {
    phorm_js_exec_counter[145]++;
    dg(x).style.display = 'inline';
  }
}
  phorm_js_exec_counter[142]++;
}
function checkWV() {
  phorm_js_exec_counter[146]++;
  phorm_js_exec_counter[147]++;
  re = /^\d{5}$/;
  if (!re.test(dg('wvinput').value)) 
  {
    phorm_js_exec_counter[148]++;
    alert('Word Verification box should have an string of length 5 with digits');
    phorm_js_exec_counter[149]++;
    return false;
  }
  if (dg('cmntTextArea').value.length == 0) 
  {
    phorm_js_exec_counter[150]++;
    alert('Empty comment is not allowed!');
    phorm_js_exec_counter[151]++;
    return false;
  }
  phorm_js_exec_counter[152]++;
  return true;
}
function doReply(x) {
  phorm_js_exec_counter[153]++;
  phorm_js_exec_counter[155]++;
  x = parseInt(x);
  phorm_js_exec_counter[156]++;
  dg('cmntReply').value = x;
  phorm_js_exec_counter[157]++;
  dg('viewComment').setAttribute('href', '#' + x);
  if (x == 0) {
    phorm_js_exec_counter[158]++;
    hideElem('ComReplyTR');
  } else {
    phorm_js_exec_counter[159]++;
    tableRowElem('ComReplyTR');
  }
  phorm_js_exec_counter[154]++;
}
function toggle(w, c, t) {
  phorm_js_exec_counter[160]++;
  phorm_js_exec_counter[162]++;
  var block = (dg(w).style.display == 'block');
  phorm_js_exec_counter[164]++;
  dg(w).style.display = (block) ? 'none' : 'block';
  phorm_js_exec_counter[165]++;
  dg(c).style.display = (!block) ? 'none' : 'block';
  phorm_js_exec_counter[166]++;
  t.innerHTML = (!block) ? "Hide'em again" : "Show'em All";
  phorm_js_exec_counter[161]++;
}
function ss_next() {
  phorm_js_exec_counter[167]++;
  phorm_js_exec_counter[169]++;
  ss_cur++;
  phorm_js_exec_counter[170]++;
  ss_update();
  phorm_js_exec_counter[168]++;
}
function ss_prev() {
  phorm_js_exec_counter[171]++;
  phorm_js_exec_counter[173]++;
  ss_cur--;
  phorm_js_exec_counter[174]++;
  ss_update();
  phorm_js_exec_counter[172]++;
}
function ss_update() {
  phorm_js_exec_counter[175]++;
  phorm_js_exec_counter[177]++;
  ss_cur = Math.max(ss_cur, 0);
  if (ss_cur >= ss_date.length) 
  {
    phorm_js_exec_counter[178]++;
    hideElem('ss_link2');
    phorm_js_exec_counter[179]++;
    showElem('ss_theend');
    phorm_js_exec_counter[180]++;
    ss_cur = ss_date.length;
    phorm_js_exec_counter[181]++;
    dg('ss_n').innerHTML = "Final";
    if (ss_play) {
      phorm_js_exec_counter[182]++;
      ss_playpause();
    }
  } else {
    phorm_js_exec_counter[183]++;
    hideElem('ss_theend');
    phorm_js_exec_counter[184]++;
    inlineElem('ss_link2');
    phorm_js_exec_counter[185]++;
    ss_loaded = (dg('ss_photo').src == ss_src[ss_cur]);
    phorm_js_exec_counter[186]++;
    link = ".?p=" + ss_pid[ss_cur];
    phorm_js_exec_counter[187]++;
    src = ss_src[ss_cur];
    phorm_js_exec_counter[188]++;
    src = ss_smaller ? src_smaller(src) : src;
    phorm_js_exec_counter[189]++;
    dg('ss_photo').src = src;
    phorm_js_exec_counter[190]++;
    dg('ss_date').innerHTML = ss_date[ss_cur];
    phorm_js_exec_counter[191]++;
    dg('ss_title').innerHTML = ss_ttl[ss_cur];
    phorm_js_exec_counter[192]++;
    dg('ss_desc').innerHTML = ss_desc[ss_cur];
    phorm_js_exec_counter[193]++;
    dg('ss_n').innerHTML = 1 + ss_cur;
    phorm_js_exec_counter[194]++;
    dg('ss_link1').setAttribute('href', link);
    phorm_js_exec_counter[195]++;
    dg('ss_link2').setAttribute('href', link);
    if (ss_cur < ss_date.length) 
    {
      phorm_js_exec_counter[196]++;
      preimg = new Image();
      phorm_js_exec_counter[197]++;
      preimg.src = ss_src[ss_cur + 1];
    }
  }
  phorm_js_exec_counter[176]++;
}
function ss_loaddone() {
  phorm_js_exec_counter[198]++;
  phorm_js_exec_counter[200]++;
  ss_loaded = true;
  phorm_js_exec_counter[199]++;
}
function ss_playpause() {
  phorm_js_exec_counter[201]++;
  phorm_js_exec_counter[203]++;
  ss_play = !ss_play;
  phorm_js_exec_counter[204]++;
  dg('ss_playpause_link').innerHTML = (ss_play) ? 'Pause it' : 'Play it';
  phorm_js_exec_counter[205]++;
  dg('ss_playpause_link2').innerHTML = dg('ss_playpause_link').innerHTML;
  phorm_js_exec_counter[206]++;
  ss_run();
  phorm_js_exec_counter[202]++;
}
function src_smaller(x) {
  phorm_js_exec_counter[207]++;
  if (x.charAt(x.length - 1) == ")") {
    phorm_js_exec_counter[208]++;
    x = x.substr(3, x.length - 4);
  }
  phorm_js_exec_counter[209]++;
  return x.substr(0, x.length - 5) + "4.jpg";
}
function ss_toggleSmaller() {
  phorm_js_exec_counter[210]++;
  phorm_js_exec_counter[212]++;
  ss_smaller = !ss_smaller;
  phorm_js_exec_counter[213]++;
  dg('ss_smaller_link').innerHTML = (ss_smaller) ? 'Larger Size' : 'Smaller Size';
  phorm_js_exec_counter[214]++;
  dg('ss_photo').src = ss_smaller ? src_smaller(dg('ss_photo').src) : ss_src[ss_cur];
  phorm_js_exec_counter[211]++;
}
function ss_run() {
  phorm_js_exec_counter[215]++;
  if ((ss_play) && (ss_awaits <= 0)) 
  {
    phorm_js_exec_counter[217]++;
    ss_awaits++;
    phorm_js_exec_counter[218]++;
    var lookup = parseInt(dg('ss_refresh').value);
    phorm_js_exec_counter[220]++;
    setTimeout("ss_slideshow();", lookup);
  }
  phorm_js_exec_counter[216]++;
}
function ss_slideshow() {
  phorm_js_exec_counter[221]++;
  phorm_js_exec_counter[223]++;
  ss_awaits--;
  if (ss_play == 1 && ss_loaded) 
  {
    phorm_js_exec_counter[224]++;
    ss_cur++;
    phorm_js_exec_counter[225]++;
    ss_update();
  }
  phorm_js_exec_counter[226]++;
  ss_run();
  phorm_js_exec_counter[222]++;
}
phorm_js_exec_counter[1]++;
