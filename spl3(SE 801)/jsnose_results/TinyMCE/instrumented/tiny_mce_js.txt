tiny_mce_js_exec_counter[0]++;
tiny_mce_js_exec_counter[2]++;
(function(d) {
  tiny_mce_js_exec_counter[3]++;
  tiny_mce_js_exec_counter[5]++;
  var a = /^\s*|\s*$/g, e, c = "B".replace(/A(.)|B/, "$1") === "$1";
  tiny_mce_js_exec_counter[7]++;
  var b = {majorVersion: "3", minorVersion: "4", releaseDate: "2011-03-10", _init: function() {
  tiny_mce_js_exec_counter[9]++;
  tiny_mce_js_exec_counter[10]++;
  var s = this, q = document, o = navigator, g = o.userAgent, m, f, l, k, j, r;
  tiny_mce_js_exec_counter[12]++;
  s.isOpera = d.opera && opera.buildNumber;
  tiny_mce_js_exec_counter[13]++;
  s.isWebKit = /WebKit/.test(g);
  tiny_mce_js_exec_counter[14]++;
  s.isIE = !s.isWebKit && !s.isOpera && (/MSIE/gi).test(g) && (/Explorer/gi).test(o.appName);
  tiny_mce_js_exec_counter[15]++;
  s.isIE6 = s.isIE && /MSIE [56]/.test(g);
  tiny_mce_js_exec_counter[16]++;
  s.isGecko = !s.isWebKit && /Gecko/.test(g);
  tiny_mce_js_exec_counter[17]++;
  s.isMac = g.indexOf("Mac") != -1;
  tiny_mce_js_exec_counter[18]++;
  s.isAir = /adobeair/i.test(g);
  tiny_mce_js_exec_counter[19]++;
  s.isIDevice = /(iPad|iPhone)/.test(g);
  if (d.tinyMCEPreInit) 
  {
    tiny_mce_js_exec_counter[20]++;
    s.suffix = tinyMCEPreInit.suffix;
    tiny_mce_js_exec_counter[21]++;
    s.baseURL = tinyMCEPreInit.base;
    tiny_mce_js_exec_counter[22]++;
    s.query = tinyMCEPreInit.query;
    tiny_mce_js_exec_counter[23]++;
    return;
  }
  tiny_mce_js_exec_counter[24]++;
  s.suffix = "";
  tiny_mce_js_exec_counter[25]++;
  f = q.getElementsByTagName("base");
  for (m = 0; m < f.length; m++) 
    {
      if (r = f[m].href) 
      {
        if (/^https?:\/\/[^\/]+$/.test(r)) 
        {
          tiny_mce_js_exec_counter[26]++;
          r += "/";
        }
        tiny_mce_js_exec_counter[27]++;
        k = r ? r.match(/.*\//)[0] : "";
      }
    }
  function h(i) {
    tiny_mce_js_exec_counter[28]++;
    if (i.src && /tiny_mce(|_gzip|_jquery|_prototype|_full)(_dev|_src)?.js/.test(i.src)) 
    {
      if (/_(src|dev)\.js/g.test(i.src)) 
      {
        tiny_mce_js_exec_counter[29]++;
        s.suffix = "_src";
      }
      if ((j = i.src.indexOf("?")) != -1) 
      {
        tiny_mce_js_exec_counter[30]++;
        s.query = i.src.substring(j + 1);
      }
      tiny_mce_js_exec_counter[31]++;
      s.baseURL = i.src.substring(0, i.src.lastIndexOf("/"));
      if (k && s.baseURL.indexOf("://") == -1 && s.baseURL.indexOf("/") !== 0) 
      {
        tiny_mce_js_exec_counter[32]++;
        s.baseURL = k + s.baseURL;
      }
      tiny_mce_js_exec_counter[33]++;
      return s.baseURL;
    }
    tiny_mce_js_exec_counter[34]++;
    return null;
  }
  tiny_mce_js_exec_counter[35]++;
  f = q.getElementsByTagName("script");
  for (m = 0; m < f.length; m++) 
    {
      if (h(f[m])) 
      {
        tiny_mce_js_exec_counter[36]++;
        return;
      }
    }
  tiny_mce_js_exec_counter[37]++;
  l = q.getElementsByTagName("head")[0];
  if (l) 
  {
    tiny_mce_js_exec_counter[38]++;
    f = l.getElementsByTagName("script");
    for (m = 0; m < f.length; m++) 
      {
        if (h(f[m])) 
        {
          tiny_mce_js_exec_counter[39]++;
          return;
        }
      }
  }
  tiny_mce_js_exec_counter[40]++;
  return;
}, is: function(g, f) {
  tiny_mce_js_exec_counter[41]++;
  if (!f) 
  {
    tiny_mce_js_exec_counter[42]++;
    return g !== e;
  }
  if (f == "array" && (g.hasOwnProperty && g instanceof Array)) 
  {
    tiny_mce_js_exec_counter[43]++;
    return true;
  }
  tiny_mce_js_exec_counter[44]++;
  return typeof (g) == f;
}, makeMap: function(f, j, h) {
  tiny_mce_js_exec_counter[45]++;
  tiny_mce_js_exec_counter[46]++;
  var g;
  tiny_mce_js_exec_counter[48]++;
  f = f || [];
  tiny_mce_js_exec_counter[49]++;
  j = j || ",";
  if (typeof (f) == "string") 
  {
    tiny_mce_js_exec_counter[50]++;
    f = f.split(j);
  }
  tiny_mce_js_exec_counter[51]++;
  h = h || {};
  tiny_mce_js_exec_counter[52]++;
  g = f.length;
  while (g--) 
    {
      tiny_mce_js_exec_counter[53]++;
      h[f[g]] = {};
    }
  tiny_mce_js_exec_counter[54]++;
  return h;
}, each: function(i, f, h) {
  tiny_mce_js_exec_counter[55]++;
  tiny_mce_js_exec_counter[56]++;
  var j, g;
  if (!i) 
  {
    tiny_mce_js_exec_counter[58]++;
    return 0;
  }
  tiny_mce_js_exec_counter[59]++;
  h = h || i;
  if (i.length !== e) 
  {
    for (j = 0 , g = i.length; j < g; j++) 
      {
        if (f.call(h, i[j], j, i) === false) 
        {
          tiny_mce_js_exec_counter[60]++;
          return 0;
        }
      }
  } else {
    for (j in i) 
      {
        if (i.hasOwnProperty(j)) 
        {
          if (f.call(h, i[j], j, i) === false) 
          {
            tiny_mce_js_exec_counter[61]++;
            return 0;
          }
        }
      }
  }
  tiny_mce_js_exec_counter[62]++;
  return 1;
}, map: function(g, h) {
  tiny_mce_js_exec_counter[63]++;
  tiny_mce_js_exec_counter[64]++;
  var i = [];
  tiny_mce_js_exec_counter[66]++;
  b.each(g, function(f) {
  tiny_mce_js_exec_counter[67]++;
  tiny_mce_js_exec_counter[69]++;
  i.push(h(f));
  tiny_mce_js_exec_counter[68]++;
});
  tiny_mce_js_exec_counter[70]++;
  return i;
}, grep: function(g, h) {
  tiny_mce_js_exec_counter[71]++;
  tiny_mce_js_exec_counter[72]++;
  var i = [];
  tiny_mce_js_exec_counter[74]++;
  b.each(g, function(f) {
  tiny_mce_js_exec_counter[75]++;
  if (!h || h(f)) 
  {
    tiny_mce_js_exec_counter[77]++;
    i.push(f);
  }
  tiny_mce_js_exec_counter[76]++;
});
  tiny_mce_js_exec_counter[78]++;
  return i;
}, inArray: function(g, h) {
  tiny_mce_js_exec_counter[79]++;
  tiny_mce_js_exec_counter[80]++;
  var j, f;
  if (g) 
  {
    for (j = 0 , f = g.length; j < f; j++) 
      {
        if (g[j] === h) 
        {
          tiny_mce_js_exec_counter[82]++;
          return j;
        }
      }
  }
  tiny_mce_js_exec_counter[83]++;
  return -1;
}, extend: function(k, j) {
  tiny_mce_js_exec_counter[84]++;
  tiny_mce_js_exec_counter[85]++;
  var h, g, f = arguments;
  for (h = 1 , g = f.length; h < g; h++) 
    {
      tiny_mce_js_exec_counter[87]++;
      j = f[h];
      tiny_mce_js_exec_counter[88]++;
      b.each(j, function(i, l) {
  tiny_mce_js_exec_counter[89]++;
  if (i !== e) 
  {
    tiny_mce_js_exec_counter[91]++;
    k[l] = i;
  }
  tiny_mce_js_exec_counter[90]++;
});
    }
  tiny_mce_js_exec_counter[92]++;
  return k;
}, trim: function(f) {
  tiny_mce_js_exec_counter[93]++;
  tiny_mce_js_exec_counter[94]++;
  return (f ? "" + f : "").replace(a, "");
}, create: function(o, f, j) {
  tiny_mce_js_exec_counter[95]++;
  tiny_mce_js_exec_counter[97]++;
  var n = this, g, i, k, l, h, m = 0;
  tiny_mce_js_exec_counter[99]++;
  o = /^((static) )?([\w.]+)(:([\w.]+))?/.exec(o);
  tiny_mce_js_exec_counter[100]++;
  k = o[3].match(/(^|\.)(\w+)$/i)[2];
  tiny_mce_js_exec_counter[101]++;
  i = n.createNS(o[3].replace(/\.\w+$/, ""), j);
  if (i[k]) 
  {
    tiny_mce_js_exec_counter[102]++;
    return;
  }
  if (o[2] == "static") 
  {
    tiny_mce_js_exec_counter[103]++;
    i[k] = f;
    if (this.onCreate) 
    {
      tiny_mce_js_exec_counter[104]++;
      this.onCreate(o[2], o[3], i[k]);
    }
    tiny_mce_js_exec_counter[105]++;
    return;
  }
  if (!f[k]) 
  {
    tiny_mce_js_exec_counter[106]++;
    f[k] = function() {
  tiny_mce_js_exec_counter[107]++;
  tiny_mce_js_exec_counter[108]++;
};
    tiny_mce_js_exec_counter[109]++;
    m = 1;
  }
  tiny_mce_js_exec_counter[110]++;
  i[k] = f[k];
  tiny_mce_js_exec_counter[111]++;
  n.extend(i[k].prototype, f);
  if (o[5]) 
  {
    tiny_mce_js_exec_counter[112]++;
    g = n.resolve(o[5]).prototype;
    tiny_mce_js_exec_counter[113]++;
    l = o[5].match(/\.(\w+)$/i)[1];
    tiny_mce_js_exec_counter[114]++;
    h = i[k];
    if (m) 
    {
      tiny_mce_js_exec_counter[115]++;
      i[k] = function() {
  tiny_mce_js_exec_counter[116]++;
  tiny_mce_js_exec_counter[117]++;
  return g[l].apply(this, arguments);
};
    } else {
      tiny_mce_js_exec_counter[118]++;
      i[k] = function() {
  tiny_mce_js_exec_counter[119]++;
  tiny_mce_js_exec_counter[120]++;
  this.parent = g[l];
  tiny_mce_js_exec_counter[121]++;
  return h.apply(this, arguments);
};
    }
    tiny_mce_js_exec_counter[122]++;
    i[k].prototype[k] = i[k];
    tiny_mce_js_exec_counter[123]++;
    n.each(g, function(p, q) {
  tiny_mce_js_exec_counter[124]++;
  tiny_mce_js_exec_counter[126]++;
  i[k].prototype[q] = g[q];
  tiny_mce_js_exec_counter[125]++;
});
    tiny_mce_js_exec_counter[127]++;
    n.each(f, function(p, q) {
  tiny_mce_js_exec_counter[128]++;
  if (g[q]) 
  {
    tiny_mce_js_exec_counter[130]++;
    i[k].prototype[q] = function() {
  tiny_mce_js_exec_counter[131]++;
  tiny_mce_js_exec_counter[132]++;
  this.parent = g[q];
  tiny_mce_js_exec_counter[133]++;
  return p.apply(this, arguments);
};
  } else {
    if (q != k) 
    {
      tiny_mce_js_exec_counter[134]++;
      i[k].prototype[q] = p;
    }
  }
  tiny_mce_js_exec_counter[129]++;
});
  }
  tiny_mce_js_exec_counter[135]++;
  n.each(f["static"], function(p, q) {
  tiny_mce_js_exec_counter[136]++;
  tiny_mce_js_exec_counter[138]++;
  i[k][q] = p;
  tiny_mce_js_exec_counter[137]++;
});
  if (this.onCreate) 
  {
    tiny_mce_js_exec_counter[139]++;
    this.onCreate(o[2], o[3], i[k].prototype);
  }
  tiny_mce_js_exec_counter[96]++;
}, walk: function(i, h, j, g) {
  tiny_mce_js_exec_counter[140]++;
  tiny_mce_js_exec_counter[142]++;
  g = g || this;
  if (i) 
  {
    if (j) 
    {
      tiny_mce_js_exec_counter[143]++;
      i = i[j];
    }
    tiny_mce_js_exec_counter[144]++;
    b.each(i, function(k, f) {
  tiny_mce_js_exec_counter[145]++;
  if (h.call(g, k, f, j) === false) 
  {
    tiny_mce_js_exec_counter[147]++;
    return false;
  }
  tiny_mce_js_exec_counter[148]++;
  b.walk(k, h, j, g);
  tiny_mce_js_exec_counter[146]++;
});
  }
  tiny_mce_js_exec_counter[141]++;
}, createNS: function(j, h) {
  tiny_mce_js_exec_counter[149]++;
  tiny_mce_js_exec_counter[150]++;
  var g, f;
  tiny_mce_js_exec_counter[152]++;
  h = h || d;
  tiny_mce_js_exec_counter[153]++;
  j = j.split(".");
  for (g = 0; g < j.length; g++) 
    {
      tiny_mce_js_exec_counter[154]++;
      f = j[g];
      if (!h[f]) 
      {
        tiny_mce_js_exec_counter[155]++;
        h[f] = {};
      }
      tiny_mce_js_exec_counter[156]++;
      h = h[f];
    }
  tiny_mce_js_exec_counter[157]++;
  return h;
}, resolve: function(j, h) {
  tiny_mce_js_exec_counter[158]++;
  tiny_mce_js_exec_counter[159]++;
  var g, f;
  tiny_mce_js_exec_counter[161]++;
  h = h || d;
  tiny_mce_js_exec_counter[162]++;
  j = j.split(".");
  for (g = 0 , f = j.length; g < f; g++) 
    {
      tiny_mce_js_exec_counter[163]++;
      h = h[j[g]];
      if (!h) 
      {
        tiny_mce_js_exec_counter[164]++;
        break;
      }
    }
  tiny_mce_js_exec_counter[165]++;
  return h;
}, addUnload: function(j, i) {
  tiny_mce_js_exec_counter[166]++;
  tiny_mce_js_exec_counter[167]++;
  var h = this;
  tiny_mce_js_exec_counter[169]++;
  j = {func: j, scope: i || this};
  if (!h.unloads) 
  {
    function g() {
      tiny_mce_js_exec_counter[170]++;
      tiny_mce_js_exec_counter[172]++;
      var f = h.unloads, l, m;
      if (f) 
      {
        for (m in f) 
          {
            tiny_mce_js_exec_counter[174]++;
            l = f[m];
            if (l && l.func) 
            {
              tiny_mce_js_exec_counter[175]++;
              l.func.call(l.scope, 1);
            }
          }
        if (d.detachEvent) 
        {
          tiny_mce_js_exec_counter[176]++;
          d.detachEvent("onbeforeunload", k);
          tiny_mce_js_exec_counter[177]++;
          d.detachEvent("onunload", g);
        } else {
          if (d.removeEventListener) 
          {
            tiny_mce_js_exec_counter[178]++;
            d.removeEventListener("unload", g, false);
          }
        }
        tiny_mce_js_exec_counter[179]++;
        h.unloads = l = f = w = g = 0;
        if (d.CollectGarbage) 
        {
          tiny_mce_js_exec_counter[180]++;
          CollectGarbage();
        }
      }
      tiny_mce_js_exec_counter[171]++;
    }    function k() {
      tiny_mce_js_exec_counter[181]++;
      tiny_mce_js_exec_counter[183]++;
      var l = document;
      if (l.readyState == "interactive") 
      {
        function f() {
          tiny_mce_js_exec_counter[185]++;
          tiny_mce_js_exec_counter[187]++;
          l.detachEvent("onstop", f);
          if (g) 
          {
            tiny_mce_js_exec_counter[188]++;
            g();
          }
          tiny_mce_js_exec_counter[189]++;
          l = 0;
          tiny_mce_js_exec_counter[186]++;
        }        if (l) 
        {
          tiny_mce_js_exec_counter[190]++;
          l.attachEvent("onstop", f);
        }
        tiny_mce_js_exec_counter[191]++;
        d.setTimeout(function() {
  tiny_mce_js_exec_counter[192]++;
  if (l) 
  {
    tiny_mce_js_exec_counter[194]++;
    l.detachEvent("onstop", f);
  }
  tiny_mce_js_exec_counter[193]++;
}, 0);
      }
      tiny_mce_js_exec_counter[182]++;
    }    if (d.attachEvent) 
    {
      tiny_mce_js_exec_counter[195]++;
      d.attachEvent("onunload", g);
      tiny_mce_js_exec_counter[196]++;
      d.attachEvent("onbeforeunload", k);
    } else {
      if (d.addEventListener) 
      {
        tiny_mce_js_exec_counter[197]++;
        d.addEventListener("unload", g, false);
      }
    }
    tiny_mce_js_exec_counter[198]++;
    h.unloads = [j];
  } else {
    tiny_mce_js_exec_counter[199]++;
    h.unloads.push(j);
  }
  tiny_mce_js_exec_counter[200]++;
  return j;
}, removeUnload: function(i) {
  tiny_mce_js_exec_counter[201]++;
  tiny_mce_js_exec_counter[202]++;
  var g = this.unloads, h = null;
  tiny_mce_js_exec_counter[204]++;
  b.each(g, function(j, f) {
  tiny_mce_js_exec_counter[205]++;
  if (j && j.func == i) 
  {
    tiny_mce_js_exec_counter[207]++;
    g.splice(f, 1);
    tiny_mce_js_exec_counter[208]++;
    h = i;
    tiny_mce_js_exec_counter[209]++;
    return false;
  }
  tiny_mce_js_exec_counter[206]++;
});
  tiny_mce_js_exec_counter[210]++;
  return h;
}, explode: function(f, g) {
  tiny_mce_js_exec_counter[211]++;
  tiny_mce_js_exec_counter[212]++;
  return f ? b.map(f.split(g || ","), b.trim) : f;
}, _addVer: function(g) {
  tiny_mce_js_exec_counter[213]++;
  tiny_mce_js_exec_counter[214]++;
  var f;
  if (!this.query) 
  {
    tiny_mce_js_exec_counter[216]++;
    return g;
  }
  tiny_mce_js_exec_counter[217]++;
  f = (g.indexOf("?") == -1 ? "?" : "&") + this.query;
  if (g.indexOf("#") == -1) 
  {
    tiny_mce_js_exec_counter[218]++;
    return g + f;
  }
  tiny_mce_js_exec_counter[219]++;
  return g.replace("#", f + "#");
}, _replace: function(h, f, g) {
  tiny_mce_js_exec_counter[220]++;
  if (c) 
  {
    tiny_mce_js_exec_counter[221]++;
    return g.replace(h, function() {
  tiny_mce_js_exec_counter[222]++;
  tiny_mce_js_exec_counter[223]++;
  var l = f, j = arguments, k;
  for (k = 0; k < j.length - 2; k++) 
    {
      if (j[k] === e) 
      {
        tiny_mce_js_exec_counter[225]++;
        l = l.replace(new RegExp("\\$" + k, "g"), "");
      } else {
        tiny_mce_js_exec_counter[226]++;
        l = l.replace(new RegExp("\\$" + k, "g"), j[k]);
      }
    }
  tiny_mce_js_exec_counter[227]++;
  return l;
});
  }
  tiny_mce_js_exec_counter[228]++;
  return g.replace(h, f);
}};
  tiny_mce_js_exec_counter[229]++;
  b._init();
  tiny_mce_js_exec_counter[230]++;
  d.tinymce = d.tinyMCE = b;
  tiny_mce_js_exec_counter[4]++;
})(window);
tiny_mce_js_exec_counter[231]++;
tinymce.create("tinymce.util.Dispatcher", {scope: null, listeners: null, Dispatcher: function(a) {
  tiny_mce_js_exec_counter[232]++;
  tiny_mce_js_exec_counter[234]++;
  this.scope = a || this;
  tiny_mce_js_exec_counter[235]++;
  this.listeners = [];
  tiny_mce_js_exec_counter[233]++;
}, add: function(a, b) {
  tiny_mce_js_exec_counter[236]++;
  tiny_mce_js_exec_counter[237]++;
  this.listeners.push({cb: a, scope: b || this.scope});
  tiny_mce_js_exec_counter[238]++;
  return a;
}, addToTop: function(a, b) {
  tiny_mce_js_exec_counter[239]++;
  tiny_mce_js_exec_counter[240]++;
  this.listeners.unshift({cb: a, scope: b || this.scope});
  tiny_mce_js_exec_counter[241]++;
  return a;
}, remove: function(a) {
  tiny_mce_js_exec_counter[242]++;
  tiny_mce_js_exec_counter[243]++;
  var b = this.listeners, c = null;
  tiny_mce_js_exec_counter[245]++;
  tinymce.each(b, function(e, d) {
  tiny_mce_js_exec_counter[246]++;
  if (a == e.cb) 
  {
    tiny_mce_js_exec_counter[248]++;
    c = a;
    tiny_mce_js_exec_counter[249]++;
    b.splice(d, 1);
    tiny_mce_js_exec_counter[250]++;
    return false;
  }
  tiny_mce_js_exec_counter[247]++;
});
  tiny_mce_js_exec_counter[251]++;
  return c;
}, dispatch: function() {
  tiny_mce_js_exec_counter[252]++;
  tiny_mce_js_exec_counter[253]++;
  var f, d = arguments, e, b = this.listeners, g;
  for (e = 0; e < b.length; e++) 
    {
      tiny_mce_js_exec_counter[255]++;
      g = b[e];
      tiny_mce_js_exec_counter[256]++;
      f = g.cb.apply(g.scope, d);
      if (f === false) 
      {
        tiny_mce_js_exec_counter[257]++;
        break;
      }
    }
  tiny_mce_js_exec_counter[258]++;
  return f;
}});
tiny_mce_js_exec_counter[259]++;
(function() {
  tiny_mce_js_exec_counter[260]++;
  tiny_mce_js_exec_counter[262]++;
  var a = tinymce.each;
  tiny_mce_js_exec_counter[264]++;
  tinymce.create("tinymce.util.URI", {URI: function(e, g) {
  tiny_mce_js_exec_counter[265]++;
  tiny_mce_js_exec_counter[267]++;
  var f = this, h, d, c;
  tiny_mce_js_exec_counter[269]++;
  e = tinymce.trim(e);
  tiny_mce_js_exec_counter[270]++;
  g = f.settings = g || {};
  if (/^(mailto|tel|news|javascript|about|data):/i.test(e) || /^\s*#/.test(e)) 
  {
    tiny_mce_js_exec_counter[271]++;
    f.source = e;
    tiny_mce_js_exec_counter[272]++;
    return;
  }
  if (e.indexOf("/") === 0 && e.indexOf("//") !== 0) 
  {
    tiny_mce_js_exec_counter[273]++;
    e = (g.base_uri ? g.base_uri.protocol || "http" : "http") + "://mce_host" + e;
  }
  if (!/^\w*:?\/\//.test(e)) 
  {
    tiny_mce_js_exec_counter[274]++;
    e = (g.base_uri.protocol || "http") + "://mce_host" + f.toAbsPath(g.base_uri.path, e);
  }
  tiny_mce_js_exec_counter[275]++;
  e = e.replace(/@@/g, "(mce_at)");
  tiny_mce_js_exec_counter[276]++;
  e = /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/.exec(e);
  tiny_mce_js_exec_counter[277]++;
  a(["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"], function(b, j) {
  tiny_mce_js_exec_counter[278]++;
  tiny_mce_js_exec_counter[280]++;
  var k = e[j];
  if (k) 
  {
    tiny_mce_js_exec_counter[282]++;
    k = k.replace(/\(mce_at\)/g, "@@");
  }
  tiny_mce_js_exec_counter[283]++;
  f[b] = k;
  tiny_mce_js_exec_counter[279]++;
});
  if (c = g.base_uri) 
  {
    if (!f.protocol) 
    {
      tiny_mce_js_exec_counter[284]++;
      f.protocol = c.protocol;
    }
    if (!f.userInfo) 
    {
      tiny_mce_js_exec_counter[285]++;
      f.userInfo = c.userInfo;
    }
    if (!f.port && f.host == "mce_host") 
    {
      tiny_mce_js_exec_counter[286]++;
      f.port = c.port;
    }
    if (!f.host || f.host == "mce_host") 
    {
      tiny_mce_js_exec_counter[287]++;
      f.host = c.host;
    }
    tiny_mce_js_exec_counter[288]++;
    f.source = "";
  }
  tiny_mce_js_exec_counter[266]++;
}, setPath: function(c) {
  tiny_mce_js_exec_counter[289]++;
  tiny_mce_js_exec_counter[291]++;
  var b = this;
  tiny_mce_js_exec_counter[293]++;
  c = /^(.*?)\/?(\w+)?$/.exec(c);
  tiny_mce_js_exec_counter[294]++;
  b.path = c[0];
  tiny_mce_js_exec_counter[295]++;
  b.directory = c[1];
  tiny_mce_js_exec_counter[296]++;
  b.file = c[2];
  tiny_mce_js_exec_counter[297]++;
  b.source = "";
  tiny_mce_js_exec_counter[298]++;
  b.getURI();
  tiny_mce_js_exec_counter[290]++;
}, toRelative: function(b) {
  tiny_mce_js_exec_counter[299]++;
  tiny_mce_js_exec_counter[300]++;
  var c = this, d;
  if (b === "./") 
  {
    tiny_mce_js_exec_counter[302]++;
    return b;
  }
  tiny_mce_js_exec_counter[303]++;
  b = new tinymce.util.URI(b, {base_uri: c});
  if ((b.host != "mce_host" && c.host != b.host && b.host) || c.port != b.port || c.protocol != b.protocol) 
  {
    tiny_mce_js_exec_counter[304]++;
    return b.getURI();
  }
  tiny_mce_js_exec_counter[305]++;
  d = c.toRelPath(c.path, b.path);
  if (b.query) 
  {
    tiny_mce_js_exec_counter[306]++;
    d += "?" + b.query;
  }
  if (b.anchor) 
  {
    tiny_mce_js_exec_counter[307]++;
    d += "#" + b.anchor;
  }
  tiny_mce_js_exec_counter[308]++;
  return d;
}, toAbsolute: function(b, c) {
  tiny_mce_js_exec_counter[309]++;
  tiny_mce_js_exec_counter[310]++;
  var b = new tinymce.util.URI(b, {base_uri: this});
  tiny_mce_js_exec_counter[312]++;
  return b.getURI(this.host == b.host && this.protocol == b.protocol ? c : 0);
}, toRelPath: function(g, h) {
  tiny_mce_js_exec_counter[313]++;
  tiny_mce_js_exec_counter[314]++;
  var c, f = 0, d = "", e, b;
  tiny_mce_js_exec_counter[316]++;
  g = g.substring(0, g.lastIndexOf("/"));
  tiny_mce_js_exec_counter[317]++;
  g = g.split("/");
  tiny_mce_js_exec_counter[318]++;
  c = h.split("/");
  if (g.length >= c.length) 
  {
    for (e = 0 , b = g.length; e < b; e++) 
      {
        if (e >= c.length || g[e] != c[e]) 
        {
          tiny_mce_js_exec_counter[319]++;
          f = e + 1;
          tiny_mce_js_exec_counter[320]++;
          break;
        }
      }
  }
  if (g.length < c.length) 
  {
    for (e = 0 , b = c.length; e < b; e++) 
      {
        if (e >= g.length || g[e] != c[e]) 
        {
          tiny_mce_js_exec_counter[321]++;
          f = e + 1;
          tiny_mce_js_exec_counter[322]++;
          break;
        }
      }
  }
  if (f == 1) 
  {
    tiny_mce_js_exec_counter[323]++;
    return h;
  }
  for (e = 0 , b = g.length - (f - 1); e < b; e++) 
    {
      tiny_mce_js_exec_counter[324]++;
      d += "../";
    }
  for (e = f - 1 , b = c.length; e < b; e++) 
    {
      if (e != f - 1) 
      {
        tiny_mce_js_exec_counter[325]++;
        d += "/" + c[e];
      } else {
        tiny_mce_js_exec_counter[326]++;
        d += c[e];
      }
    }
  tiny_mce_js_exec_counter[327]++;
  return d;
}, toAbsPath: function(e, f) {
  tiny_mce_js_exec_counter[328]++;
  tiny_mce_js_exec_counter[329]++;
  var c, b = 0, h = [], d, g;
  tiny_mce_js_exec_counter[331]++;
  d = /\/$/.test(f) ? "/" : "";
  tiny_mce_js_exec_counter[332]++;
  e = e.split("/");
  tiny_mce_js_exec_counter[333]++;
  f = f.split("/");
  tiny_mce_js_exec_counter[334]++;
  a(e, function(i) {
  tiny_mce_js_exec_counter[335]++;
  if (i) 
  {
    tiny_mce_js_exec_counter[337]++;
    h.push(i);
  }
  tiny_mce_js_exec_counter[336]++;
});
  tiny_mce_js_exec_counter[338]++;
  e = h;
  for (c = f.length - 1 , h = []; c >= 0; c--) 
    {
      if (f[c].length == 0 || f[c] == ".") 
      {
        tiny_mce_js_exec_counter[339]++;
        continue;
      }
      if (f[c] == "..") 
      {
        tiny_mce_js_exec_counter[340]++;
        b++;
        tiny_mce_js_exec_counter[341]++;
        continue;
      }
      if (b > 0) 
      {
        tiny_mce_js_exec_counter[342]++;
        b--;
        tiny_mce_js_exec_counter[343]++;
        continue;
      }
      tiny_mce_js_exec_counter[344]++;
      h.push(f[c]);
    }
  tiny_mce_js_exec_counter[345]++;
  c = e.length - b;
  if (c <= 0) 
  {
    tiny_mce_js_exec_counter[346]++;
    g = h.reverse().join("/");
  } else {
    tiny_mce_js_exec_counter[347]++;
    g = e.slice(0, c).join("/") + "/" + h.reverse().join("/");
  }
  if (g.indexOf("/") !== 0) 
  {
    tiny_mce_js_exec_counter[348]++;
    g = "/" + g;
  }
  if (d && g.lastIndexOf("/") !== g.length - 1) 
  {
    tiny_mce_js_exec_counter[349]++;
    g += d;
  }
  tiny_mce_js_exec_counter[350]++;
  return g;
}, getURI: function(d) {
  tiny_mce_js_exec_counter[351]++;
  tiny_mce_js_exec_counter[352]++;
  var c, b = this;
  if (!b.source || d) 
  {
    tiny_mce_js_exec_counter[354]++;
    c = "";
    if (!d) 
    {
      if (b.protocol) 
      {
        tiny_mce_js_exec_counter[355]++;
        c += b.protocol + "://";
      }
      if (b.userInfo) 
      {
        tiny_mce_js_exec_counter[356]++;
        c += b.userInfo + "@";
      }
      if (b.host) 
      {
        tiny_mce_js_exec_counter[357]++;
        c += b.host;
      }
      if (b.port) 
      {
        tiny_mce_js_exec_counter[358]++;
        c += ":" + b.port;
      }
    }
    if (b.path) 
    {
      tiny_mce_js_exec_counter[359]++;
      c += b.path;
    }
    if (b.query) 
    {
      tiny_mce_js_exec_counter[360]++;
      c += "?" + b.query;
    }
    if (b.anchor) 
    {
      tiny_mce_js_exec_counter[361]++;
      c += "#" + b.anchor;
    }
    tiny_mce_js_exec_counter[362]++;
    b.source = c;
  }
  tiny_mce_js_exec_counter[363]++;
  return b.source;
}});
  tiny_mce_js_exec_counter[261]++;
})();
tiny_mce_js_exec_counter[364]++;
(function() {
  tiny_mce_js_exec_counter[365]++;
  tiny_mce_js_exec_counter[367]++;
  var a = tinymce.each;
  tiny_mce_js_exec_counter[369]++;
  tinymce.create("static tinymce.util.Cookie", {getHash: function(d) {
  tiny_mce_js_exec_counter[370]++;
  tiny_mce_js_exec_counter[371]++;
  var b = this.get(d), c;
  if (b) 
  {
    tiny_mce_js_exec_counter[373]++;
    a(b.split("&"), function(e) {
  tiny_mce_js_exec_counter[374]++;
  tiny_mce_js_exec_counter[376]++;
  e = e.split("=");
  tiny_mce_js_exec_counter[377]++;
  c = c || {};
  tiny_mce_js_exec_counter[378]++;
  c[unescape(e[0])] = unescape(e[1]);
  tiny_mce_js_exec_counter[375]++;
});
  }
  tiny_mce_js_exec_counter[379]++;
  return c;
}, setHash: function(j, b, g, f, i, c) {
  tiny_mce_js_exec_counter[380]++;
  tiny_mce_js_exec_counter[382]++;
  var h = "";
  tiny_mce_js_exec_counter[384]++;
  a(b, function(e, d) {
  tiny_mce_js_exec_counter[385]++;
  tiny_mce_js_exec_counter[387]++;
  h += (!h ? "" : "&") + escape(d) + "=" + escape(e);
  tiny_mce_js_exec_counter[386]++;
});
  tiny_mce_js_exec_counter[388]++;
  this.set(j, h, g, f, i, c);
  tiny_mce_js_exec_counter[381]++;
}, get: function(i) {
  tiny_mce_js_exec_counter[389]++;
  tiny_mce_js_exec_counter[390]++;
  var h = document.cookie, g, f = i + "=", d;
  if (!h) 
  {
    tiny_mce_js_exec_counter[392]++;
    return;
  }
  tiny_mce_js_exec_counter[393]++;
  d = h.indexOf("; " + f);
  if (d == -1) 
  {
    tiny_mce_js_exec_counter[394]++;
    d = h.indexOf(f);
    if (d != 0) 
    {
      tiny_mce_js_exec_counter[395]++;
      return null;
    }
  } else {
    tiny_mce_js_exec_counter[396]++;
    d += 2;
  }
  tiny_mce_js_exec_counter[397]++;
  g = h.indexOf(";", d);
  if (g == -1) 
  {
    tiny_mce_js_exec_counter[398]++;
    g = h.length;
  }
  tiny_mce_js_exec_counter[399]++;
  return unescape(h.substring(d + f.length, g));
}, set: function(i, b, g, f, h, c) {
  tiny_mce_js_exec_counter[400]++;
  tiny_mce_js_exec_counter[402]++;
  document.cookie = i + "=" + escape(b) + ((g) ? "; expires=" + g.toGMTString() : "") + ((f) ? "; path=" + escape(f) : "") + ((h) ? "; domain=" + h : "") + ((c) ? "; secure" : "");
  tiny_mce_js_exec_counter[401]++;
}, remove: function(e, b) {
  tiny_mce_js_exec_counter[403]++;
  tiny_mce_js_exec_counter[405]++;
  var c = new Date();
  tiny_mce_js_exec_counter[407]++;
  c.setTime(c.getTime() - 1000);
  tiny_mce_js_exec_counter[408]++;
  this.set(e, "", c, b, c);
  tiny_mce_js_exec_counter[404]++;
}});
  tiny_mce_js_exec_counter[366]++;
})();
tiny_mce_js_exec_counter[409]++;
(function() {
  tiny_mce_js_exec_counter[410]++;
  function serialize(o, quote) {
    tiny_mce_js_exec_counter[412]++;
    tiny_mce_js_exec_counter[413]++;
    var i, v, t;
    tiny_mce_js_exec_counter[415]++;
    quote = quote || '"';
    if (o == null) 
    {
      tiny_mce_js_exec_counter[416]++;
      return "null";
    }
    tiny_mce_js_exec_counter[417]++;
    t = typeof o;
    if (t == "string") 
    {
      tiny_mce_js_exec_counter[418]++;
      v = "\bb\tt\nn\ff\rr\"\"''\\\\";
      tiny_mce_js_exec_counter[419]++;
      return quote + o.replace(/([\u0080-\uFFFF\x00-\x1f\"\'])/g, function(a, b) {
  tiny_mce_js_exec_counter[420]++;
  if (quote === '"' && a === "'") 
  {
    tiny_mce_js_exec_counter[421]++;
    return a;
  }
  tiny_mce_js_exec_counter[422]++;
  i = v.indexOf(b);
  if (i + 1) 
  {
    tiny_mce_js_exec_counter[423]++;
    return "\\" + v.charAt(i + 1);
  }
  tiny_mce_js_exec_counter[424]++;
  a = b.charCodeAt().toString(16);
  tiny_mce_js_exec_counter[425]++;
  return "\\u" + "0000".substring(a.length) + a;
}) + quote;
    }
    if (t == "object") 
    {
      if (o.hasOwnProperty && o instanceof Array) 
      {
        for (i = 0 , v = "["; i < o.length; i++) 
          {
            tiny_mce_js_exec_counter[426]++;
            v += (i > 0 ? "," : "") + serialize(o[i], quote);
          }
        tiny_mce_js_exec_counter[427]++;
        return v + "]";
      }
      tiny_mce_js_exec_counter[428]++;
      v = "{";
      for (i in o) 
        {
          tiny_mce_js_exec_counter[429]++;
          v += typeof o[i] != "function" ? (v.length > 1 ? "," + quote : quote) + i + quote + ":" + serialize(o[i], quote) : "";
        }
      tiny_mce_js_exec_counter[430]++;
      return v + "}";
    }
    tiny_mce_js_exec_counter[431]++;
    return "" + o;
  }
  tiny_mce_js_exec_counter[432]++;
  tinymce.util.JSON = {serialize: serialize, parse: function(s) {
  tiny_mce_js_exec_counter[433]++;
  try {
    tiny_mce_js_exec_counter[435]++;
    return eval("(" + s + ")");
  }  catch (ex) {
}
  tiny_mce_js_exec_counter[434]++;
}};
  tiny_mce_js_exec_counter[411]++;
})();
tiny_mce_js_exec_counter[436]++;
tinymce.create("static tinymce.util.XHR", {send: function(g) {
  tiny_mce_js_exec_counter[437]++;
  tiny_mce_js_exec_counter[439]++;
  var a, e, b = window, h = 0;
  tiny_mce_js_exec_counter[441]++;
  g.scope = g.scope || this;
  tiny_mce_js_exec_counter[442]++;
  g.success_scope = g.success_scope || g.scope;
  tiny_mce_js_exec_counter[443]++;
  g.error_scope = g.error_scope || g.scope;
  tiny_mce_js_exec_counter[444]++;
  g.async = g.async === false ? false : true;
  tiny_mce_js_exec_counter[445]++;
  g.data = g.data || "";
  function d(i) {
    tiny_mce_js_exec_counter[446]++;
    tiny_mce_js_exec_counter[447]++;
    a = 0;
    try {
      tiny_mce_js_exec_counter[448]++;
      a = new ActiveXObject(i);
    }    catch (c) {
}
    tiny_mce_js_exec_counter[449]++;
    return a;
  }
  tiny_mce_js_exec_counter[450]++;
  a = b.XMLHttpRequest ? new XMLHttpRequest() : d("Microsoft.XMLHTTP") || d("Msxml2.XMLHTTP");
  if (a) 
  {
    if (a.overrideMimeType) 
    {
      tiny_mce_js_exec_counter[451]++;
      a.overrideMimeType(g.content_type);
    }
    tiny_mce_js_exec_counter[452]++;
    a.open(g.type || (g.data ? "POST" : "GET"), g.url, g.async);
    if (g.content_type) 
    {
      tiny_mce_js_exec_counter[453]++;
      a.setRequestHeader("Content-Type", g.content_type);
    }
    tiny_mce_js_exec_counter[454]++;
    a.setRequestHeader("X-Requested-With", "XMLHttpRequest");
    tiny_mce_js_exec_counter[455]++;
    a.send(g.data);
    function f() {
      tiny_mce_js_exec_counter[456]++;
      if (!g.async || a.readyState == 4 || h++ > 10000) 
      {
        if (g.success && h < 10000 && a.status == 200) 
        {
          tiny_mce_js_exec_counter[458]++;
          g.success.call(g.success_scope, "" + a.responseText, a, g);
        } else {
          if (g.error) 
          {
            tiny_mce_js_exec_counter[459]++;
            g.error.call(g.error_scope, h > 10000 ? "TIMED_OUT" : "GENERAL", a, g);
          }
        }
        tiny_mce_js_exec_counter[460]++;
        a = null;
      } else {
        tiny_mce_js_exec_counter[461]++;
        b.setTimeout(f, 10);
      }
      tiny_mce_js_exec_counter[457]++;
    }    if (!g.async) 
    {
      tiny_mce_js_exec_counter[462]++;
      return f();
    }
    tiny_mce_js_exec_counter[463]++;
    e = b.setTimeout(f, 10);
  }
  tiny_mce_js_exec_counter[438]++;
}});
tiny_mce_js_exec_counter[464]++;
(function() {
  tiny_mce_js_exec_counter[465]++;
  tiny_mce_js_exec_counter[467]++;
  var c = tinymce.extend, b = tinymce.util.JSON, a = tinymce.util.XHR;
  tiny_mce_js_exec_counter[469]++;
  tinymce.create("tinymce.util.JSONRequest", {JSONRequest: function(d) {
  tiny_mce_js_exec_counter[470]++;
  tiny_mce_js_exec_counter[472]++;
  this.settings = c({}, d);
  tiny_mce_js_exec_counter[473]++;
  this.count = 0;
  tiny_mce_js_exec_counter[471]++;
}, send: function(f) {
  tiny_mce_js_exec_counter[474]++;
  tiny_mce_js_exec_counter[476]++;
  var e = f.error, d = f.success;
  tiny_mce_js_exec_counter[478]++;
  f = c(this.settings, f);
  tiny_mce_js_exec_counter[479]++;
  f.success = function(h, g) {
  tiny_mce_js_exec_counter[480]++;
  tiny_mce_js_exec_counter[482]++;
  h = b.parse(h);
  if (typeof (h) == "undefined") 
  {
    tiny_mce_js_exec_counter[483]++;
    h = {error: "JSON Parse error."};
  }
  if (h.error) 
  {
    tiny_mce_js_exec_counter[484]++;
    e.call(f.error_scope || f.scope, h.error, g);
  } else {
    tiny_mce_js_exec_counter[485]++;
    d.call(f.success_scope || f.scope, h.result);
  }
  tiny_mce_js_exec_counter[481]++;
};
  tiny_mce_js_exec_counter[486]++;
  f.error = function(h, g) {
  tiny_mce_js_exec_counter[487]++;
  if (e) 
  {
    tiny_mce_js_exec_counter[489]++;
    e.call(f.error_scope || f.scope, h, g);
  }
  tiny_mce_js_exec_counter[488]++;
};
  tiny_mce_js_exec_counter[490]++;
  f.data = b.serialize({id: f.id || "c" + (this.count++), method: f.method, params: f.params});
  tiny_mce_js_exec_counter[491]++;
  f.content_type = "application/json";
  tiny_mce_js_exec_counter[492]++;
  a.send(f);
  tiny_mce_js_exec_counter[475]++;
}, "static": {sendRPC: function(d) {
  tiny_mce_js_exec_counter[493]++;
  tiny_mce_js_exec_counter[494]++;
  return new tinymce.util.JSONRequest().send(d);
}}});
  tiny_mce_js_exec_counter[466]++;
}());
tiny_mce_js_exec_counter[495]++;
(function(i) {
  tiny_mce_js_exec_counter[496]++;
  tiny_mce_js_exec_counter[498]++;
  var a, g, d, j = /[&\"\u007E-\uFFFF]/g, b = /[<>&\u007E-\uFFFF]/g, f = /[<>&\"\']/g, c = /&(#)?([\w]+);/g;
  tiny_mce_js_exec_counter[500]++;
  g = {'"': "&quot;", "'": "&#39;", "<": "&lt;", ">": "&gt;", "&": "&amp;"};
  tiny_mce_js_exec_counter[501]++;
  d = {"&lt;": "<", "&gt;": ">", "&amp;": "&", "&quot;": '"', "&apos;": "'"};
  function h(k) {
    tiny_mce_js_exec_counter[502]++;
    tiny_mce_js_exec_counter[503]++;
    var l;
    tiny_mce_js_exec_counter[505]++;
    l = document.createElement("div");
    tiny_mce_js_exec_counter[506]++;
    l.innerHTML = k;
    tiny_mce_js_exec_counter[507]++;
    return l.textContent || l.innerText || k;
  }
  function e(l, o) {
    tiny_mce_js_exec_counter[508]++;
    tiny_mce_js_exec_counter[510]++;
    var m, n, k, p = {};
    if (l) 
    {
      tiny_mce_js_exec_counter[512]++;
      l = l.split(",");
      tiny_mce_js_exec_counter[513]++;
      o = o || 10;
      for (m = 0; m < l.length; m += 2) 
        {
          tiny_mce_js_exec_counter[514]++;
          n = String.fromCharCode(parseInt(l[m], o));
          if (!g[n]) 
          {
            tiny_mce_js_exec_counter[515]++;
            k = "&" + l[m + 1] + ";";
            tiny_mce_js_exec_counter[516]++;
            p[n] = k;
            tiny_mce_js_exec_counter[517]++;
            p[k] = n;
          }
        }
      tiny_mce_js_exec_counter[518]++;
      return p;
    }
    tiny_mce_js_exec_counter[509]++;
  }
  tiny_mce_js_exec_counter[519]++;
  a = e("50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,t9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro", 32);
  tiny_mce_js_exec_counter[520]++;
  i.html = i.html || {};
  tiny_mce_js_exec_counter[521]++;
  i.html.Entities = {encodeRaw: function(l, k) {
  tiny_mce_js_exec_counter[522]++;
  tiny_mce_js_exec_counter[523]++;
  return l.replace(k ? j : b, function(m) {
  tiny_mce_js_exec_counter[524]++;
  tiny_mce_js_exec_counter[525]++;
  return g[m] || m;
});
}, encodeAllRaw: function(k) {
  tiny_mce_js_exec_counter[526]++;
  tiny_mce_js_exec_counter[527]++;
  return ("" + k).replace(f, function(l) {
  tiny_mce_js_exec_counter[528]++;
  tiny_mce_js_exec_counter[529]++;
  return g[l] || l;
});
}, encodeNumeric: function(l, k) {
  tiny_mce_js_exec_counter[530]++;
  tiny_mce_js_exec_counter[531]++;
  return l.replace(k ? j : b, function(m) {
  tiny_mce_js_exec_counter[532]++;
  tiny_mce_js_exec_counter[533]++;
  return g[m] || "&#" + m.charCodeAt(0) + ";";
});
}, encodeNamed: function(m, k, l) {
  tiny_mce_js_exec_counter[534]++;
  tiny_mce_js_exec_counter[535]++;
  l = l || a;
  tiny_mce_js_exec_counter[536]++;
  return m.replace(k ? j : b, function(n) {
  tiny_mce_js_exec_counter[537]++;
  tiny_mce_js_exec_counter[538]++;
  return g[n] || l[n] || n;
});
}, getEncodeFunc: function(k, n) {
  tiny_mce_js_exec_counter[539]++;
  tiny_mce_js_exec_counter[540]++;
  var o = i.html.Entities;
  tiny_mce_js_exec_counter[542]++;
  n = e(n) || a;
  function l(q, p) {
    tiny_mce_js_exec_counter[543]++;
    tiny_mce_js_exec_counter[544]++;
    return q.replace(p ? j : b, function(r) {
  tiny_mce_js_exec_counter[545]++;
  tiny_mce_js_exec_counter[546]++;
  return g[r] || n[r] || "&#" + r.charCodeAt(0) + ";" || r;
});
  }
  function m(q, p) {
    tiny_mce_js_exec_counter[547]++;
    tiny_mce_js_exec_counter[548]++;
    return o.encodeNamed(q, p, n);
  }
  tiny_mce_js_exec_counter[549]++;
  k = i.makeMap(k.replace(/\+/g, ","));
  if (k.named && k.numeric) 
  {
    tiny_mce_js_exec_counter[550]++;
    return l;
  }
  if (k.named) 
  {
    if (n) 
    {
      tiny_mce_js_exec_counter[551]++;
      return m;
    }
    tiny_mce_js_exec_counter[552]++;
    return o.encodeNamed;
  }
  if (k.numeric) 
  {
    tiny_mce_js_exec_counter[553]++;
    return o.encodeNumeric;
  }
  tiny_mce_js_exec_counter[554]++;
  return o.encodeRaw;
}, decode: function(k) {
  tiny_mce_js_exec_counter[555]++;
  tiny_mce_js_exec_counter[556]++;
  return k.replace(c, function(m, l, n) {
  tiny_mce_js_exec_counter[557]++;
  if (l) 
  {
    tiny_mce_js_exec_counter[558]++;
    return String.fromCharCode(n);
  }
  tiny_mce_js_exec_counter[559]++;
  return d[m] || a[m] || h(m);
});
}};
  tiny_mce_js_exec_counter[497]++;
})(tinymce);
tiny_mce_js_exec_counter[560]++;
tinymce.html.Styles = function(d, f) {
  tiny_mce_js_exec_counter[561]++;
  tiny_mce_js_exec_counter[562]++;
  var k = /rgb\s*\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*\)/gi, h = /(?:url(?:(?:\(\s*\"([^\"]+)\"\s*\))|(?:\(\s*\'([^\']+)\'\s*\))|(?:\(\s*([^)\s]+)\s*\))))|(?:\'([^\']+)\')|(?:\"([^\"]+)\")/gi, b = /\s*([^:]+):\s*([^;]+);?/g, l = /\s+$/, m = /rgb/, e, g, a = {}, j;
  tiny_mce_js_exec_counter[564]++;
  d = d || {};
  tiny_mce_js_exec_counter[565]++;
  j = "\\\" \\' \\; \\: ; : _".split(" ");
  for (g = 0; g < j.length; g++) 
    {
      tiny_mce_js_exec_counter[566]++;
      a[j[g]] = "_" + g;
      tiny_mce_js_exec_counter[567]++;
      a["_" + g] = j[g];
    }
  function c(n, q, p, i) {
    tiny_mce_js_exec_counter[568]++;
    function o(r) {
      tiny_mce_js_exec_counter[569]++;
      tiny_mce_js_exec_counter[570]++;
      r = parseInt(r).toString(16);
      tiny_mce_js_exec_counter[571]++;
      return r.length > 1 ? r : "0" + r;
    }
    tiny_mce_js_exec_counter[572]++;
    return "#" + o(q) + o(p) + o(i);
  }
  tiny_mce_js_exec_counter[573]++;
  return {toHex: function(i) {
  tiny_mce_js_exec_counter[574]++;
  tiny_mce_js_exec_counter[575]++;
  return i.replace(k, c);
}, parse: function(r) {
  tiny_mce_js_exec_counter[576]++;
  tiny_mce_js_exec_counter[577]++;
  var y = {}, p, n, v, q, u = d.url_converter, x = d.url_converter_scope || this;
  function o(C, F) {
    tiny_mce_js_exec_counter[579]++;
    tiny_mce_js_exec_counter[581]++;
    var E, B, A, D;
    tiny_mce_js_exec_counter[583]++;
    E = y[C + "-top" + F];
    if (!E) 
    {
      tiny_mce_js_exec_counter[584]++;
      return;
    }
    tiny_mce_js_exec_counter[585]++;
    B = y[C + "-right" + F];
    if (E != B) 
    {
      tiny_mce_js_exec_counter[586]++;
      return;
    }
    tiny_mce_js_exec_counter[587]++;
    A = y[C + "-bottom" + F];
    if (B != A) 
    {
      tiny_mce_js_exec_counter[588]++;
      return;
    }
    tiny_mce_js_exec_counter[589]++;
    D = y[C + "-left" + F];
    if (A != D) 
    {
      tiny_mce_js_exec_counter[590]++;
      return;
    }
    tiny_mce_js_exec_counter[591]++;
    y[C + F] = D;
    tiny_mce_js_exec_counter[592]++;
    delete y[C + "-top" + F];
    tiny_mce_js_exec_counter[593]++;
    delete y[C + "-right" + F];
    tiny_mce_js_exec_counter[594]++;
    delete y[C + "-bottom" + F];
    tiny_mce_js_exec_counter[595]++;
    delete y[C + "-left" + F];
    tiny_mce_js_exec_counter[580]++;
  }
  function t(B) {
    tiny_mce_js_exec_counter[596]++;
    tiny_mce_js_exec_counter[597]++;
    var C = y[B], A;
    if (!C || C.indexOf(" ") < 0) 
    {
      tiny_mce_js_exec_counter[599]++;
      return;
    }
    tiny_mce_js_exec_counter[600]++;
    C = C.split(" ");
    tiny_mce_js_exec_counter[601]++;
    A = C.length;
    while (A--) 
      {
        if (C[A] !== C[0]) 
        {
          tiny_mce_js_exec_counter[602]++;
          return false;
        }
      }
    tiny_mce_js_exec_counter[603]++;
    y[B] = C[0];
    tiny_mce_js_exec_counter[604]++;
    return true;
  }
  function z(C, B, A, D) {
    tiny_mce_js_exec_counter[605]++;
    if (!t(B)) 
    {
      tiny_mce_js_exec_counter[607]++;
      return;
    }
    if (!t(A)) 
    {
      tiny_mce_js_exec_counter[608]++;
      return;
    }
    if (!t(D)) 
    {
      tiny_mce_js_exec_counter[609]++;
      return;
    }
    tiny_mce_js_exec_counter[610]++;
    y[C] = y[B] + " " + y[A] + " " + y[D];
    tiny_mce_js_exec_counter[611]++;
    delete y[B];
    tiny_mce_js_exec_counter[612]++;
    delete y[A];
    tiny_mce_js_exec_counter[613]++;
    delete y[D];
    tiny_mce_js_exec_counter[606]++;
  }
  function s(A) {
    tiny_mce_js_exec_counter[614]++;
    tiny_mce_js_exec_counter[615]++;
    q = true;
    tiny_mce_js_exec_counter[616]++;
    return a[A];
  }
  function i(B, A) {
    tiny_mce_js_exec_counter[617]++;
    if (q) 
    {
      tiny_mce_js_exec_counter[618]++;
      B = B.replace(/_[0-9]/g, function(C) {
  tiny_mce_js_exec_counter[619]++;
  tiny_mce_js_exec_counter[620]++;
  return a[C];
});
    }
    if (!A) 
    {
      tiny_mce_js_exec_counter[621]++;
      B = B.replace(/\\([\'\";:])/g, "$1");
    }
    tiny_mce_js_exec_counter[622]++;
    return B;
  }
  if (r) 
  {
    tiny_mce_js_exec_counter[623]++;
    r = r.replace(/\\[\"\';:_]/g, s).replace(/\"[^\"]+\"|\'[^\']+\'/g, function(A) {
  tiny_mce_js_exec_counter[624]++;
  tiny_mce_js_exec_counter[625]++;
  return A.replace(/[;:]/g, s);
});
    while (p = b.exec(r)) 
      {
        tiny_mce_js_exec_counter[626]++;
        n = p[1].replace(l, "").toLowerCase();
        tiny_mce_js_exec_counter[627]++;
        v = p[2].replace(l, "");
        if (n && v.length > 0) 
        {
          if (n === "font-weight" && v === "700") 
          {
            tiny_mce_js_exec_counter[628]++;
            v = "bold";
          } else {
            if (n === "color" || n === "background-color") 
            {
              tiny_mce_js_exec_counter[629]++;
              v = v.toLowerCase();
            }
          }
          tiny_mce_js_exec_counter[630]++;
          v = v.replace(k, c);
          tiny_mce_js_exec_counter[631]++;
          v = v.replace(h, function(B, A, E, D, F, C) {
  tiny_mce_js_exec_counter[632]++;
  tiny_mce_js_exec_counter[633]++;
  F = F || C;
  if (F) 
  {
    tiny_mce_js_exec_counter[634]++;
    F = i(F);
    tiny_mce_js_exec_counter[635]++;
    return "'" + F.replace(/\'/g, "\\'") + "'";
  }
  tiny_mce_js_exec_counter[636]++;
  A = i(A || E || D);
  if (u) 
  {
    tiny_mce_js_exec_counter[637]++;
    A = u.call(x, A, "style");
  }
  tiny_mce_js_exec_counter[638]++;
  return "url('" + A.replace(/\'/g, "\\'") + "')";
});
          tiny_mce_js_exec_counter[639]++;
          y[n] = q ? i(v, true) : v;
        }
        tiny_mce_js_exec_counter[640]++;
        b.lastIndex = p.index + p[0].length;
      }
    tiny_mce_js_exec_counter[641]++;
    o("border", "");
    tiny_mce_js_exec_counter[642]++;
    o("border", "-width");
    tiny_mce_js_exec_counter[643]++;
    o("border", "-color");
    tiny_mce_js_exec_counter[644]++;
    o("border", "-style");
    tiny_mce_js_exec_counter[645]++;
    o("padding", "");
    tiny_mce_js_exec_counter[646]++;
    o("margin", "");
    tiny_mce_js_exec_counter[647]++;
    z("border", "border-width", "border-style", "border-color");
    if (y.border === "medium none") 
    {
      tiny_mce_js_exec_counter[648]++;
      delete y.border;
    }
  }
  tiny_mce_js_exec_counter[649]++;
  return y;
}, serialize: function(p, r) {
  tiny_mce_js_exec_counter[650]++;
  tiny_mce_js_exec_counter[651]++;
  var o = "", n, q;
  function i(t) {
    tiny_mce_js_exec_counter[653]++;
    tiny_mce_js_exec_counter[655]++;
    var x, u, s, t, v;
    tiny_mce_js_exec_counter[657]++;
    x = f.styles[t];
    if (x) 
    {
      for (u = 0 , s = x.length; u < s; u++) 
        {
          tiny_mce_js_exec_counter[658]++;
          t = x[u];
          tiny_mce_js_exec_counter[659]++;
          v = p[t];
          if (v !== e) 
          {
            tiny_mce_js_exec_counter[660]++;
            o += (o.length > 0 ? " " : "") + t + ": " + v + ";";
          }
        }
    }
    tiny_mce_js_exec_counter[654]++;
  }
  if (r && f && f.styles) 
  {
    tiny_mce_js_exec_counter[661]++;
    i("*");
    tiny_mce_js_exec_counter[662]++;
    i(n);
  } else {
    for (n in p) 
      {
        tiny_mce_js_exec_counter[663]++;
        q = p[n];
        if (q !== e) 
        {
          tiny_mce_js_exec_counter[664]++;
          o += (o.length > 0 ? " " : "") + n + ": " + q + ";";
        }
      }
  }
  tiny_mce_js_exec_counter[665]++;
  return o;
}};
};
tiny_mce_js_exec_counter[666]++;
(function(l) {
  tiny_mce_js_exec_counter[667]++;
  tiny_mce_js_exec_counter[669]++;
  var g = {}, i, k, f, d, b, e, c = l.makeMap, j = l.each;
  function h(n, m) {
    tiny_mce_js_exec_counter[671]++;
    tiny_mce_js_exec_counter[672]++;
    return n.split(m || ",");
  }
  function a(q, p) {
    tiny_mce_js_exec_counter[673]++;
    tiny_mce_js_exec_counter[674]++;
    var n, o = {};
    function m(r) {
      tiny_mce_js_exec_counter[676]++;
      tiny_mce_js_exec_counter[677]++;
      return r.replace(/[A-Z]+/g, function(s) {
  tiny_mce_js_exec_counter[678]++;
  tiny_mce_js_exec_counter[679]++;
  return m(q[s]);
});
    }
    for (n in q) 
      {
        if (q.hasOwnProperty(n)) 
        {
          tiny_mce_js_exec_counter[680]++;
          q[n] = m(q[n]);
        }
      }
    tiny_mce_js_exec_counter[681]++;
    m(p).replace(/#/g, "#text").replace(/(\w+)\[([^\]]+)\]\[([^\]]*)\]/g, function(u, s, r, t) {
  tiny_mce_js_exec_counter[682]++;
  tiny_mce_js_exec_counter[684]++;
  r = h(r, "|");
  tiny_mce_js_exec_counter[685]++;
  o[s] = {attributes: c(r), attributesOrder: r, children: c(t, "|", {"#comment": {}})};
  tiny_mce_js_exec_counter[683]++;
});
    tiny_mce_js_exec_counter[686]++;
    return o;
  }
  tiny_mce_js_exec_counter[687]++;
  k = "h1,h2,h3,h4,h5,h6,hr,p,div,address,pre,form,table,tbody,thead,tfoot,th,tr,td,li,ol,ul,caption,blockquote,center,dl,dt,dd,dir,fieldset,noscript,menu,isindex,samp,header,footer,article,section,hgroup";
  tiny_mce_js_exec_counter[688]++;
  k = c(k, ",", c(k.toUpperCase()));
  tiny_mce_js_exec_counter[689]++;
  g = a({Z: "H|K|N|O|P", Y: "X|form|R|Q", ZG: "E|span|width|align|char|charoff|valign", X: "p|T|div|U|W|isindex|fieldset|table", ZF: "E|align|char|charoff|valign", W: "pre|hr|blockquote|address|center|noframes", ZE: "abbr|axis|headers|scope|rowspan|colspan|align|char|charoff|valign|nowrap|bgcolor|width|height", ZD: "[E][S]", U: "ul|ol|dl|menu|dir", ZC: "p|Y|div|U|W|table|br|span|bdo|object|applet|img|map|K|N|Q", T: "h1|h2|h3|h4|h5|h6", ZB: "X|S|Q", S: "R|P", ZA: "a|G|J|M|O|P", R: "a|H|K|N|O", Q: "noscript|P", P: "ins|del|script", O: "input|select|textarea|label|button", N: "M|L", M: "em|strong|dfn|code|q|samp|kbd|var|cite|abbr|acronym", L: "sub|sup", K: "J|I", J: "tt|i|b|u|s|strike", I: "big|small|font|basefont", H: "G|F", G: "br|span|bdo", F: "object|applet|img|map|iframe", E: "A|B|C", D: "accesskey|tabindex|onfocus|onblur", C: "onclick|ondblclick|onmousedown|onmouseup|onmouseover|onmousemove|onmouseout|onkeypress|onkeydown|onkeyup", B: "lang|xml:lang|dir", A: "id|class|style|title"}, "script[id|charset|type|language|src|defer|xml:space][]style[B|id|type|media|title|xml:space][]object[E|declare|classid|codebase|data|type|codetype|archive|standby|width|height|usemap|name|tabindex|align|border|hspace|vspace][#|param|Y]param[id|name|value|valuetype|type][]p[E|align][#|S]a[E|D|charset|type|name|href|hreflang|rel|rev|shape|coords|target][#|Z]br[A|clear][]span[E][#|S]bdo[A|C|B][#|S]applet[A|codebase|archive|code|object|alt|name|width|height|align|hspace|vspace][#|param|Y]h1[E|align][#|S]img[E|src|alt|name|longdesc|width|height|usemap|ismap|align|border|hspace|vspace][]map[B|C|A|name][X|form|Q|area]h2[E|align][#|S]iframe[A|longdesc|name|src|frameborder|marginwidth|marginheight|scrolling|align|width|height][#|Y]h3[E|align][#|S]tt[E][#|S]i[E][#|S]b[E][#|S]u[E][#|S]s[E][#|S]strike[E][#|S]big[E][#|S]small[E][#|S]font[A|B|size|color|face][#|S]basefont[id|size|color|face][]em[E][#|S]strong[E][#|S]dfn[E][#|S]code[E][#|S]q[E|cite][#|S]samp[E][#|S]kbd[E][#|S]var[E][#|S]cite[E][#|S]abbr[E][#|S]acronym[E][#|S]sub[E][#|S]sup[E][#|S]input[E|D|type|name|value|checked|disabled|readonly|size|maxlength|src|alt|usemap|onselect|onchange|accept|align][]select[E|name|size|multiple|disabled|tabindex|onfocus|onblur|onchange][optgroup|option]optgroup[E|disabled|label][option]option[E|selected|disabled|label|value][]textarea[E|D|name|rows|cols|disabled|readonly|onselect|onchange][]label[E|for|accesskey|onfocus|onblur][#|S]button[E|D|name|value|type|disabled][#|p|T|div|U|W|table|G|object|applet|img|map|K|N|Q]h4[E|align][#|S]ins[E|cite|datetime][#|Y]h5[E|align][#|S]del[E|cite|datetime][#|Y]h6[E|align][#|S]div[E|align][#|Y]ul[E|type|compact][li]li[E|type|value][#|Y]ol[E|type|compact|start][li]dl[E|compact][dt|dd]dt[E][#|S]dd[E][#|Y]menu[E|compact][li]dir[E|compact][li]pre[E|width|xml:space][#|ZA]hr[E|align|noshade|size|width][]blockquote[E|cite][#|Y]address[E][#|S|p]center[E][#|Y]noframes[E][#|Y]isindex[A|B|prompt][]fieldset[E][#|legend|Y]legend[E|accesskey|align][#|S]table[E|summary|width|border|frame|rules|cellspacing|cellpadding|align|bgcolor][caption|col|colgroup|thead|tfoot|tbody|tr]caption[E|align][#|S]col[ZG][]colgroup[ZG][col]thead[ZF][tr]tr[ZF|bgcolor][th|td]th[E|ZE][#|Y]form[E|action|method|name|enctype|onsubmit|onreset|accept|accept-charset|target][#|X|R|Q]noscript[E][#|Y]td[E|ZE][#|Y]tfoot[ZF][tr]tbody[ZF][tr]area[E|D|shape|coords|href|nohref|alt|target][]base[id|href|target][]body[E|onload|onunload|background|bgcolor|text|link|vlink|alink][#|Y]");
  tiny_mce_js_exec_counter[690]++;
  i = c("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected,preload,autoplay,loop,controls");
  tiny_mce_js_exec_counter[691]++;
  f = c("area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed,source");
  tiny_mce_js_exec_counter[692]++;
  d = l.extend(c("td,th,iframe,video,object"), f);
  tiny_mce_js_exec_counter[693]++;
  b = c("pre,script,style");
  tiny_mce_js_exec_counter[694]++;
  e = c("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr");
  tiny_mce_js_exec_counter[695]++;
  l.html.Schema = function(p) {
  tiny_mce_js_exec_counter[696]++;
  tiny_mce_js_exec_counter[698]++;
  var x = this, m = {}, n = {}, u = [], o;
  tiny_mce_js_exec_counter[700]++;
  p = p || {};
  if (p.verify_html === false) 
  {
    tiny_mce_js_exec_counter[701]++;
    p.valid_elements = "*[*]";
  }
  if (p.valid_styles) 
  {
    tiny_mce_js_exec_counter[702]++;
    o = {};
    tiny_mce_js_exec_counter[703]++;
    j(p.valid_styles, function(z, y) {
  tiny_mce_js_exec_counter[704]++;
  tiny_mce_js_exec_counter[706]++;
  o[y] = l.explode(z);
  tiny_mce_js_exec_counter[705]++;
});
  }
  function v(y) {
    tiny_mce_js_exec_counter[707]++;
    tiny_mce_js_exec_counter[708]++;
    return new RegExp("^" + y.replace(/([?+*])/g, ".$1") + "$");
  }
  function r(F) {
    tiny_mce_js_exec_counter[709]++;
    tiny_mce_js_exec_counter[711]++;
    var E, A, T, P, U, z, C, O, R, K, S, W, I, D, Q, y, M, B, V, X, J, N, H = /^([#+-])?([^\[\/]+)(?:\/([^\[]+))?(?:\[([^\]]+)\])?$/, L = /^([!\-])?(\w+::\w+|[^=:<]+)?(?:([=:<])(.*))?$/, G = /[*?+]/;
    if (F) 
    {
      tiny_mce_js_exec_counter[713]++;
      F = h(F);
      if (m["@"]) 
      {
        tiny_mce_js_exec_counter[714]++;
        M = m["@"].attributes;
        tiny_mce_js_exec_counter[715]++;
        B = m["@"].attributesOrder;
      }
      for (E = 0 , A = F.length; E < A; E++) 
        {
          tiny_mce_js_exec_counter[716]++;
          z = H.exec(F[E]);
          if (z) 
          {
            tiny_mce_js_exec_counter[717]++;
            Q = z[1];
            tiny_mce_js_exec_counter[718]++;
            K = z[2];
            tiny_mce_js_exec_counter[719]++;
            y = z[3];
            tiny_mce_js_exec_counter[720]++;
            R = z[4];
            tiny_mce_js_exec_counter[721]++;
            I = {};
            tiny_mce_js_exec_counter[722]++;
            D = [];
            tiny_mce_js_exec_counter[723]++;
            C = {attributes: I, attributesOrder: D};
            if (Q === "#") 
            {
              tiny_mce_js_exec_counter[724]++;
              C.paddEmpty = true;
            }
            if (Q === "-") 
            {
              tiny_mce_js_exec_counter[725]++;
              C.removeEmpty = true;
            }
            if (M) 
            {
              for (X in M) 
                {
                  tiny_mce_js_exec_counter[726]++;
                  I[X] = M[X];
                }
              tiny_mce_js_exec_counter[727]++;
              D.push.apply(D, B);
            }
            if (R) 
            {
              tiny_mce_js_exec_counter[728]++;
              R = h(R, "|");
              for (T = 0 , P = R.length; T < P; T++) 
                {
                  tiny_mce_js_exec_counter[729]++;
                  z = L.exec(R[T]);
                  if (z) 
                  {
                    tiny_mce_js_exec_counter[730]++;
                    O = {};
                    tiny_mce_js_exec_counter[731]++;
                    W = z[1];
                    tiny_mce_js_exec_counter[732]++;
                    S = z[2].replace(/::/g, ":");
                    tiny_mce_js_exec_counter[733]++;
                    Q = z[3];
                    tiny_mce_js_exec_counter[734]++;
                    N = z[4];
                    if (W === "!") 
                    {
                      tiny_mce_js_exec_counter[735]++;
                      C.attributesRequired = C.attributesRequired || [];
                      tiny_mce_js_exec_counter[736]++;
                      C.attributesRequired.push(S);
                      tiny_mce_js_exec_counter[737]++;
                      O.required = true;
                    }
                    if (W === "-") 
                    {
                      tiny_mce_js_exec_counter[738]++;
                      delete I[S];
                      tiny_mce_js_exec_counter[739]++;
                      D.splice(l.inArray(D, S), 1);
                      tiny_mce_js_exec_counter[740]++;
                      continue;
                    }
                    if (Q) 
                    {
                      if (Q === "=") 
                      {
                        tiny_mce_js_exec_counter[741]++;
                        C.attributesDefault = C.attributesDefault || [];
                        tiny_mce_js_exec_counter[742]++;
                        C.attributesDefault.push({name: S, value: N});
                        tiny_mce_js_exec_counter[743]++;
                        O.defaultValue = N;
                      }
                      if (Q === ":") 
                      {
                        tiny_mce_js_exec_counter[744]++;
                        C.attributesForced = C.attributesForced || [];
                        tiny_mce_js_exec_counter[745]++;
                        C.attributesForced.push({name: S, value: N});
                        tiny_mce_js_exec_counter[746]++;
                        O.forcedValue = N;
                      }
                      if (Q === "<") 
                      {
                        tiny_mce_js_exec_counter[747]++;
                        O.validValues = c(N, "?");
                      }
                    }
                    if (G.test(S)) 
                    {
                      tiny_mce_js_exec_counter[748]++;
                      C.attributePatterns = C.attributePatterns || [];
                      tiny_mce_js_exec_counter[749]++;
                      O.pattern = v(S);
                      tiny_mce_js_exec_counter[750]++;
                      C.attributePatterns.push(O);
                    } else {
                      if (!I[S]) 
                      {
                        tiny_mce_js_exec_counter[751]++;
                        D.push(S);
                      }
                      tiny_mce_js_exec_counter[752]++;
                      I[S] = O;
                    }
                  }
                }
            }
            if (!M && K == "@") 
            {
              tiny_mce_js_exec_counter[753]++;
              M = I;
              tiny_mce_js_exec_counter[754]++;
              B = D;
            }
            if (y) 
            {
              tiny_mce_js_exec_counter[755]++;
              C.outputName = K;
              tiny_mce_js_exec_counter[756]++;
              m[y] = C;
            }
            if (G.test(K)) 
            {
              tiny_mce_js_exec_counter[757]++;
              C.pattern = v(K);
              tiny_mce_js_exec_counter[758]++;
              u.push(C);
            } else {
              tiny_mce_js_exec_counter[759]++;
              m[K] = C;
            }
          }
        }
    }
    tiny_mce_js_exec_counter[710]++;
  }
  function t(y) {
    tiny_mce_js_exec_counter[760]++;
    tiny_mce_js_exec_counter[762]++;
    m = {};
    tiny_mce_js_exec_counter[763]++;
    u = [];
    tiny_mce_js_exec_counter[764]++;
    r(y);
    tiny_mce_js_exec_counter[765]++;
    j(g, function(A, z) {
  tiny_mce_js_exec_counter[766]++;
  tiny_mce_js_exec_counter[768]++;
  n[z] = A.children;
  tiny_mce_js_exec_counter[767]++;
});
    tiny_mce_js_exec_counter[761]++;
  }
  function q(z) {
    tiny_mce_js_exec_counter[769]++;
    tiny_mce_js_exec_counter[771]++;
    var y = /^(~)?(.+)$/;
    if (z) 
    {
      tiny_mce_js_exec_counter[773]++;
      j(h(z), function(C) {
  tiny_mce_js_exec_counter[774]++;
  tiny_mce_js_exec_counter[776]++;
  var B = y.exec(C), D = B[1] === "~" ? "span" : "div", A = B[2];
  tiny_mce_js_exec_counter[778]++;
  n[A] = n[D];
  tiny_mce_js_exec_counter[779]++;
  j(n, function(E, F) {
  tiny_mce_js_exec_counter[780]++;
  if (E[D]) 
  {
    tiny_mce_js_exec_counter[782]++;
    E[A] = E[D];
  }
  tiny_mce_js_exec_counter[781]++;
});
  tiny_mce_js_exec_counter[775]++;
});
    }
    tiny_mce_js_exec_counter[770]++;
  }
  function s(z) {
    tiny_mce_js_exec_counter[783]++;
    tiny_mce_js_exec_counter[785]++;
    var y = /^([+\-]?)(\w+)\[([^\]]+)\]$/;
    if (z) 
    {
      tiny_mce_js_exec_counter[787]++;
      j(h(z), function(D) {
  tiny_mce_js_exec_counter[788]++;
  tiny_mce_js_exec_counter[790]++;
  var C = y.exec(D), A, B;
  if (C) 
  {
    tiny_mce_js_exec_counter[792]++;
    B = C[1];
    if (B) 
    {
      tiny_mce_js_exec_counter[793]++;
      A = n[C[2]];
    } else {
      tiny_mce_js_exec_counter[794]++;
      A = n[C[2]] = {"#comment": {}};
    }
    tiny_mce_js_exec_counter[795]++;
    A = n[C[2]];
    tiny_mce_js_exec_counter[796]++;
    j(h(C[3], "|"), function(E) {
  tiny_mce_js_exec_counter[797]++;
  if (B === "-") 
  {
    tiny_mce_js_exec_counter[799]++;
    delete A[E];
  } else {
    tiny_mce_js_exec_counter[800]++;
    A[E] = {};
  }
  tiny_mce_js_exec_counter[798]++;
});
  }
  tiny_mce_js_exec_counter[789]++;
});
    }
    tiny_mce_js_exec_counter[784]++;
  }
  if (!p.valid_elements) 
  {
    tiny_mce_js_exec_counter[801]++;
    j(g, function(z, y) {
  tiny_mce_js_exec_counter[802]++;
  tiny_mce_js_exec_counter[804]++;
  m[y] = {attributes: z.attributes, attributesOrder: z.attributesOrder};
  tiny_mce_js_exec_counter[805]++;
  n[y] = z.children;
  tiny_mce_js_exec_counter[803]++;
});
    tiny_mce_js_exec_counter[806]++;
    j(h("strong/b,em/i"), function(y) {
  tiny_mce_js_exec_counter[807]++;
  tiny_mce_js_exec_counter[809]++;
  y = h(y, "/");
  tiny_mce_js_exec_counter[810]++;
  m[y[1]].outputName = y[0];
  tiny_mce_js_exec_counter[808]++;
});
    tiny_mce_js_exec_counter[811]++;
    m.img.attributesDefault = [{name: "alt", value: ""}];
    tiny_mce_js_exec_counter[812]++;
    j(h("ol,ul,li,sub,sup,blockquote,tr,div,span,font,a,table,tbody"), function(y) {
  tiny_mce_js_exec_counter[813]++;
  tiny_mce_js_exec_counter[815]++;
  m[y].removeEmpty = true;
  tiny_mce_js_exec_counter[814]++;
});
    tiny_mce_js_exec_counter[816]++;
    j(h("p,h1,h2,h3,h4,h5,h6,th,td,pre,div,address,caption"), function(y) {
  tiny_mce_js_exec_counter[817]++;
  tiny_mce_js_exec_counter[819]++;
  m[y].paddEmpty = true;
  tiny_mce_js_exec_counter[818]++;
});
  } else {
    tiny_mce_js_exec_counter[820]++;
    t(p.valid_elements);
  }
  tiny_mce_js_exec_counter[821]++;
  q(p.custom_elements);
  tiny_mce_js_exec_counter[822]++;
  s(p.valid_children);
  tiny_mce_js_exec_counter[823]++;
  r(p.extended_valid_elements);
  tiny_mce_js_exec_counter[824]++;
  s("+ol[ul|ol],+ul[ul|ol]");
  if (p.invalid_elements) 
  {
    tiny_mce_js_exec_counter[825]++;
    l.each(l.explode(p.invalid_elements), function(y) {
  tiny_mce_js_exec_counter[826]++;
  if (m[y]) 
  {
    tiny_mce_js_exec_counter[828]++;
    delete m[y];
  }
  tiny_mce_js_exec_counter[827]++;
});
  }
  tiny_mce_js_exec_counter[829]++;
  x.children = n;
  tiny_mce_js_exec_counter[830]++;
  x.styles = o;
  tiny_mce_js_exec_counter[831]++;
  x.getBoolAttrs = function() {
  tiny_mce_js_exec_counter[832]++;
  tiny_mce_js_exec_counter[833]++;
  return i;
};
  tiny_mce_js_exec_counter[834]++;
  x.getBlockElements = function() {
  tiny_mce_js_exec_counter[835]++;
  tiny_mce_js_exec_counter[836]++;
  return k;
};
  tiny_mce_js_exec_counter[837]++;
  x.getShortEndedElements = function() {
  tiny_mce_js_exec_counter[838]++;
  tiny_mce_js_exec_counter[839]++;
  return f;
};
  tiny_mce_js_exec_counter[840]++;
  x.getSelfClosingElements = function() {
  tiny_mce_js_exec_counter[841]++;
  tiny_mce_js_exec_counter[842]++;
  return e;
};
  tiny_mce_js_exec_counter[843]++;
  x.getNonEmptyElements = function() {
  tiny_mce_js_exec_counter[844]++;
  tiny_mce_js_exec_counter[845]++;
  return d;
};
  tiny_mce_js_exec_counter[846]++;
  x.getWhiteSpaceElements = function() {
  tiny_mce_js_exec_counter[847]++;
  tiny_mce_js_exec_counter[848]++;
  return b;
};
  tiny_mce_js_exec_counter[849]++;
  x.isValidChild = function(y, A) {
  tiny_mce_js_exec_counter[850]++;
  tiny_mce_js_exec_counter[851]++;
  var z = n[y];
  tiny_mce_js_exec_counter[853]++;
  return !!(z && z[A]);
};
  tiny_mce_js_exec_counter[854]++;
  x.getElementRule = function(y) {
  tiny_mce_js_exec_counter[855]++;
  tiny_mce_js_exec_counter[857]++;
  var A = m[y], z;
  if (A) 
  {
    tiny_mce_js_exec_counter[859]++;
    return A;
  }
  tiny_mce_js_exec_counter[860]++;
  z = u.length;
  while (z--) 
    {
      tiny_mce_js_exec_counter[861]++;
      A = u[z];
      if (A.pattern.test(y)) 
      {
        tiny_mce_js_exec_counter[862]++;
        return A;
      }
    }
  tiny_mce_js_exec_counter[856]++;
};
  tiny_mce_js_exec_counter[863]++;
  x.addValidElements = r;
  tiny_mce_js_exec_counter[864]++;
  x.setValidElements = t;
  tiny_mce_js_exec_counter[865]++;
  x.addCustomElements = q;
  tiny_mce_js_exec_counter[866]++;
  x.addValidChildren = s;
  tiny_mce_js_exec_counter[697]++;
};
  tiny_mce_js_exec_counter[867]++;
  l.html.Schema.boolAttrMap = i;
  tiny_mce_js_exec_counter[868]++;
  l.html.Schema.blockElementsMap = k;
  tiny_mce_js_exec_counter[668]++;
})(tinymce);
tiny_mce_js_exec_counter[869]++;
(function(a) {
  tiny_mce_js_exec_counter[870]++;
  tiny_mce_js_exec_counter[872]++;
  a.html.SaxParser = function(c, e) {
  tiny_mce_js_exec_counter[873]++;
  tiny_mce_js_exec_counter[875]++;
  var b = this, d = function() {
  tiny_mce_js_exec_counter[877]++;
  tiny_mce_js_exec_counter[878]++;
};
  tiny_mce_js_exec_counter[879]++;
  c = c || {};
  tiny_mce_js_exec_counter[880]++;
  b.schema = e = e || new a.html.Schema();
  if (c.fix_self_closing !== false) 
  {
    tiny_mce_js_exec_counter[881]++;
    c.fix_self_closing = true;
  }
  tiny_mce_js_exec_counter[882]++;
  a.each("comment cdata text start end pi doctype".split(" "), function(f) {
  tiny_mce_js_exec_counter[883]++;
  if (f) 
  {
    tiny_mce_js_exec_counter[885]++;
    b[f] = c[f] || d;
  }
  tiny_mce_js_exec_counter[884]++;
});
  tiny_mce_js_exec_counter[886]++;
  b.parse = function(q) {
  tiny_mce_js_exec_counter[887]++;
  tiny_mce_js_exec_counter[889]++;
  var A = this, f, m = 0, G, j, l = [], B, K, t, N, F, k, p, x, I, r, E, o, J, n, H, M, L, z, D, h, g, u, s = 0, v = a.html.Entities.decode, y;
  function C(O) {
    tiny_mce_js_exec_counter[891]++;
    tiny_mce_js_exec_counter[893]++;
    var Q, P;
    tiny_mce_js_exec_counter[895]++;
    Q = l.length;
    while (Q--) 
      {
        if (l[Q].name === O) 
        {
          tiny_mce_js_exec_counter[896]++;
          break;
        }
      }
    if (Q >= 0) 
    {
      for (P = l.length - 1; P >= Q; P--) 
        {
          tiny_mce_js_exec_counter[897]++;
          O = l[P];
          if (O.valid) 
          {
            tiny_mce_js_exec_counter[898]++;
            A.end(O.name);
          }
        }
      tiny_mce_js_exec_counter[899]++;
      l.length = Q;
    }
    tiny_mce_js_exec_counter[892]++;
  }
  tiny_mce_js_exec_counter[900]++;
  D = new RegExp("<(?:(?:!--([\\w\\W]*?)-->)|(?:!\\[CDATA\\[([\\w\\W]*?)\\]\\]>)|(?:!DOCTYPE([\\w\\W]*?)>)|(?:\\?([^\\s\\/<>]+) ?([\\w\\W]*?)[?/]>)|(?:\\/([^>]+)>)|(?:([^\\s\\/<>]+)\\s*((?:[^\"'>]+(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>]*))*)>))", "g");
  tiny_mce_js_exec_counter[901]++;
  h = /([\w:\-]+)(?:\s*=\s*(?:(?:\"((?:\\.|[^\"])*)\")|(?:\'((?:\\.|[^\'])*)\')|([^>\s]+)))?/g;
  tiny_mce_js_exec_counter[902]++;
  g = {script: /<\/script[^>]*>/gi, style: /<\/style[^>]*>/gi, noscript: /<\/noscript[^>]*>/gi};
  tiny_mce_js_exec_counter[903]++;
  F = e.getShortEndedElements();
  tiny_mce_js_exec_counter[904]++;
  z = e.getSelfClosingElements();
  tiny_mce_js_exec_counter[905]++;
  k = e.getBoolAttrs();
  tiny_mce_js_exec_counter[906]++;
  x = c.validate;
  tiny_mce_js_exec_counter[907]++;
  y = c.fix_self_closing;
  while (f = D.exec(q)) 
    {
      if (m < f.index) 
      {
        tiny_mce_js_exec_counter[908]++;
        A.text(v(q.substr(m, f.index - m)));
      }
      if (G = f[6]) 
      {
        tiny_mce_js_exec_counter[909]++;
        C(G.toLowerCase());
      } else {
        if (G = f[7]) 
        {
          tiny_mce_js_exec_counter[910]++;
          G = G.toLowerCase();
          tiny_mce_js_exec_counter[911]++;
          p = G in F;
          if (y && z[G] && l.length > 0 && l[l.length - 1].name === G) 
          {
            tiny_mce_js_exec_counter[912]++;
            C(G);
          }
          if (!x || (I = e.getElementRule(G))) 
          {
            tiny_mce_js_exec_counter[913]++;
            r = true;
            if (x) 
            {
              tiny_mce_js_exec_counter[914]++;
              J = I.attributes;
              tiny_mce_js_exec_counter[915]++;
              n = I.attributePatterns;
            }
            if (o = f[8]) 
            {
              tiny_mce_js_exec_counter[916]++;
              B = [];
              tiny_mce_js_exec_counter[917]++;
              B.map = {};
              tiny_mce_js_exec_counter[918]++;
              o.replace(h, function(P, O, T, S, R) {
  tiny_mce_js_exec_counter[919]++;
  tiny_mce_js_exec_counter[921]++;
  var U, Q;
  tiny_mce_js_exec_counter[923]++;
  O = O.toLowerCase();
  tiny_mce_js_exec_counter[924]++;
  T = O in k ? O : v(T || S || R || "");
  if (x && O.indexOf("data-") !== 0) 
  {
    tiny_mce_js_exec_counter[925]++;
    U = J[O];
    if (!U && n) 
    {
      tiny_mce_js_exec_counter[926]++;
      Q = n.length;
      while (Q--) 
        {
          tiny_mce_js_exec_counter[927]++;
          U = n[Q];
          if (U.pattern.test(O)) 
          {
            tiny_mce_js_exec_counter[928]++;
            break;
          }
        }
      if (Q === -1) 
      {
        tiny_mce_js_exec_counter[929]++;
        U = null;
      }
    }
    if (!U) 
    {
      tiny_mce_js_exec_counter[930]++;
      return;
    }
    if (U.validValues && !(T in U.validValues)) 
    {
      tiny_mce_js_exec_counter[931]++;
      return;
    }
  }
  tiny_mce_js_exec_counter[932]++;
  B.map[O] = T;
  tiny_mce_js_exec_counter[933]++;
  B.push({name: O, value: T});
  tiny_mce_js_exec_counter[920]++;
});
            } else {
              tiny_mce_js_exec_counter[934]++;
              B = [];
              tiny_mce_js_exec_counter[935]++;
              B.map = {};
            }
            if (x) 
            {
              tiny_mce_js_exec_counter[936]++;
              H = I.attributesRequired;
              tiny_mce_js_exec_counter[937]++;
              M = I.attributesDefault;
              tiny_mce_js_exec_counter[938]++;
              L = I.attributesForced;
              if (L) 
              {
                tiny_mce_js_exec_counter[939]++;
                K = L.length;
                while (K--) 
                  {
                    tiny_mce_js_exec_counter[940]++;
                    E = L[K];
                    tiny_mce_js_exec_counter[941]++;
                    N = E.name;
                    tiny_mce_js_exec_counter[942]++;
                    u = E.value;
                    if (u === "{$uid}") 
                    {
                      tiny_mce_js_exec_counter[943]++;
                      u = "mce_" + s++;
                    }
                    tiny_mce_js_exec_counter[944]++;
                    B.map[N] = u;
                    tiny_mce_js_exec_counter[945]++;
                    B.push({name: N, value: u});
                  }
              }
              if (M) 
              {
                tiny_mce_js_exec_counter[946]++;
                K = M.length;
                while (K--) 
                  {
                    tiny_mce_js_exec_counter[947]++;
                    E = M[K];
                    tiny_mce_js_exec_counter[948]++;
                    N = E.name;
                    if (!(N in B.map)) 
                    {
                      tiny_mce_js_exec_counter[949]++;
                      u = E.value;
                      if (u === "{$uid}") 
                      {
                        tiny_mce_js_exec_counter[950]++;
                        u = "mce_" + s++;
                      }
                      tiny_mce_js_exec_counter[951]++;
                      B.map[N] = u;
                      tiny_mce_js_exec_counter[952]++;
                      B.push({name: N, value: u});
                    }
                  }
              }
              if (H) 
              {
                tiny_mce_js_exec_counter[953]++;
                K = H.length;
                while (K--) 
                  {
                    if (H[K] in B.map) 
                    {
                      tiny_mce_js_exec_counter[954]++;
                      break;
                    }
                  }
                if (K === -1) 
                {
                  tiny_mce_js_exec_counter[955]++;
                  r = false;
                }
              }
              if (B.map["data-mce-bogus"]) 
              {
                tiny_mce_js_exec_counter[956]++;
                r = false;
              }
            }
            if (r) 
            {
              tiny_mce_js_exec_counter[957]++;
              A.start(G, B, p);
            }
          } else {
            tiny_mce_js_exec_counter[958]++;
            r = false;
          }
          if (j = g[G]) 
          {
            tiny_mce_js_exec_counter[959]++;
            j.lastIndex = m = f.index + f[0].length;
            if (f = j.exec(q)) 
            {
              if (r) 
              {
                tiny_mce_js_exec_counter[960]++;
                t = q.substr(m, f.index - m);
              }
              tiny_mce_js_exec_counter[961]++;
              m = f.index + f[0].length;
            } else {
              tiny_mce_js_exec_counter[962]++;
              t = q.substr(m);
              tiny_mce_js_exec_counter[963]++;
              m = q.length;
            }
            if (r && t.length > 0) 
            {
              tiny_mce_js_exec_counter[964]++;
              A.text(t, true);
            }
            if (r) 
            {
              tiny_mce_js_exec_counter[965]++;
              A.end(G);
            }
            tiny_mce_js_exec_counter[966]++;
            D.lastIndex = m;
            tiny_mce_js_exec_counter[967]++;
            continue;
          }
          if (!p) 
          {
            if (!o || o.indexOf("/") != o.length - 1) 
            {
              tiny_mce_js_exec_counter[968]++;
              l.push({name: G, valid: r});
            } else {
              if (r) 
              {
                tiny_mce_js_exec_counter[969]++;
                A.end(G);
              }
            }
          }
        } else {
          if (G = f[1]) 
          {
            tiny_mce_js_exec_counter[970]++;
            A.comment(G);
          } else {
            if (G = f[2]) 
            {
              tiny_mce_js_exec_counter[971]++;
              A.cdata(G);
            } else {
              if (G = f[3]) 
              {
                tiny_mce_js_exec_counter[972]++;
                A.doctype(G);
              } else {
                if (G = f[4]) 
                {
                  tiny_mce_js_exec_counter[973]++;
                  A.pi(G, f[5]);
                }
              }
            }
          }
        }
      }
      tiny_mce_js_exec_counter[974]++;
      m = f.index + f[0].length;
    }
  if (m < q.length) 
  {
    tiny_mce_js_exec_counter[975]++;
    A.text(v(q.substr(m)));
  }
  for (K = l.length - 1; K >= 0; K--) 
    {
      tiny_mce_js_exec_counter[976]++;
      G = l[K];
      if (G.valid) 
      {
        tiny_mce_js_exec_counter[977]++;
        A.end(G.name);
      }
    }
  tiny_mce_js_exec_counter[888]++;
};
  tiny_mce_js_exec_counter[874]++;
};
  tiny_mce_js_exec_counter[871]++;
})(tinymce);
tiny_mce_js_exec_counter[978]++;
(function(d) {
  tiny_mce_js_exec_counter[979]++;
  tiny_mce_js_exec_counter[981]++;
  var c = /^[ \t\r\n]*$/, e = {"#text": 3, "#comment": 8, "#cdata": 4, "#pi": 7, "#doctype": 10, "#document-fragment": 11};
  function a(k, l, j) {
    tiny_mce_js_exec_counter[983]++;
    tiny_mce_js_exec_counter[985]++;
    var i, h, f = j ? "lastChild" : "firstChild", g = j ? "prev" : "next";
    if (k[f]) 
    {
      tiny_mce_js_exec_counter[987]++;
      return k[f];
    }
    if (k !== l) 
    {
      tiny_mce_js_exec_counter[988]++;
      i = k[g];
      if (i) 
      {
        tiny_mce_js_exec_counter[989]++;
        return i;
      }
      for (h = k.parent; h && h !== l; h = h.parent) 
        {
          tiny_mce_js_exec_counter[990]++;
          i = h[g];
          if (i) 
          {
            tiny_mce_js_exec_counter[991]++;
            return i;
          }
        }
    }
    tiny_mce_js_exec_counter[984]++;
  }
  function b(f, g) {
    tiny_mce_js_exec_counter[992]++;
    tiny_mce_js_exec_counter[994]++;
    this.name = f;
    tiny_mce_js_exec_counter[995]++;
    this.type = g;
    if (g === 1) 
    {
      tiny_mce_js_exec_counter[996]++;
      this.attributes = [];
      tiny_mce_js_exec_counter[997]++;
      this.attributes.map = {};
    }
    tiny_mce_js_exec_counter[993]++;
  }
  tiny_mce_js_exec_counter[998]++;
  d.extend(b.prototype, {replace: function(g) {
  tiny_mce_js_exec_counter[999]++;
  tiny_mce_js_exec_counter[1000]++;
  var f = this;
  if (g.parent) 
  {
    tiny_mce_js_exec_counter[1002]++;
    g.remove();
  }
  tiny_mce_js_exec_counter[1003]++;
  f.insert(g, f);
  tiny_mce_js_exec_counter[1004]++;
  f.remove();
  tiny_mce_js_exec_counter[1005]++;
  return f;
}, attr: function(h, l) {
  tiny_mce_js_exec_counter[1006]++;
  tiny_mce_js_exec_counter[1008]++;
  var f = this, g, j, k;
  if (typeof h !== "string") 
  {
    for (j in h) 
      {
        tiny_mce_js_exec_counter[1010]++;
        f.attr(j, h[j]);
      }
    tiny_mce_js_exec_counter[1011]++;
    return f;
  }
  if (g = f.attributes) 
  {
    if (l !== k) 
    {
      if (l === null) 
      {
        if (h in g.map) 
        {
          tiny_mce_js_exec_counter[1012]++;
          delete g.map[h];
          tiny_mce_js_exec_counter[1013]++;
          j = g.length;
          while (j--) 
            {
              if (g[j].name === h) 
              {
                tiny_mce_js_exec_counter[1014]++;
                g = g.splice(j, 1);
                tiny_mce_js_exec_counter[1015]++;
                return f;
              }
            }
        }
        tiny_mce_js_exec_counter[1016]++;
        return f;
      }
      if (h in g.map) 
      {
        tiny_mce_js_exec_counter[1017]++;
        j = g.length;
        while (j--) 
          {
            if (g[j].name === h) 
            {
              tiny_mce_js_exec_counter[1018]++;
              g[j].value = l;
              tiny_mce_js_exec_counter[1019]++;
              break;
            }
          }
      } else {
        tiny_mce_js_exec_counter[1020]++;
        g.push({name: h, value: l});
      }
      tiny_mce_js_exec_counter[1021]++;
      g.map[h] = l;
      tiny_mce_js_exec_counter[1022]++;
      return f;
    } else {
      tiny_mce_js_exec_counter[1023]++;
      return g.map[h];
    }
  }
  tiny_mce_js_exec_counter[1007]++;
}, clone: function() {
  tiny_mce_js_exec_counter[1024]++;
  tiny_mce_js_exec_counter[1025]++;
  var g = this, n = new b(g.name, g.type), h, f, m, j, k;
  if (m = g.attributes) 
  {
    tiny_mce_js_exec_counter[1027]++;
    k = [];
    tiny_mce_js_exec_counter[1028]++;
    k.map = {};
    for (h = 0 , f = m.length; h < f; h++) 
      {
        tiny_mce_js_exec_counter[1029]++;
        j = m[h];
        if (j.name !== "id") 
        {
          tiny_mce_js_exec_counter[1030]++;
          k[k.length] = {name: j.name, value: j.value};
          tiny_mce_js_exec_counter[1031]++;
          k.map[j.name] = j.value;
        }
      }
    tiny_mce_js_exec_counter[1032]++;
    n.attributes = k;
  }
  tiny_mce_js_exec_counter[1033]++;
  n.value = g.value;
  tiny_mce_js_exec_counter[1034]++;
  n.shortEnded = g.shortEnded;
  tiny_mce_js_exec_counter[1035]++;
  return n;
}, wrap: function(g) {
  tiny_mce_js_exec_counter[1036]++;
  tiny_mce_js_exec_counter[1037]++;
  var f = this;
  tiny_mce_js_exec_counter[1039]++;
  f.parent.insert(g, f);
  tiny_mce_js_exec_counter[1040]++;
  g.append(f);
  tiny_mce_js_exec_counter[1041]++;
  return f;
}, unwrap: function() {
  tiny_mce_js_exec_counter[1042]++;
  tiny_mce_js_exec_counter[1044]++;
  var f = this, h, g;
  for (h = f.firstChild; h; ) 
    {
      tiny_mce_js_exec_counter[1046]++;
      g = h.next;
      tiny_mce_js_exec_counter[1047]++;
      f.insert(h, f, true);
      tiny_mce_js_exec_counter[1048]++;
      h = g;
    }
  tiny_mce_js_exec_counter[1049]++;
  f.remove();
  tiny_mce_js_exec_counter[1043]++;
}, remove: function() {
  tiny_mce_js_exec_counter[1050]++;
  tiny_mce_js_exec_counter[1051]++;
  var f = this, h = f.parent, g = f.next, i = f.prev;
  if (h) 
  {
    if (h.firstChild === f) 
    {
      tiny_mce_js_exec_counter[1053]++;
      h.firstChild = g;
      if (g) 
      {
        tiny_mce_js_exec_counter[1054]++;
        g.prev = null;
      }
    } else {
      tiny_mce_js_exec_counter[1055]++;
      i.next = g;
    }
    if (h.lastChild === f) 
    {
      tiny_mce_js_exec_counter[1056]++;
      h.lastChild = i;
      if (i) 
      {
        tiny_mce_js_exec_counter[1057]++;
        i.next = null;
      }
    } else {
      tiny_mce_js_exec_counter[1058]++;
      g.prev = i;
    }
    tiny_mce_js_exec_counter[1059]++;
    f.parent = f.next = f.prev = null;
  }
  tiny_mce_js_exec_counter[1060]++;
  return f;
}, append: function(h) {
  tiny_mce_js_exec_counter[1061]++;
  tiny_mce_js_exec_counter[1062]++;
  var f = this, g;
  if (h.parent) 
  {
    tiny_mce_js_exec_counter[1064]++;
    h.remove();
  }
  tiny_mce_js_exec_counter[1065]++;
  g = f.lastChild;
  if (g) 
  {
    tiny_mce_js_exec_counter[1066]++;
    g.next = h;
    tiny_mce_js_exec_counter[1067]++;
    h.prev = g;
    tiny_mce_js_exec_counter[1068]++;
    f.lastChild = h;
  } else {
    tiny_mce_js_exec_counter[1069]++;
    f.lastChild = f.firstChild = h;
  }
  tiny_mce_js_exec_counter[1070]++;
  h.parent = f;
  tiny_mce_js_exec_counter[1071]++;
  return h;
}, insert: function(h, f, i) {
  tiny_mce_js_exec_counter[1072]++;
  tiny_mce_js_exec_counter[1073]++;
  var g;
  if (h.parent) 
  {
    tiny_mce_js_exec_counter[1075]++;
    h.remove();
  }
  tiny_mce_js_exec_counter[1076]++;
  g = f.parent || this;
  if (i) 
  {
    if (f === g.firstChild) 
    {
      tiny_mce_js_exec_counter[1077]++;
      g.firstChild = h;
    } else {
      tiny_mce_js_exec_counter[1078]++;
      f.prev.next = h;
    }
    tiny_mce_js_exec_counter[1079]++;
    h.prev = f.prev;
    tiny_mce_js_exec_counter[1080]++;
    h.next = f;
    tiny_mce_js_exec_counter[1081]++;
    f.prev = h;
  } else {
    if (f === g.lastChild) 
    {
      tiny_mce_js_exec_counter[1082]++;
      g.lastChild = h;
    } else {
      tiny_mce_js_exec_counter[1083]++;
      f.next.prev = h;
    }
    tiny_mce_js_exec_counter[1084]++;
    h.next = f.next;
    tiny_mce_js_exec_counter[1085]++;
    h.prev = f;
    tiny_mce_js_exec_counter[1086]++;
    f.next = h;
  }
  tiny_mce_js_exec_counter[1087]++;
  h.parent = g;
  tiny_mce_js_exec_counter[1088]++;
  return h;
}, getAll: function(g) {
  tiny_mce_js_exec_counter[1089]++;
  tiny_mce_js_exec_counter[1090]++;
  var f = this, h, i = [];
  for (h = f.firstChild; h; h = a(h, f)) 
    {
      if (h.name === g) 
      {
        tiny_mce_js_exec_counter[1092]++;
        i.push(h);
      }
    }
  tiny_mce_js_exec_counter[1093]++;
  return i;
}, empty: function() {
  tiny_mce_js_exec_counter[1094]++;
  tiny_mce_js_exec_counter[1095]++;
  var g = this, f, h, j;
  if (g.firstChild) 
  {
    tiny_mce_js_exec_counter[1097]++;
    f = [];
    for (j = g.firstChild; j; j = a(j, g)) 
      {
        tiny_mce_js_exec_counter[1098]++;
        f.push(j);
      }
    tiny_mce_js_exec_counter[1099]++;
    h = f.length;
    while (h--) 
      {
        tiny_mce_js_exec_counter[1100]++;
        j = f[h];
        tiny_mce_js_exec_counter[1101]++;
        j.parent = j.firstChild = j.lastChild = j.next = j.prev = null;
      }
  }
  tiny_mce_js_exec_counter[1102]++;
  g.firstChild = g.lastChild = null;
  tiny_mce_js_exec_counter[1103]++;
  return g;
}, isEmpty: function(j) {
  tiny_mce_js_exec_counter[1104]++;
  tiny_mce_js_exec_counter[1105]++;
  var f = this, h = f.firstChild, g;
  if (h) 
  {
do {
      if (h.type === 1) 
      {
        if (h.attributes.map["data-mce-bogus"]) 
        {
          tiny_mce_js_exec_counter[1107]++;
          continue;
        }
        if (j[h.name]) 
        {
          tiny_mce_js_exec_counter[1108]++;
          return false;
        }
        tiny_mce_js_exec_counter[1109]++;
        g = h.attributes.length;
        while (g--) 
          {
            if (h.attributes[g].name.indexOf("data-") === 0) 
            {
              tiny_mce_js_exec_counter[1110]++;
              return false;
            }
          }
      }
      if ((h.type === 3 && !c.test(h.value))) 
      {
        tiny_mce_js_exec_counter[1111]++;
        return false;
      }
    } while (h = a(h, f));
  }
  tiny_mce_js_exec_counter[1112]++;
  return true;
}});
  tiny_mce_js_exec_counter[1113]++;
  d.extend(b, {create: function(g, f) {
  tiny_mce_js_exec_counter[1114]++;
  tiny_mce_js_exec_counter[1115]++;
  var i, h;
  tiny_mce_js_exec_counter[1117]++;
  i = new b(g, e[g] || 1);
  if (f) 
  {
    for (h in f) 
      {
        tiny_mce_js_exec_counter[1118]++;
        i.attr(h, f[h]);
      }
  }
  tiny_mce_js_exec_counter[1119]++;
  return i;
}});
  tiny_mce_js_exec_counter[1120]++;
  d.html.Node = b;
  tiny_mce_js_exec_counter[980]++;
})(tinymce);
tiny_mce_js_exec_counter[1121]++;
(function(b) {
  tiny_mce_js_exec_counter[1122]++;
  tiny_mce_js_exec_counter[1124]++;
  var a = b.html.Node;
  tiny_mce_js_exec_counter[1126]++;
  b.html.DomParser = function(f, g) {
  tiny_mce_js_exec_counter[1127]++;
  tiny_mce_js_exec_counter[1129]++;
  var e = this, d = {}, c = [];
  tiny_mce_js_exec_counter[1131]++;
  f = f || {};
  tiny_mce_js_exec_counter[1132]++;
  f.root_name = f.root_name || "body";
  tiny_mce_js_exec_counter[1133]++;
  e.schema = g = g || new b.html.Schema();
  function h(l) {
    tiny_mce_js_exec_counter[1134]++;
    tiny_mce_js_exec_counter[1136]++;
    var n, o, v, u, y, m, p, k, s, t, j, r, x, q;
    tiny_mce_js_exec_counter[1138]++;
    r = b.makeMap("tr,td,th,tbody,thead,tfoot,table");
    tiny_mce_js_exec_counter[1139]++;
    j = g.getNonEmptyElements();
    for (n = 0; n < l.length; n++) 
      {
        tiny_mce_js_exec_counter[1140]++;
        o = l[n];
        if (!o.parent) 
        {
          tiny_mce_js_exec_counter[1141]++;
          continue;
        }
        tiny_mce_js_exec_counter[1142]++;
        u = [o];
        for (v = o.parent; v && !g.isValidChild(v.name, o.name) && !r[v.name]; v = v.parent) 
          {
            tiny_mce_js_exec_counter[1143]++;
            u.push(v);
          }
        if (v && u.length > 1) 
        {
          tiny_mce_js_exec_counter[1144]++;
          u.reverse();
          tiny_mce_js_exec_counter[1145]++;
          y = m = u[0].clone();
          for (s = 0; s < u.length - 1; s++) 
            {
              if (g.isValidChild(m.name, u[s].name)) 
              {
                tiny_mce_js_exec_counter[1146]++;
                p = u[s].clone();
                tiny_mce_js_exec_counter[1147]++;
                m.append(p);
              } else {
                tiny_mce_js_exec_counter[1148]++;
                p = m;
              }
              for (k = u[s].firstChild; k && k != u[s + 1]; ) 
                {
                  tiny_mce_js_exec_counter[1149]++;
                  q = k.next;
                  tiny_mce_js_exec_counter[1150]++;
                  p.append(k);
                  tiny_mce_js_exec_counter[1151]++;
                  k = q;
                }
              tiny_mce_js_exec_counter[1152]++;
              m = p;
            }
          if (!y.isEmpty(j)) 
          {
            tiny_mce_js_exec_counter[1153]++;
            v.insert(y, u[0], true);
            tiny_mce_js_exec_counter[1154]++;
            v.insert(o, y);
          } else {
            tiny_mce_js_exec_counter[1155]++;
            v.insert(o, u[0], true);
          }
          if (u[0].isEmpty(j)) 
          {
            tiny_mce_js_exec_counter[1156]++;
            u[0].empty().remove();
          }
        } else {
          if (o.parent) 
          {
            if (o.name === "li") 
            {
              tiny_mce_js_exec_counter[1157]++;
              x = o.prev;
              if (x && (x.name === "ul" || x.name === "ul")) 
              {
                tiny_mce_js_exec_counter[1158]++;
                x.append(o);
                tiny_mce_js_exec_counter[1159]++;
                continue;
              }
              tiny_mce_js_exec_counter[1160]++;
              x = o.next;
              if (x && (x.name === "ul" || x.name === "ul")) 
              {
                tiny_mce_js_exec_counter[1161]++;
                x.insert(o, x.firstChild, true);
                tiny_mce_js_exec_counter[1162]++;
                continue;
              }
              tiny_mce_js_exec_counter[1163]++;
              o.wrap(new a("ul", 1));
              tiny_mce_js_exec_counter[1164]++;
              continue;
            }
            if (g.isValidChild(o.parent.name, "div") && g.isValidChild("div", o.name)) 
            {
              tiny_mce_js_exec_counter[1165]++;
              o.wrap(new a("div", 1));
            } else {
              if (o.name === "style" || o.name === "script") 
              {
                tiny_mce_js_exec_counter[1166]++;
                o.empty().remove();
              } else {
                tiny_mce_js_exec_counter[1167]++;
                o.unwrap();
              }
            }
          }
        }
      }
    tiny_mce_js_exec_counter[1135]++;
  }
  tiny_mce_js_exec_counter[1168]++;
  e.addNodeFilter = function(i, j) {
  tiny_mce_js_exec_counter[1169]++;
  tiny_mce_js_exec_counter[1171]++;
  b.each(b.explode(i), function(k) {
  tiny_mce_js_exec_counter[1172]++;
  tiny_mce_js_exec_counter[1174]++;
  var l = d[k];
  if (!l) 
  {
    tiny_mce_js_exec_counter[1176]++;
    d[k] = l = [];
  }
  tiny_mce_js_exec_counter[1177]++;
  l.push(j);
  tiny_mce_js_exec_counter[1173]++;
});
  tiny_mce_js_exec_counter[1170]++;
};
  tiny_mce_js_exec_counter[1178]++;
  e.addAttributeFilter = function(i, j) {
  tiny_mce_js_exec_counter[1179]++;
  tiny_mce_js_exec_counter[1181]++;
  b.each(b.explode(i), function(k) {
  tiny_mce_js_exec_counter[1182]++;
  tiny_mce_js_exec_counter[1184]++;
  var l;
  for (l = 0; l < c.length; l++) 
    {
      if (c[l].name === k) 
      {
        tiny_mce_js_exec_counter[1186]++;
        c[l].callbacks.push(j);
        tiny_mce_js_exec_counter[1187]++;
        return;
      }
    }
  tiny_mce_js_exec_counter[1188]++;
  c.push({name: k, callbacks: [j]});
  tiny_mce_js_exec_counter[1183]++;
});
  tiny_mce_js_exec_counter[1180]++;
};
  tiny_mce_js_exec_counter[1189]++;
  e.parse = function(v, m) {
  tiny_mce_js_exec_counter[1190]++;
  tiny_mce_js_exec_counter[1191]++;
  var n, E, z, y, k = {}, p = {}, B, A, x, r, D, H, o, C, G = [], t, j, s, q, u;
  tiny_mce_js_exec_counter[1193]++;
  m = m || {};
  tiny_mce_js_exec_counter[1194]++;
  o = b.extend(b.makeMap("script,style,head,title,meta,param"), g.getBlockElements());
  tiny_mce_js_exec_counter[1195]++;
  u = g.getNonEmptyElements();
  tiny_mce_js_exec_counter[1196]++;
  q = g.children;
  tiny_mce_js_exec_counter[1197]++;
  s = g.getWhiteSpaceElements();
  tiny_mce_js_exec_counter[1198]++;
  C = /^[ \t\r\n]+/;
  tiny_mce_js_exec_counter[1199]++;
  t = /[ \t\r\n]+$/;
  tiny_mce_js_exec_counter[1200]++;
  j = /[ \t\r\n]+/g;
  function F(i, l) {
    tiny_mce_js_exec_counter[1201]++;
    tiny_mce_js_exec_counter[1202]++;
    var I = new a(i, l), J;
    if (i in d) 
    {
      tiny_mce_js_exec_counter[1204]++;
      J = k[i];
      if (J) 
      {
        tiny_mce_js_exec_counter[1205]++;
        J.push(I);
      } else {
        tiny_mce_js_exec_counter[1206]++;
        k[i] = [I];
      }
    }
    tiny_mce_js_exec_counter[1207]++;
    return I;
  }
  tiny_mce_js_exec_counter[1208]++;
  n = new b.html.SaxParser({validate: f.validate, fix_self_closing: false, cdata: function(i) {
  tiny_mce_js_exec_counter[1209]++;
  tiny_mce_js_exec_counter[1211]++;
  z.append(F("#cdata", 4)).value = i;
  tiny_mce_js_exec_counter[1210]++;
}, text: function(I, i) {
  tiny_mce_js_exec_counter[1212]++;
  tiny_mce_js_exec_counter[1214]++;
  var l;
  if (!s[z.name]) 
  {
    tiny_mce_js_exec_counter[1216]++;
    I = I.replace(j, " ");
    if (z.lastChild && o[z.lastChild.name]) 
    {
      tiny_mce_js_exec_counter[1217]++;
      I = I.replace(C, "");
    }
  }
  if (I.length !== 0) 
  {
    tiny_mce_js_exec_counter[1218]++;
    l = F("#text", 3);
    tiny_mce_js_exec_counter[1219]++;
    l.raw = !!i;
    tiny_mce_js_exec_counter[1220]++;
    z.append(l).value = I;
  }
  tiny_mce_js_exec_counter[1213]++;
}, comment: function(i) {
  tiny_mce_js_exec_counter[1221]++;
  tiny_mce_js_exec_counter[1223]++;
  z.append(F("#comment", 8)).value = i;
  tiny_mce_js_exec_counter[1222]++;
}, pi: function(i, l) {
  tiny_mce_js_exec_counter[1224]++;
  tiny_mce_js_exec_counter[1226]++;
  z.append(F(i, 7)).value = l;
  tiny_mce_js_exec_counter[1225]++;
}, doctype: function(i) {
  tiny_mce_js_exec_counter[1227]++;
  tiny_mce_js_exec_counter[1229]++;
  z.append(F("#doctype", 10)).value = i;
  tiny_mce_js_exec_counter[1228]++;
}, start: function(i, P, I) {
  tiny_mce_js_exec_counter[1230]++;
  tiny_mce_js_exec_counter[1232]++;
  var N, K, J, l, L, Q, O, M;
  tiny_mce_js_exec_counter[1234]++;
  J = g.getElementRule(i);
  if (J) 
  {
    tiny_mce_js_exec_counter[1235]++;
    N = F(J.outputName || i, 1);
    tiny_mce_js_exec_counter[1236]++;
    N.attributes = P;
    tiny_mce_js_exec_counter[1237]++;
    N.shortEnded = I;
    tiny_mce_js_exec_counter[1238]++;
    z.append(N);
    tiny_mce_js_exec_counter[1239]++;
    M = q[z.name];
    if (M && q[N.name] && !M[N.name]) 
    {
      tiny_mce_js_exec_counter[1240]++;
      G.push(N);
    }
    tiny_mce_js_exec_counter[1241]++;
    K = c.length;
    while (K--) 
      {
        tiny_mce_js_exec_counter[1242]++;
        L = c[K].name;
        if (L in P.map) 
        {
          tiny_mce_js_exec_counter[1243]++;
          D = p[L];
          if (D) 
          {
            tiny_mce_js_exec_counter[1244]++;
            D.push(N);
          } else {
            tiny_mce_js_exec_counter[1245]++;
            p[L] = [N];
          }
        }
      }
    if (o[i]) 
    {
      for (l = N.prev; l && l.type === 3; ) 
        {
          tiny_mce_js_exec_counter[1246]++;
          Q = l.value.replace(t, "");
          if (Q.length > 0) 
          {
            tiny_mce_js_exec_counter[1247]++;
            l.value = Q;
            tiny_mce_js_exec_counter[1248]++;
            l = l.prev;
          } else {
            tiny_mce_js_exec_counter[1249]++;
            O = l.prev;
            tiny_mce_js_exec_counter[1250]++;
            l.remove();
            tiny_mce_js_exec_counter[1251]++;
            l = O;
          }
        }
    }
    if (!I) 
    {
      tiny_mce_js_exec_counter[1252]++;
      z = N;
    }
  }
  tiny_mce_js_exec_counter[1231]++;
}, end: function(i) {
  tiny_mce_js_exec_counter[1253]++;
  tiny_mce_js_exec_counter[1255]++;
  var L, I, K, l, J;
  tiny_mce_js_exec_counter[1257]++;
  I = g.getElementRule(i);
  if (I) 
  {
    if (o[i]) 
    {
      if (!s[z.name]) 
      {
        for (L = z.firstChild; L && L.type === 3; ) 
          {
            tiny_mce_js_exec_counter[1258]++;
            K = L.value.replace(C, "");
            if (K.length > 0) 
            {
              tiny_mce_js_exec_counter[1259]++;
              L.value = K;
              tiny_mce_js_exec_counter[1260]++;
              L = L.next;
            } else {
              tiny_mce_js_exec_counter[1261]++;
              l = L.next;
              tiny_mce_js_exec_counter[1262]++;
              L.remove();
              tiny_mce_js_exec_counter[1263]++;
              L = l;
            }
          }
        for (L = z.lastChild; L && L.type === 3; ) 
          {
            tiny_mce_js_exec_counter[1264]++;
            K = L.value.replace(t, "");
            if (K.length > 0) 
            {
              tiny_mce_js_exec_counter[1265]++;
              L.value = K;
              tiny_mce_js_exec_counter[1266]++;
              L = L.prev;
            } else {
              tiny_mce_js_exec_counter[1267]++;
              l = L.prev;
              tiny_mce_js_exec_counter[1268]++;
              L.remove();
              tiny_mce_js_exec_counter[1269]++;
              L = l;
            }
          }
      }
      tiny_mce_js_exec_counter[1270]++;
      L = z.prev;
      if (L && L.type === 3) 
      {
        tiny_mce_js_exec_counter[1271]++;
        K = L.value.replace(C, "");
        if (K.length > 0) 
        {
          tiny_mce_js_exec_counter[1272]++;
          L.value = K;
        } else {
          tiny_mce_js_exec_counter[1273]++;
          L.remove();
        }
      }
    }
    if (I.removeEmpty || I.paddEmpty) 
    {
      if (z.isEmpty(u)) 
      {
        if (I.paddEmpty) 
        {
          tiny_mce_js_exec_counter[1274]++;
          z.empty().append(new a("#text", "3")).value = "\xa0";
        } else {
          if (!z.attributes.map.name) 
          {
            tiny_mce_js_exec_counter[1275]++;
            J = z.parent;
            tiny_mce_js_exec_counter[1276]++;
            z.empty().remove();
            tiny_mce_js_exec_counter[1277]++;
            z = J;
            tiny_mce_js_exec_counter[1278]++;
            return;
          }
        }
      }
    }
    tiny_mce_js_exec_counter[1279]++;
    z = z.parent;
  }
  tiny_mce_js_exec_counter[1254]++;
}}, g);
  tiny_mce_js_exec_counter[1280]++;
  E = z = new a(f.root_name, 11);
  tiny_mce_js_exec_counter[1281]++;
  n.parse(v);
  tiny_mce_js_exec_counter[1282]++;
  h(G);
  for (H in k) 
    {
      tiny_mce_js_exec_counter[1283]++;
      D = d[H];
      tiny_mce_js_exec_counter[1284]++;
      y = k[H];
      tiny_mce_js_exec_counter[1285]++;
      x = y.length;
      while (x--) 
        {
          if (!y[x].parent) 
          {
            tiny_mce_js_exec_counter[1286]++;
            y.splice(x, 1);
          }
        }
      for (B = 0 , A = D.length; B < A; B++) 
        {
          tiny_mce_js_exec_counter[1287]++;
          D[B](y, H, m);
        }
    }
  for (B = 0 , A = c.length; B < A; B++) 
    {
      tiny_mce_js_exec_counter[1288]++;
      D = c[B];
      if (D.name in p) 
      {
        tiny_mce_js_exec_counter[1289]++;
        y = p[D.name];
        tiny_mce_js_exec_counter[1290]++;
        x = y.length;
        while (x--) 
          {
            if (!y[x].parent) 
            {
              tiny_mce_js_exec_counter[1291]++;
              y.splice(x, 1);
            }
          }
        for (x = 0 , r = D.callbacks.length; x < r; x++) 
          {
            tiny_mce_js_exec_counter[1292]++;
            D.callbacks[x](y, D.name, m);
          }
      }
    }
  tiny_mce_js_exec_counter[1293]++;
  return E;
};
  if (f.remove_trailing_brs) 
  {
    tiny_mce_js_exec_counter[1294]++;
    e.addNodeFilter("br", function(m, k) {
  tiny_mce_js_exec_counter[1295]++;
  tiny_mce_js_exec_counter[1297]++;
  var q, p = m.length, n, t = g.getBlockElements(), j = g.getNonEmptyElements(), r, o, s;
  for (q = 0; q < p; q++) 
    {
      tiny_mce_js_exec_counter[1299]++;
      n = m[q];
      tiny_mce_js_exec_counter[1300]++;
      r = n.parent;
      if (t[n.parent.name] && n === r.lastChild) 
      {
        tiny_mce_js_exec_counter[1301]++;
        o = n.prev;
        while (o) 
          {
            tiny_mce_js_exec_counter[1302]++;
            s = o.name;
            if (s !== "span" || o.attr("data-mce-type") !== "bookmark") 
            {
              if (s !== "br") 
              {
                tiny_mce_js_exec_counter[1303]++;
                break;
              }
              if (s === "br") 
              {
                tiny_mce_js_exec_counter[1304]++;
                n = null;
                tiny_mce_js_exec_counter[1305]++;
                break;
              }
            }
            tiny_mce_js_exec_counter[1306]++;
            o = o.prev;
          }
        if (n) 
        {
          tiny_mce_js_exec_counter[1307]++;
          n.remove();
          if (r.isEmpty(j)) 
          {
            tiny_mce_js_exec_counter[1308]++;
            elementRule = g.getElementRule(r.name);
            if (elementRule.removeEmpty) 
            {
              tiny_mce_js_exec_counter[1309]++;
              r.remove();
            } else {
              if (elementRule.paddEmpty) 
              {
                tiny_mce_js_exec_counter[1310]++;
                r.empty().append(new b.html.Node("#text", 3)).value = "\xa0";
              }
            }
          }
        }
      }
    }
  tiny_mce_js_exec_counter[1296]++;
});
  }
  tiny_mce_js_exec_counter[1128]++;
};
  tiny_mce_js_exec_counter[1123]++;
})(tinymce);
tiny_mce_js_exec_counter[1311]++;
tinymce.html.Writer = function(e) {
  tiny_mce_js_exec_counter[1312]++;
  tiny_mce_js_exec_counter[1313]++;
  var c = [], a, b, d, f, g;
  tiny_mce_js_exec_counter[1315]++;
  e = e || {};
  tiny_mce_js_exec_counter[1316]++;
  a = e.indent;
  tiny_mce_js_exec_counter[1317]++;
  b = tinymce.makeMap(e.indent_before || "");
  tiny_mce_js_exec_counter[1318]++;
  d = tinymce.makeMap(e.indent_after || "");
  tiny_mce_js_exec_counter[1319]++;
  f = tinymce.html.Entities.getEncodeFunc(e.entity_encoding || "raw", e.entities);
  tiny_mce_js_exec_counter[1320]++;
  g = e.element_format == "html";
  tiny_mce_js_exec_counter[1321]++;
  return {start: function(m, k, p) {
  tiny_mce_js_exec_counter[1322]++;
  tiny_mce_js_exec_counter[1324]++;
  var n, j, h, o;
  if (a && b[m] && c.length > 0) 
  {
    tiny_mce_js_exec_counter[1326]++;
    o = c[c.length - 1];
    if (o.length > 0 && o !== "\n") 
    {
      tiny_mce_js_exec_counter[1327]++;
      c.push("\n");
    }
  }
  tiny_mce_js_exec_counter[1328]++;
  c.push("<", m);
  if (k) 
  {
    for (n = 0 , j = k.length; n < j; n++) 
      {
        tiny_mce_js_exec_counter[1329]++;
        h = k[n];
        tiny_mce_js_exec_counter[1330]++;
        c.push(" ", h.name, '="', f(h.value, true), '"');
      }
  }
  if (!p || g) 
  {
    tiny_mce_js_exec_counter[1331]++;
    c[c.length] = ">";
  } else {
    tiny_mce_js_exec_counter[1332]++;
    c[c.length] = " />";
  }
  tiny_mce_js_exec_counter[1323]++;
}, end: function(h) {
  tiny_mce_js_exec_counter[1333]++;
  tiny_mce_js_exec_counter[1335]++;
  var i;
  tiny_mce_js_exec_counter[1337]++;
  c.push("</", h, ">");
  if (a && d[h] && c.length > 0) 
  {
    tiny_mce_js_exec_counter[1338]++;
    i = c[c.length - 1];
    if (i.length > 0 && i !== "\n") 
    {
      tiny_mce_js_exec_counter[1339]++;
      c.push("\n");
    }
  }
  tiny_mce_js_exec_counter[1334]++;
}, text: function(i, h) {
  tiny_mce_js_exec_counter[1340]++;
  if (i.length > 0) 
  {
    tiny_mce_js_exec_counter[1342]++;
    c[c.length] = h ? i : f(i);
  }
  tiny_mce_js_exec_counter[1341]++;
}, cdata: function(h) {
  tiny_mce_js_exec_counter[1343]++;
  tiny_mce_js_exec_counter[1345]++;
  c.push("<![CDATA[", h, "]]>");
  tiny_mce_js_exec_counter[1344]++;
}, comment: function(h) {
  tiny_mce_js_exec_counter[1346]++;
  tiny_mce_js_exec_counter[1348]++;
  c.push("<!--", h, "-->");
  tiny_mce_js_exec_counter[1347]++;
}, pi: function(h, i) {
  tiny_mce_js_exec_counter[1349]++;
  if (i) 
  {
    tiny_mce_js_exec_counter[1351]++;
    c.push("<?", h, " ", i, "?>");
  } else {
    tiny_mce_js_exec_counter[1352]++;
    c.push("<?", h, "?>");
  }
  tiny_mce_js_exec_counter[1350]++;
}, doctype: function(h) {
  tiny_mce_js_exec_counter[1353]++;
  tiny_mce_js_exec_counter[1355]++;
  c.push("<!DOCTYPE", h, ">");
  tiny_mce_js_exec_counter[1354]++;
}, reset: function() {
  tiny_mce_js_exec_counter[1356]++;
  tiny_mce_js_exec_counter[1358]++;
  c.length = 0;
  tiny_mce_js_exec_counter[1357]++;
}, getContent: function() {
  tiny_mce_js_exec_counter[1359]++;
  tiny_mce_js_exec_counter[1360]++;
  return c.join("").replace(/\n$/, "");
}};
};
tiny_mce_js_exec_counter[1361]++;
(function(a) {
  tiny_mce_js_exec_counter[1362]++;
  tiny_mce_js_exec_counter[1364]++;
  a.html.Serializer = function(c, d) {
  tiny_mce_js_exec_counter[1365]++;
  tiny_mce_js_exec_counter[1367]++;
  var b = this, e = new a.html.Writer(c);
  tiny_mce_js_exec_counter[1369]++;
  c = c || {};
  tiny_mce_js_exec_counter[1370]++;
  c.validate = "validate" in c ? c.validate : true;
  tiny_mce_js_exec_counter[1371]++;
  b.schema = d = d || new a.html.Schema();
  tiny_mce_js_exec_counter[1372]++;
  b.writer = e;
  tiny_mce_js_exec_counter[1373]++;
  b.serialize = function(h) {
  tiny_mce_js_exec_counter[1374]++;
  tiny_mce_js_exec_counter[1375]++;
  var g, i;
  tiny_mce_js_exec_counter[1377]++;
  i = c.validate;
  tiny_mce_js_exec_counter[1378]++;
  g = {3: function(k, j) {
  tiny_mce_js_exec_counter[1379]++;
  tiny_mce_js_exec_counter[1381]++;
  e.text(k.value, k.raw);
  tiny_mce_js_exec_counter[1380]++;
}, 8: function(j) {
  tiny_mce_js_exec_counter[1382]++;
  tiny_mce_js_exec_counter[1384]++;
  e.comment(j.value);
  tiny_mce_js_exec_counter[1383]++;
}, 7: function(j) {
  tiny_mce_js_exec_counter[1385]++;
  tiny_mce_js_exec_counter[1387]++;
  e.pi(j.name, j.value);
  tiny_mce_js_exec_counter[1386]++;
}, 10: function(j) {
  tiny_mce_js_exec_counter[1388]++;
  tiny_mce_js_exec_counter[1390]++;
  e.doctype(j.value);
  tiny_mce_js_exec_counter[1389]++;
}, 4: function(j) {
  tiny_mce_js_exec_counter[1391]++;
  tiny_mce_js_exec_counter[1393]++;
  e.cdata(j.value);
  tiny_mce_js_exec_counter[1392]++;
}, 11: function(j) {
  tiny_mce_js_exec_counter[1394]++;
  if ((j = j.firstChild)) 
  {
do {
      tiny_mce_js_exec_counter[1396]++;
      f(j);
    } while (j = j.next);
  }
  tiny_mce_js_exec_counter[1395]++;
}};
  tiny_mce_js_exec_counter[1397]++;
  e.reset();
  function f(k) {
    tiny_mce_js_exec_counter[1398]++;
    tiny_mce_js_exec_counter[1400]++;
    var t = g[k.type], j, o, s, r, p, u, n, m, q;
    if (!t) 
    {
      tiny_mce_js_exec_counter[1402]++;
      j = k.name;
      tiny_mce_js_exec_counter[1403]++;
      o = k.shortEnded;
      tiny_mce_js_exec_counter[1404]++;
      s = k.attributes;
      if (i && s && s.length > 1) 
      {
        tiny_mce_js_exec_counter[1405]++;
        u = [];
        tiny_mce_js_exec_counter[1406]++;
        u.map = {};
        tiny_mce_js_exec_counter[1407]++;
        q = d.getElementRule(k.name);
        for (n = 0 , m = q.attributesOrder.length; n < m; n++) 
          {
            tiny_mce_js_exec_counter[1408]++;
            r = q.attributesOrder[n];
            if (r in s.map) 
            {
              tiny_mce_js_exec_counter[1409]++;
              p = s.map[r];
              tiny_mce_js_exec_counter[1410]++;
              u.map[r] = p;
              tiny_mce_js_exec_counter[1411]++;
              u.push({name: r, value: p});
            }
          }
        for (n = 0 , m = s.length; n < m; n++) 
          {
            tiny_mce_js_exec_counter[1412]++;
            r = s[n].name;
            if (!(r in u.map)) 
            {
              tiny_mce_js_exec_counter[1413]++;
              p = s.map[r];
              tiny_mce_js_exec_counter[1414]++;
              u.map[r] = p;
              tiny_mce_js_exec_counter[1415]++;
              u.push({name: r, value: p});
            }
          }
        tiny_mce_js_exec_counter[1416]++;
        s = u;
      }
      tiny_mce_js_exec_counter[1417]++;
      e.start(k.name, s, o);
      if (!o) 
      {
        if ((k = k.firstChild)) 
        {
do {
            tiny_mce_js_exec_counter[1418]++;
            f(k);
          } while (k = k.next);
        }
        tiny_mce_js_exec_counter[1419]++;
        e.end(j);
      }
    } else {
      tiny_mce_js_exec_counter[1420]++;
      t(k);
    }
    tiny_mce_js_exec_counter[1399]++;
  }
  if (h.type == 1 && !c.inner) 
  {
    tiny_mce_js_exec_counter[1421]++;
    f(h);
  } else {
    tiny_mce_js_exec_counter[1422]++;
    g[11](h);
  }
  tiny_mce_js_exec_counter[1423]++;
  return e.getContent();
};
  tiny_mce_js_exec_counter[1366]++;
};
  tiny_mce_js_exec_counter[1363]++;
})(tinymce);
tiny_mce_js_exec_counter[1424]++;
(function(d) {
  tiny_mce_js_exec_counter[1425]++;
  tiny_mce_js_exec_counter[1427]++;
  var f = d.each, c = d.is, e = d.isWebKit, a = d.isIE, h = d.html.Entities, b = /^([a-z0-9],?)+$/i, g = d.html.Schema.blockElementsMap;
  tiny_mce_js_exec_counter[1429]++;
  d.create("tinymce.dom.DOMUtils", {doc: null, root: null, files: null, pixelStyles: /^(top|left|bottom|right|width|height|borderWidth)$/, props: {"for": "htmlFor", "class": "className", className: "className", checked: "checked", disabled: "disabled", maxlength: "maxLength", readonly: "readOnly", selected: "selected", value: "value", id: "id", name: "name", type: "type"}, DOMUtils: function(m, k) {
  tiny_mce_js_exec_counter[1430]++;
  tiny_mce_js_exec_counter[1432]++;
  var j = this, i;
  tiny_mce_js_exec_counter[1434]++;
  j.doc = m;
  tiny_mce_js_exec_counter[1435]++;
  j.win = window;
  tiny_mce_js_exec_counter[1436]++;
  j.files = {};
  tiny_mce_js_exec_counter[1437]++;
  j.cssFlicker = false;
  tiny_mce_js_exec_counter[1438]++;
  j.counter = 0;
  tiny_mce_js_exec_counter[1439]++;
  j.stdMode = !d.isIE || m.documentMode >= 8;
  tiny_mce_js_exec_counter[1440]++;
  j.boxModel = !d.isIE || m.compatMode == "CSS1Compat" || j.stdMode;
  tiny_mce_js_exec_counter[1441]++;
  j.hasOuterHTML = "outerHTML" in m.createElement("a");
  tiny_mce_js_exec_counter[1442]++;
  j.settings = k = d.extend({keep_values: false, hex_colors: 1}, k);
  tiny_mce_js_exec_counter[1443]++;
  j.styles = new d.html.Styles({url_converter: k.url_converter, url_converter_scope: k.url_converter_scope}, k.schema);
  if (d.isIE6) 
  {
    try {
      tiny_mce_js_exec_counter[1444]++;
      m.execCommand("BackgroundImageCache", false, true);
    }    catch (l) {
  tiny_mce_js_exec_counter[1445]++;
  j.cssFlicker = true;
}
  }
  if (a) 
  {
    tiny_mce_js_exec_counter[1446]++;
    ("abbr article aside audio canvas details figcaption figure footer header hgroup mark menu meter nav output progress section summary time video").replace(/\w+/g, function(n) {
  tiny_mce_js_exec_counter[1447]++;
  tiny_mce_js_exec_counter[1449]++;
  m.createElement(n);
  tiny_mce_js_exec_counter[1448]++;
});
  }
  tiny_mce_js_exec_counter[1450]++;
  d.addUnload(j.destroy, j);
  tiny_mce_js_exec_counter[1431]++;
}, getRoot: function() {
  tiny_mce_js_exec_counter[1451]++;
  tiny_mce_js_exec_counter[1452]++;
  var i = this, j = i.settings;
  tiny_mce_js_exec_counter[1454]++;
  return (j && i.get(j.root_element)) || i.doc.body;
}, getViewPort: function(j) {
  tiny_mce_js_exec_counter[1455]++;
  tiny_mce_js_exec_counter[1456]++;
  var k, i;
  tiny_mce_js_exec_counter[1458]++;
  j = !j ? this.win : j;
  tiny_mce_js_exec_counter[1459]++;
  k = j.document;
  tiny_mce_js_exec_counter[1460]++;
  i = this.boxModel ? k.documentElement : k.body;
  tiny_mce_js_exec_counter[1461]++;
  return {x: j.pageXOffset || i.scrollLeft, y: j.pageYOffset || i.scrollTop, w: j.innerWidth || i.clientWidth, h: j.innerHeight || i.clientHeight};
}, getRect: function(l) {
  tiny_mce_js_exec_counter[1462]++;
  tiny_mce_js_exec_counter[1463]++;
  var k, i = this, j;
  tiny_mce_js_exec_counter[1465]++;
  l = i.get(l);
  tiny_mce_js_exec_counter[1466]++;
  k = i.getPos(l);
  tiny_mce_js_exec_counter[1467]++;
  j = i.getSize(l);
  tiny_mce_js_exec_counter[1468]++;
  return {x: k.x, y: k.y, w: j.w, h: j.h};
}, getSize: function(l) {
  tiny_mce_js_exec_counter[1469]++;
  tiny_mce_js_exec_counter[1470]++;
  var j = this, i, k;
  tiny_mce_js_exec_counter[1472]++;
  l = j.get(l);
  tiny_mce_js_exec_counter[1473]++;
  i = j.getStyle(l, "width");
  tiny_mce_js_exec_counter[1474]++;
  k = j.getStyle(l, "height");
  if (i.indexOf("px") === -1) 
  {
    tiny_mce_js_exec_counter[1475]++;
    i = 0;
  }
  if (k.indexOf("px") === -1) 
  {
    tiny_mce_js_exec_counter[1476]++;
    k = 0;
  }
  tiny_mce_js_exec_counter[1477]++;
  return {w: parseInt(i) || l.offsetWidth || l.clientWidth, h: parseInt(k) || l.offsetHeight || l.clientHeight};
}, getParent: function(k, j, i) {
  tiny_mce_js_exec_counter[1478]++;
  tiny_mce_js_exec_counter[1479]++;
  return this.getParents(k, j, i, false);
}, getParents: function(s, m, k, q) {
  tiny_mce_js_exec_counter[1480]++;
  tiny_mce_js_exec_counter[1481]++;
  var j = this, i, l = j.settings, p = [];
  tiny_mce_js_exec_counter[1483]++;
  s = j.get(s);
  tiny_mce_js_exec_counter[1484]++;
  q = q === undefined;
  if (l.strict_root) 
  {
    tiny_mce_js_exec_counter[1485]++;
    k = k || j.getRoot();
  }
  if (c(m, "string")) 
  {
    tiny_mce_js_exec_counter[1486]++;
    i = m;
    if (m === "*") 
    {
      tiny_mce_js_exec_counter[1487]++;
      m = function(o) {
  tiny_mce_js_exec_counter[1488]++;
  tiny_mce_js_exec_counter[1489]++;
  return o.nodeType == 1;
};
    } else {
      tiny_mce_js_exec_counter[1490]++;
      m = function(o) {
  tiny_mce_js_exec_counter[1491]++;
  tiny_mce_js_exec_counter[1492]++;
  return j.is(o, i);
};
    }
  }
  while (s) 
    {
      if (s == k || !s.nodeType || s.nodeType === 9) 
      {
        tiny_mce_js_exec_counter[1493]++;
        break;
      }
      if (!m || m(s)) 
      {
        if (q) 
        {
          tiny_mce_js_exec_counter[1494]++;
          p.push(s);
        } else {
          tiny_mce_js_exec_counter[1495]++;
          return s;
        }
      }
      tiny_mce_js_exec_counter[1496]++;
      s = s.parentNode;
    }
  tiny_mce_js_exec_counter[1497]++;
  return q ? p : null;
}, get: function(i) {
  tiny_mce_js_exec_counter[1498]++;
  tiny_mce_js_exec_counter[1499]++;
  var j;
  if (i && this.doc && typeof (i) == "string") 
  {
    tiny_mce_js_exec_counter[1501]++;
    j = i;
    tiny_mce_js_exec_counter[1502]++;
    i = this.doc.getElementById(i);
    if (i && i.id !== j) 
    {
      tiny_mce_js_exec_counter[1503]++;
      return this.doc.getElementsByName(j)[1];
    }
  }
  tiny_mce_js_exec_counter[1504]++;
  return i;
}, getNext: function(j, i) {
  tiny_mce_js_exec_counter[1505]++;
  tiny_mce_js_exec_counter[1506]++;
  return this._findSib(j, i, "nextSibling");
}, getPrev: function(j, i) {
  tiny_mce_js_exec_counter[1507]++;
  tiny_mce_js_exec_counter[1508]++;
  return this._findSib(j, i, "previousSibling");
}, select: function(k, j) {
  tiny_mce_js_exec_counter[1509]++;
  tiny_mce_js_exec_counter[1510]++;
  var i = this;
  tiny_mce_js_exec_counter[1512]++;
  return d.dom.Sizzle(k, i.get(j) || i.get(i.settings.root_element) || i.doc, []);
}, is: function(l, j) {
  tiny_mce_js_exec_counter[1513]++;
  tiny_mce_js_exec_counter[1514]++;
  var k;
  if (l.length === undefined) 
  {
    if (j === "*") 
    {
      tiny_mce_js_exec_counter[1516]++;
      return l.nodeType == 1;
    }
    if (b.test(j)) 
    {
      tiny_mce_js_exec_counter[1517]++;
      j = j.toLowerCase().split(/,/);
      tiny_mce_js_exec_counter[1518]++;
      l = l.nodeName.toLowerCase();
      for (k = j.length - 1; k >= 0; k--) 
        {
          if (j[k] == l) 
          {
            tiny_mce_js_exec_counter[1519]++;
            return true;
          }
        }
      tiny_mce_js_exec_counter[1520]++;
      return false;
    }
  }
  tiny_mce_js_exec_counter[1521]++;
  return d.dom.Sizzle.matches(j, l.nodeType ? [l] : l).length > 0;
}, add: function(l, o, i, k, m) {
  tiny_mce_js_exec_counter[1522]++;
  tiny_mce_js_exec_counter[1523]++;
  var j = this;
  tiny_mce_js_exec_counter[1525]++;
  return this.run(l, function(r) {
  tiny_mce_js_exec_counter[1526]++;
  tiny_mce_js_exec_counter[1527]++;
  var q, n;
  tiny_mce_js_exec_counter[1529]++;
  q = c(o, "string") ? j.doc.createElement(o) : o;
  tiny_mce_js_exec_counter[1530]++;
  j.setAttribs(q, i);
  if (k) 
  {
    if (k.nodeType) 
    {
      tiny_mce_js_exec_counter[1531]++;
      q.appendChild(k);
    } else {
      tiny_mce_js_exec_counter[1532]++;
      j.setHTML(q, k);
    }
  }
  tiny_mce_js_exec_counter[1533]++;
  return !m ? r.appendChild(q) : q;
});
}, create: function(k, i, j) {
  tiny_mce_js_exec_counter[1534]++;
  tiny_mce_js_exec_counter[1535]++;
  return this.add(this.doc.createElement(k), k, i, j, 1);
}, createHTML: function(q, i, m) {
  tiny_mce_js_exec_counter[1536]++;
  tiny_mce_js_exec_counter[1537]++;
  var p = "", l = this, j;
  tiny_mce_js_exec_counter[1539]++;
  p += "<" + q;
  for (j in i) 
    {
      if (i.hasOwnProperty(j)) 
      {
        tiny_mce_js_exec_counter[1540]++;
        p += " " + j + '="' + l.encode(i[j]) + '"';
      }
    }
  if (typeof (m) != "undefined") 
  {
    tiny_mce_js_exec_counter[1541]++;
    return p + ">" + m + "</" + q + ">";
  }
  tiny_mce_js_exec_counter[1542]++;
  return p + " />";
}, remove: function(i, j) {
  tiny_mce_js_exec_counter[1543]++;
  tiny_mce_js_exec_counter[1544]++;
  return this.run(i, function(l) {
  tiny_mce_js_exec_counter[1545]++;
  tiny_mce_js_exec_counter[1546]++;
  var k, m;
  tiny_mce_js_exec_counter[1548]++;
  k = l.parentNode;
  if (!k) 
  {
    tiny_mce_js_exec_counter[1549]++;
    return null;
  }
  if (j) 
  {
    while (m = l.firstChild) 
      {
        if (!d.isIE || m.nodeType !== 3 || m.nodeValue) 
        {
          tiny_mce_js_exec_counter[1550]++;
          k.insertBefore(m, l);
        } else {
          tiny_mce_js_exec_counter[1551]++;
          l.removeChild(m);
        }
      }
  }
  tiny_mce_js_exec_counter[1552]++;
  return k.removeChild(l);
});
}, setStyle: function(l, i, j) {
  tiny_mce_js_exec_counter[1553]++;
  tiny_mce_js_exec_counter[1554]++;
  var k = this;
  tiny_mce_js_exec_counter[1556]++;
  return k.run(l, function(o) {
  tiny_mce_js_exec_counter[1557]++;
  tiny_mce_js_exec_counter[1559]++;
  var n, m;
  tiny_mce_js_exec_counter[1561]++;
  n = o.style;
  tiny_mce_js_exec_counter[1562]++;
  i = i.replace(/-(\D)/g, function(q, p) {
  tiny_mce_js_exec_counter[1563]++;
  tiny_mce_js_exec_counter[1564]++;
  return p.toUpperCase();
});
  if (k.pixelStyles.test(i) && (d.is(j, "number") || /^[\-0-9\.]+$/.test(j))) 
  {
    tiny_mce_js_exec_counter[1565]++;
    j += "px";
  }
  switch (i) {
    case "opacity":
      {
        if (a) 
        {
          tiny_mce_js_exec_counter[1566]++;
          n.filter = j === "" ? "" : "alpha(opacity=" + (j * 100) + ")";
          if (!l.currentStyle || !l.currentStyle.hasLayout) 
          {
            tiny_mce_js_exec_counter[1567]++;
            n.display = "inline-block";
          }
        }
        tiny_mce_js_exec_counter[1568]++;
        n[i] = n["-moz-opacity"] = n["-khtml-opacity"] = j || "";
        tiny_mce_js_exec_counter[1569]++;
        break;
      }
    case "float":
      {
        tiny_mce_js_exec_counter[1570]++;
                a ? n.styleFloat = j : n.cssFloat = j;
        tiny_mce_js_exec_counter[1571]++;
        break;
      }
    default:
      {
        tiny_mce_js_exec_counter[1572]++;
        n[i] = j || "";
      }
  }
  if (k.settings.update_styles) 
  {
    tiny_mce_js_exec_counter[1573]++;
    k.setAttrib(o, "data-mce-style");
  }
  tiny_mce_js_exec_counter[1558]++;
});
}, getStyle: function(l, i, k) {
  tiny_mce_js_exec_counter[1574]++;
  tiny_mce_js_exec_counter[1575]++;
  l = this.get(l);
  if (!l) 
  {
    tiny_mce_js_exec_counter[1576]++;
    return false;
  }
  if (this.doc.defaultView && k) 
  {
    tiny_mce_js_exec_counter[1577]++;
    i = i.replace(/[A-Z]/g, function(m) {
  tiny_mce_js_exec_counter[1578]++;
  tiny_mce_js_exec_counter[1579]++;
  return "-" + m;
});
    try {
      tiny_mce_js_exec_counter[1580]++;
      return this.doc.defaultView.getComputedStyle(l, null).getPropertyValue(i);
    }    catch (j) {
  tiny_mce_js_exec_counter[1581]++;
  return null;
}
  }
  tiny_mce_js_exec_counter[1582]++;
  i = i.replace(/-(\D)/g, function(n, m) {
  tiny_mce_js_exec_counter[1583]++;
  tiny_mce_js_exec_counter[1584]++;
  return m.toUpperCase();
});
  if (i == "float") 
  {
    tiny_mce_js_exec_counter[1585]++;
    i = a ? "styleFloat" : "cssFloat";
  }
  if (l.currentStyle && k) 
  {
    tiny_mce_js_exec_counter[1586]++;
    return l.currentStyle[i];
  }
  tiny_mce_js_exec_counter[1587]++;
  return l.style[i];
}, setStyles: function(l, m) {
  tiny_mce_js_exec_counter[1588]++;
  tiny_mce_js_exec_counter[1590]++;
  var j = this, k = j.settings, i;
  tiny_mce_js_exec_counter[1592]++;
  i = k.update_styles;
  tiny_mce_js_exec_counter[1593]++;
  k.update_styles = 0;
  tiny_mce_js_exec_counter[1594]++;
  f(m, function(o, p) {
  tiny_mce_js_exec_counter[1595]++;
  tiny_mce_js_exec_counter[1597]++;
  j.setStyle(l, p, o);
  tiny_mce_js_exec_counter[1596]++;
});
  tiny_mce_js_exec_counter[1598]++;
  k.update_styles = i;
  if (k.update_styles) 
  {
    tiny_mce_js_exec_counter[1599]++;
    j.setAttrib(l, k.cssText);
  }
  tiny_mce_js_exec_counter[1589]++;
}, removeAllAttribs: function(i) {
  tiny_mce_js_exec_counter[1600]++;
  tiny_mce_js_exec_counter[1601]++;
  return this.run(i, function(l) {
  tiny_mce_js_exec_counter[1602]++;
  tiny_mce_js_exec_counter[1604]++;
  var j = l.attributes;
  for (var k = j.length - 1; k >= 0; k--) 
    {
      tiny_mce_js_exec_counter[1606]++;
      l.removeAttributeNode(j.item(k));
    }
  tiny_mce_js_exec_counter[1603]++;
});
}, setAttrib: function(k, l, i) {
  tiny_mce_js_exec_counter[1607]++;
  tiny_mce_js_exec_counter[1608]++;
  var j = this;
  if (!k || !l) 
  {
    tiny_mce_js_exec_counter[1610]++;
    return;
  }
  if (j.settings.strict) 
  {
    tiny_mce_js_exec_counter[1611]++;
    l = l.toLowerCase();
  }
  tiny_mce_js_exec_counter[1612]++;
  return this.run(k, function(n) {
  tiny_mce_js_exec_counter[1613]++;
  tiny_mce_js_exec_counter[1615]++;
  var m = j.settings;
  switch (l) {
    case "style":
      {
        if (!c(i, "string")) 
        {
          tiny_mce_js_exec_counter[1617]++;
          f(i, function(o, p) {
  tiny_mce_js_exec_counter[1618]++;
  tiny_mce_js_exec_counter[1620]++;
  j.setStyle(n, p, o);
  tiny_mce_js_exec_counter[1619]++;
});
          tiny_mce_js_exec_counter[1621]++;
          return;
        }
        if (m.keep_values) 
        {
          if (i && !j._isRes(i)) 
          {
            tiny_mce_js_exec_counter[1622]++;
            n.setAttribute("data-mce-style", i, 2);
          } else {
            tiny_mce_js_exec_counter[1623]++;
            n.removeAttribute("data-mce-style", 2);
          }
        }
        tiny_mce_js_exec_counter[1624]++;
        n.style.cssText = i;
        tiny_mce_js_exec_counter[1625]++;
        break;
      }
    case "class":
      {
        tiny_mce_js_exec_counter[1626]++;
        n.className = i || "";
        tiny_mce_js_exec_counter[1627]++;
        break;
      }
    case "src":
    case "href":
      {
        if (m.keep_values) 
        {
          if (m.url_converter) 
          {
            tiny_mce_js_exec_counter[1628]++;
            i = m.url_converter.call(m.url_converter_scope || j, i, l, n);
          }
          tiny_mce_js_exec_counter[1629]++;
          j.setAttrib(n, "data-mce-" + l, i, 2);
        }
        tiny_mce_js_exec_counter[1630]++;
        break;
      }
    case "shape":
      {
        tiny_mce_js_exec_counter[1631]++;
        n.setAttribute("data-mce-style", i);
        tiny_mce_js_exec_counter[1632]++;
        break;
      }
  }
  if (c(i) && i !== null && i.length !== 0) 
  {
    tiny_mce_js_exec_counter[1633]++;
    n.setAttribute(l, "" + i, 2);
  } else {
    tiny_mce_js_exec_counter[1634]++;
    n.removeAttribute(l, 2);
  }
  tiny_mce_js_exec_counter[1614]++;
});
}, setAttribs: function(j, k) {
  tiny_mce_js_exec_counter[1635]++;
  tiny_mce_js_exec_counter[1636]++;
  var i = this;
  tiny_mce_js_exec_counter[1638]++;
  return this.run(j, function(l) {
  tiny_mce_js_exec_counter[1639]++;
  tiny_mce_js_exec_counter[1641]++;
  f(k, function(m, o) {
  tiny_mce_js_exec_counter[1642]++;
  tiny_mce_js_exec_counter[1644]++;
  i.setAttrib(l, o, m);
  tiny_mce_js_exec_counter[1643]++;
});
  tiny_mce_js_exec_counter[1640]++;
});
}, getAttrib: function(l, m, k) {
  tiny_mce_js_exec_counter[1645]++;
  tiny_mce_js_exec_counter[1646]++;
  var i, j = this;
  tiny_mce_js_exec_counter[1648]++;
  l = j.get(l);
  if (!l || l.nodeType !== 1) 
  {
    tiny_mce_js_exec_counter[1649]++;
    return false;
  }
  if (!c(k)) 
  {
    tiny_mce_js_exec_counter[1650]++;
    k = "";
  }
  if (/^(src|href|style|coords|shape)$/.test(m)) 
  {
    tiny_mce_js_exec_counter[1651]++;
    i = l.getAttribute("data-mce-" + m);
    if (i) 
    {
      tiny_mce_js_exec_counter[1652]++;
      return i;
    }
  }
  if (a && j.props[m]) 
  {
    tiny_mce_js_exec_counter[1653]++;
    i = l[j.props[m]];
    tiny_mce_js_exec_counter[1654]++;
    i = i && i.nodeValue ? i.nodeValue : i;
  }
  if (!i) 
  {
    tiny_mce_js_exec_counter[1655]++;
    i = l.getAttribute(m, 2);
  }
  if (/^(checked|compact|declare|defer|disabled|ismap|multiple|nohref|noshade|nowrap|readonly|selected)$/.test(m)) 
  {
    if (l[j.props[m]] === true && i === "") 
    {
      tiny_mce_js_exec_counter[1656]++;
      return m;
    }
    tiny_mce_js_exec_counter[1657]++;
    return i ? m : "";
  }
  if (l.nodeName === "FORM" && l.getAttributeNode(m)) 
  {
    tiny_mce_js_exec_counter[1658]++;
    return l.getAttributeNode(m).nodeValue;
  }
  if (m === "style") 
  {
    tiny_mce_js_exec_counter[1659]++;
    i = i || l.style.cssText;
    if (i) 
    {
      tiny_mce_js_exec_counter[1660]++;
      i = j.serializeStyle(j.parseStyle(i), l.nodeName);
      if (j.settings.keep_values && !j._isRes(i)) 
      {
        tiny_mce_js_exec_counter[1661]++;
        l.setAttribute("data-mce-style", i);
      }
    }
  }
  if (e && m === "class" && i) 
  {
    tiny_mce_js_exec_counter[1662]++;
    i = i.replace(/(apple|webkit)\-[a-z\-]+/gi, "");
  }
  if (a) 
  {
    switch (m) {
      case "rowspan":
      case "colspan":
        {
          if (i === 1) 
          {
            tiny_mce_js_exec_counter[1663]++;
            i = "";
          }
          tiny_mce_js_exec_counter[1664]++;
          break;
        }
      case "size":
        {
          if (i === "+0" || i === 20 || i === 0) 
          {
            tiny_mce_js_exec_counter[1665]++;
            i = "";
          }
          tiny_mce_js_exec_counter[1666]++;
          break;
        }
      case "width":
      case "height":
      case "vspace":
      case "checked":
      case "disabled":
      case "readonly":
        {
          if (i === 0) 
          {
            tiny_mce_js_exec_counter[1667]++;
            i = "";
          }
          tiny_mce_js_exec_counter[1668]++;
          break;
        }
      case "hspace":
        {
          if (i === -1) 
          {
            tiny_mce_js_exec_counter[1669]++;
            i = "";
          }
          tiny_mce_js_exec_counter[1670]++;
          break;
        }
      case "maxlength":
      case "tabindex":
        {
          if (i === 32768 || i === 2147483647 || i === "32768") 
          {
            tiny_mce_js_exec_counter[1671]++;
            i = "";
          }
          tiny_mce_js_exec_counter[1672]++;
          break;
        }
      case "multiple":
      case "compact":
      case "noshade":
      case "nowrap":
        {
          if (i === 65535) 
          {
            tiny_mce_js_exec_counter[1673]++;
            return m;
          }
          tiny_mce_js_exec_counter[1674]++;
          return k;
        }
      case "shape":
        {
          tiny_mce_js_exec_counter[1675]++;
          i = i.toLowerCase();
          tiny_mce_js_exec_counter[1676]++;
          break;
        }
      default:
        {
          if (m.indexOf("on") === 0 && i) 
          {
            tiny_mce_js_exec_counter[1677]++;
            i = d._replace(/^function\s+\w+\(\)\s+\{\s+(.*)\s+\}$/, "$1", "" + i);
          }
        }
    }
  }
  tiny_mce_js_exec_counter[1678]++;
  return (i !== undefined && i !== null && i !== "") ? "" + i : k;
}, getPos: function(q, l) {
  tiny_mce_js_exec_counter[1679]++;
  tiny_mce_js_exec_counter[1680]++;
  var j = this, i = 0, p = 0, m, o = j.doc, k;
  tiny_mce_js_exec_counter[1682]++;
  q = j.get(q);
  tiny_mce_js_exec_counter[1683]++;
  l = l || o.body;
  if (q) 
  {
    if (a && !j.stdMode) 
    {
      tiny_mce_js_exec_counter[1684]++;
      q = q.getBoundingClientRect();
      tiny_mce_js_exec_counter[1685]++;
      m = j.boxModel ? o.documentElement : o.body;
      tiny_mce_js_exec_counter[1686]++;
      i = j.getStyle(j.select("html")[0], "borderWidth");
      tiny_mce_js_exec_counter[1687]++;
      i = (i == "medium" || j.boxModel && !j.isIE6) && 2 || i;
      tiny_mce_js_exec_counter[1688]++;
      return {x: q.left + m.scrollLeft - i, y: q.top + m.scrollTop - i};
    }
    tiny_mce_js_exec_counter[1689]++;
    k = q;
    while (k && k != l && k.nodeType) 
      {
        tiny_mce_js_exec_counter[1690]++;
        i += k.offsetLeft || 0;
        tiny_mce_js_exec_counter[1691]++;
        p += k.offsetTop || 0;
        tiny_mce_js_exec_counter[1692]++;
        k = k.offsetParent;
      }
    tiny_mce_js_exec_counter[1693]++;
    k = q.parentNode;
    while (k && k != l && k.nodeType) 
      {
        tiny_mce_js_exec_counter[1694]++;
        i -= k.scrollLeft || 0;
        tiny_mce_js_exec_counter[1695]++;
        p -= k.scrollTop || 0;
        tiny_mce_js_exec_counter[1696]++;
        k = k.parentNode;
      }
  }
  tiny_mce_js_exec_counter[1697]++;
  return {x: i, y: p};
}, parseStyle: function(i) {
  tiny_mce_js_exec_counter[1698]++;
  tiny_mce_js_exec_counter[1699]++;
  return this.styles.parse(i);
}, serializeStyle: function(j, i) {
  tiny_mce_js_exec_counter[1700]++;
  tiny_mce_js_exec_counter[1701]++;
  return this.styles.serialize(j, i);
}, loadCSS: function(i) {
  tiny_mce_js_exec_counter[1702]++;
  tiny_mce_js_exec_counter[1704]++;
  var k = this, l = k.doc, j;
  if (!i) 
  {
    tiny_mce_js_exec_counter[1706]++;
    i = "";
  }
  tiny_mce_js_exec_counter[1707]++;
  j = k.select("head")[0];
  tiny_mce_js_exec_counter[1708]++;
  f(i.split(","), function(m) {
  tiny_mce_js_exec_counter[1709]++;
  tiny_mce_js_exec_counter[1711]++;
  var n;
  if (k.files[m]) 
  {
    tiny_mce_js_exec_counter[1713]++;
    return;
  }
  tiny_mce_js_exec_counter[1714]++;
  k.files[m] = true;
  tiny_mce_js_exec_counter[1715]++;
  n = k.create("link", {rel: "stylesheet", href: d._addVer(m)});
  if (a && l.documentMode && l.recalc) 
  {
    tiny_mce_js_exec_counter[1716]++;
    n.onload = function() {
  tiny_mce_js_exec_counter[1717]++;
  if (l.recalc) 
  {
    tiny_mce_js_exec_counter[1719]++;
    l.recalc();
  }
  tiny_mce_js_exec_counter[1720]++;
  n.onload = null;
  tiny_mce_js_exec_counter[1718]++;
};
  }
  tiny_mce_js_exec_counter[1721]++;
  j.appendChild(n);
  tiny_mce_js_exec_counter[1710]++;
});
  tiny_mce_js_exec_counter[1703]++;
}, addClass: function(i, j) {
  tiny_mce_js_exec_counter[1722]++;
  tiny_mce_js_exec_counter[1723]++;
  return this.run(i, function(k) {
  tiny_mce_js_exec_counter[1724]++;
  tiny_mce_js_exec_counter[1725]++;
  var l;
  if (!j) 
  {
    tiny_mce_js_exec_counter[1727]++;
    return 0;
  }
  if (this.hasClass(k, j)) 
  {
    tiny_mce_js_exec_counter[1728]++;
    return k.className;
  }
  tiny_mce_js_exec_counter[1729]++;
  l = this.removeClass(k, j);
  tiny_mce_js_exec_counter[1730]++;
  return k.className = (l != "" ? (l + " ") : "") + j;
});
}, removeClass: function(k, l) {
  tiny_mce_js_exec_counter[1731]++;
  tiny_mce_js_exec_counter[1732]++;
  var i = this, j;
  tiny_mce_js_exec_counter[1734]++;
  return i.run(k, function(n) {
  tiny_mce_js_exec_counter[1735]++;
  tiny_mce_js_exec_counter[1736]++;
  var m;
  if (i.hasClass(n, l)) 
  {
    if (!j) 
    {
      tiny_mce_js_exec_counter[1738]++;
      j = new RegExp("(^|\\s+)" + l + "(\\s+|$)", "g");
    }
    tiny_mce_js_exec_counter[1739]++;
    m = n.className.replace(j, " ");
    tiny_mce_js_exec_counter[1740]++;
    m = d.trim(m != " " ? m : "");
    tiny_mce_js_exec_counter[1741]++;
    n.className = m;
    if (!m) 
    {
      tiny_mce_js_exec_counter[1742]++;
      n.removeAttribute("class");
      tiny_mce_js_exec_counter[1743]++;
      n.removeAttribute("className");
    }
    tiny_mce_js_exec_counter[1744]++;
    return m;
  }
  tiny_mce_js_exec_counter[1745]++;
  return n.className;
});
}, hasClass: function(j, i) {
  tiny_mce_js_exec_counter[1746]++;
  tiny_mce_js_exec_counter[1747]++;
  j = this.get(j);
  if (!j || !i) 
  {
    tiny_mce_js_exec_counter[1748]++;
    return false;
  }
  tiny_mce_js_exec_counter[1749]++;
  return (" " + j.className + " ").indexOf(" " + i + " ") !== -1;
}, show: function(i) {
  tiny_mce_js_exec_counter[1750]++;
  tiny_mce_js_exec_counter[1751]++;
  return this.setStyle(i, "display", "block");
}, hide: function(i) {
  tiny_mce_js_exec_counter[1752]++;
  tiny_mce_js_exec_counter[1753]++;
  return this.setStyle(i, "display", "none");
}, isHidden: function(i) {
  tiny_mce_js_exec_counter[1754]++;
  tiny_mce_js_exec_counter[1755]++;
  i = this.get(i);
  tiny_mce_js_exec_counter[1756]++;
  return !i || i.style.display == "none" || this.getStyle(i, "display") == "none";
}, uniqueId: function(i) {
  tiny_mce_js_exec_counter[1757]++;
  tiny_mce_js_exec_counter[1758]++;
  return (!i ? "mce_" : i) + (this.counter++);
}, setHTML: function(k, j) {
  tiny_mce_js_exec_counter[1759]++;
  tiny_mce_js_exec_counter[1760]++;
  var i = this;
  tiny_mce_js_exec_counter[1762]++;
  return i.run(k, function(m) {
  tiny_mce_js_exec_counter[1763]++;
  if (a) 
  {
    while (m.firstChild) 
      {
        tiny_mce_js_exec_counter[1764]++;
        m.removeChild(m.firstChild);
      }
    try {
      tiny_mce_js_exec_counter[1765]++;
      m.innerHTML = "<br />" + j;
      tiny_mce_js_exec_counter[1766]++;
      m.removeChild(m.firstChild);
    }    catch (l) {
  tiny_mce_js_exec_counter[1767]++;
  m = i.create("div");
  tiny_mce_js_exec_counter[1768]++;
  m.innerHTML = "<br />" + j;
  tiny_mce_js_exec_counter[1769]++;
  f(m.childNodes, function(o, n) {
  tiny_mce_js_exec_counter[1770]++;
  if (n) 
  {
    tiny_mce_js_exec_counter[1772]++;
    m.appendChild(o);
  }
  tiny_mce_js_exec_counter[1771]++;
});
}
  } else {
    tiny_mce_js_exec_counter[1773]++;
    m.innerHTML = j;
  }
  tiny_mce_js_exec_counter[1774]++;
  return j;
});
}, getOuterHTML: function(k) {
  tiny_mce_js_exec_counter[1775]++;
  tiny_mce_js_exec_counter[1776]++;
  var j, i = this;
  tiny_mce_js_exec_counter[1778]++;
  k = i.get(k);
  if (!k) 
  {
    tiny_mce_js_exec_counter[1779]++;
    return null;
  }
  if (k.nodeType === 1 && i.hasOuterHTML) 
  {
    tiny_mce_js_exec_counter[1780]++;
    return k.outerHTML;
  }
  tiny_mce_js_exec_counter[1781]++;
  j = (k.ownerDocument || i.doc).createElement("body");
  tiny_mce_js_exec_counter[1782]++;
  j.appendChild(k.cloneNode(true));
  tiny_mce_js_exec_counter[1783]++;
  return j.innerHTML;
}, setOuterHTML: function(l, j, m) {
  tiny_mce_js_exec_counter[1784]++;
  tiny_mce_js_exec_counter[1785]++;
  var i = this;
  function k(p, o, r) {
    tiny_mce_js_exec_counter[1787]++;
    tiny_mce_js_exec_counter[1789]++;
    var s, q;
    tiny_mce_js_exec_counter[1791]++;
    q = r.createElement("body");
    tiny_mce_js_exec_counter[1792]++;
    q.innerHTML = o;
    tiny_mce_js_exec_counter[1793]++;
    s = q.lastChild;
    while (s) 
      {
        tiny_mce_js_exec_counter[1794]++;
        i.insertAfter(s.cloneNode(true), p);
        tiny_mce_js_exec_counter[1795]++;
        s = s.previousSibling;
      }
    tiny_mce_js_exec_counter[1796]++;
    i.remove(p);
    tiny_mce_js_exec_counter[1788]++;
  }
  tiny_mce_js_exec_counter[1797]++;
  return this.run(l, function(o) {
  tiny_mce_js_exec_counter[1798]++;
  tiny_mce_js_exec_counter[1800]++;
  o = i.get(o);
  if (o.nodeType == 1) 
  {
    tiny_mce_js_exec_counter[1801]++;
    m = m || o.ownerDocument || i.doc;
    if (a) 
    {
      try {
        if (a && o.nodeType == 1) 
        {
          tiny_mce_js_exec_counter[1802]++;
          o.outerHTML = j;
        } else {
          tiny_mce_js_exec_counter[1803]++;
          k(o, j, m);
        }
      }      catch (n) {
  tiny_mce_js_exec_counter[1804]++;
  k(o, j, m);
}
    } else {
      tiny_mce_js_exec_counter[1805]++;
      k(o, j, m);
    }
  }
  tiny_mce_js_exec_counter[1799]++;
});
}, decode: h.decode, encode: h.encodeAllRaw, insertAfter: function(i, j) {
  tiny_mce_js_exec_counter[1806]++;
  tiny_mce_js_exec_counter[1807]++;
  j = this.get(j);
  tiny_mce_js_exec_counter[1808]++;
  return this.run(i, function(l) {
  tiny_mce_js_exec_counter[1809]++;
  tiny_mce_js_exec_counter[1810]++;
  var k, m;
  tiny_mce_js_exec_counter[1812]++;
  k = j.parentNode;
  tiny_mce_js_exec_counter[1813]++;
  m = j.nextSibling;
  if (m) 
  {
    tiny_mce_js_exec_counter[1814]++;
    k.insertBefore(l, m);
  } else {
    tiny_mce_js_exec_counter[1815]++;
    k.appendChild(l);
  }
  tiny_mce_js_exec_counter[1816]++;
  return l;
});
}, isBlock: function(j) {
  tiny_mce_js_exec_counter[1817]++;
  tiny_mce_js_exec_counter[1818]++;
  var i = j.nodeType;
  if (i) 
  {
    tiny_mce_js_exec_counter[1820]++;
    return !!(i === 1 && g[j.nodeName]);
  }
  tiny_mce_js_exec_counter[1821]++;
  return !!g[j];
}, replace: function(m, l, i) {
  tiny_mce_js_exec_counter[1822]++;
  tiny_mce_js_exec_counter[1823]++;
  var j = this;
  if (c(l, "array")) 
  {
    tiny_mce_js_exec_counter[1825]++;
    m = m.cloneNode(true);
  }
  tiny_mce_js_exec_counter[1826]++;
  return j.run(l, function(k) {
  tiny_mce_js_exec_counter[1827]++;
  if (i) 
  {
    tiny_mce_js_exec_counter[1828]++;
    f(d.grep(k.childNodes), function(n) {
  tiny_mce_js_exec_counter[1829]++;
  tiny_mce_js_exec_counter[1831]++;
  m.appendChild(n);
  tiny_mce_js_exec_counter[1830]++;
});
  }
  tiny_mce_js_exec_counter[1832]++;
  return k.parentNode.replaceChild(m, k);
});
}, rename: function(l, i) {
  tiny_mce_js_exec_counter[1833]++;
  tiny_mce_js_exec_counter[1834]++;
  var k = this, j;
  if (l.nodeName != i.toUpperCase()) 
  {
    tiny_mce_js_exec_counter[1836]++;
    j = k.create(i);
    tiny_mce_js_exec_counter[1837]++;
    f(k.getAttribs(l), function(m) {
  tiny_mce_js_exec_counter[1838]++;
  tiny_mce_js_exec_counter[1840]++;
  k.setAttrib(j, m.nodeName, k.getAttrib(l, m.nodeName));
  tiny_mce_js_exec_counter[1839]++;
});
    tiny_mce_js_exec_counter[1841]++;
    k.replace(j, l, 1);
  }
  tiny_mce_js_exec_counter[1842]++;
  return j || l;
}, findCommonAncestor: function(k, i) {
  tiny_mce_js_exec_counter[1843]++;
  tiny_mce_js_exec_counter[1844]++;
  var l = k, j;
  while (l) 
    {
      tiny_mce_js_exec_counter[1846]++;
      j = i;
      while (j && l != j) 
        {
          tiny_mce_js_exec_counter[1847]++;
          j = j.parentNode;
        }
      if (l == j) 
      {
        tiny_mce_js_exec_counter[1848]++;
        break;
      }
      tiny_mce_js_exec_counter[1849]++;
      l = l.parentNode;
    }
  if (!l && k.ownerDocument) 
  {
    tiny_mce_js_exec_counter[1850]++;
    return k.ownerDocument.documentElement;
  }
  tiny_mce_js_exec_counter[1851]++;
  return l;
}, toHex: function(i) {
  tiny_mce_js_exec_counter[1852]++;
  tiny_mce_js_exec_counter[1853]++;
  var k = /^\s*rgb\s*?\(\s*?([0-9]+)\s*?,\s*?([0-9]+)\s*?,\s*?([0-9]+)\s*?\)\s*$/i.exec(i);
  function j(l) {
    tiny_mce_js_exec_counter[1855]++;
    tiny_mce_js_exec_counter[1856]++;
    l = parseInt(l).toString(16);
    tiny_mce_js_exec_counter[1857]++;
    return l.length > 1 ? l : "0" + l;
  }
  if (k) 
  {
    tiny_mce_js_exec_counter[1858]++;
    i = "#" + j(k[1]) + j(k[2]) + j(k[3]);
    tiny_mce_js_exec_counter[1859]++;
    return i;
  }
  tiny_mce_js_exec_counter[1860]++;
  return i;
}, getClasses: function() {
  tiny_mce_js_exec_counter[1861]++;
  tiny_mce_js_exec_counter[1862]++;
  var n = this, j = [], m, o = {}, p = n.settings.class_filter, l;
  if (n.classes) 
  {
    tiny_mce_js_exec_counter[1864]++;
    return n.classes;
  }
  function q(i) {
    tiny_mce_js_exec_counter[1865]++;
    tiny_mce_js_exec_counter[1867]++;
    f(i.imports, function(s) {
  tiny_mce_js_exec_counter[1868]++;
  tiny_mce_js_exec_counter[1870]++;
  q(s);
  tiny_mce_js_exec_counter[1869]++;
});
    tiny_mce_js_exec_counter[1871]++;
    f(i.cssRules || i.rules, function(s) {
  tiny_mce_js_exec_counter[1872]++;
  switch (s.type || 1) {
    case 1:
      {
        if (s.selectorText) 
        {
          tiny_mce_js_exec_counter[1874]++;
          f(s.selectorText.split(","), function(r) {
  tiny_mce_js_exec_counter[1875]++;
  tiny_mce_js_exec_counter[1877]++;
  r = r.replace(/^\s*|\s*$|^\s\./g, "");
  if (/\.mce/.test(r) || !/\.[\w\-]+$/.test(r)) 
  {
    tiny_mce_js_exec_counter[1878]++;
    return;
  }
  tiny_mce_js_exec_counter[1879]++;
  l = r;
  tiny_mce_js_exec_counter[1880]++;
  r = d._replace(/.*\.([a-z0-9_\-]+).*/i, "$1", r);
  if (p && !(r = p(r, l))) 
  {
    tiny_mce_js_exec_counter[1881]++;
    return;
  }
  if (!o[r]) 
  {
    tiny_mce_js_exec_counter[1882]++;
    j.push({"class": r});
    tiny_mce_js_exec_counter[1883]++;
    o[r] = 1;
  }
  tiny_mce_js_exec_counter[1876]++;
});
        }
        tiny_mce_js_exec_counter[1884]++;
        break;
      }
    case 3:
      {
        tiny_mce_js_exec_counter[1885]++;
        q(s.styleSheet);
        tiny_mce_js_exec_counter[1886]++;
        break;
      }
  }
  tiny_mce_js_exec_counter[1873]++;
});
    tiny_mce_js_exec_counter[1866]++;
  }
  try {
    tiny_mce_js_exec_counter[1887]++;
    f(n.doc.styleSheets, q);
  }  catch (k) {
}
  if (j.length > 0) 
  {
    tiny_mce_js_exec_counter[1888]++;
    n.classes = j;
  }
  tiny_mce_js_exec_counter[1889]++;
  return j;
}, run: function(l, k, j) {
  tiny_mce_js_exec_counter[1890]++;
  tiny_mce_js_exec_counter[1891]++;
  var i = this, m;
  if (i.doc && typeof (l) === "string") 
  {
    tiny_mce_js_exec_counter[1893]++;
    l = i.get(l);
  }
  if (!l) 
  {
    tiny_mce_js_exec_counter[1894]++;
    return false;
  }
  tiny_mce_js_exec_counter[1895]++;
  j = j || this;
  if (!l.nodeType && (l.length || l.length === 0)) 
  {
    tiny_mce_js_exec_counter[1896]++;
    m = [];
    tiny_mce_js_exec_counter[1897]++;
    f(l, function(o, n) {
  tiny_mce_js_exec_counter[1898]++;
  if (o) 
  {
    if (typeof (o) == "string") 
    {
      tiny_mce_js_exec_counter[1900]++;
      o = i.doc.getElementById(o);
    }
    tiny_mce_js_exec_counter[1901]++;
    m.push(k.call(j, o, n));
  }
  tiny_mce_js_exec_counter[1899]++;
});
    tiny_mce_js_exec_counter[1902]++;
    return m;
  }
  tiny_mce_js_exec_counter[1903]++;
  return k.call(j, l);
}, getAttribs: function(j) {
  tiny_mce_js_exec_counter[1904]++;
  tiny_mce_js_exec_counter[1905]++;
  var i;
  tiny_mce_js_exec_counter[1907]++;
  j = this.get(j);
  if (!j) 
  {
    tiny_mce_js_exec_counter[1908]++;
    return [];
  }
  if (a) 
  {
    tiny_mce_js_exec_counter[1909]++;
    i = [];
    if (j.nodeName == "OBJECT") 
    {
      tiny_mce_js_exec_counter[1910]++;
      return j.attributes;
    }
    if (j.nodeName === "OPTION" && this.getAttrib(j, "selected")) 
    {
      tiny_mce_js_exec_counter[1911]++;
      i.push({specified: 1, nodeName: "selected"});
    }
    tiny_mce_js_exec_counter[1912]++;
    j.cloneNode(false).outerHTML.replace(/<\/?[\w:\-]+ ?|=[\"][^\"]+\"|=\'[^\']+\'|=[\w\-]+|>/gi, "").replace(/[\w:\-]+/gi, function(k) {
  tiny_mce_js_exec_counter[1913]++;
  tiny_mce_js_exec_counter[1915]++;
  i.push({specified: 1, nodeName: k});
  tiny_mce_js_exec_counter[1914]++;
});
    tiny_mce_js_exec_counter[1916]++;
    return i;
  }
  tiny_mce_js_exec_counter[1917]++;
  return j.attributes;
}, destroy: function(j) {
  tiny_mce_js_exec_counter[1918]++;
  tiny_mce_js_exec_counter[1920]++;
  var i = this;
  if (i.events) 
  {
    tiny_mce_js_exec_counter[1922]++;
    i.events.destroy();
  }
  tiny_mce_js_exec_counter[1923]++;
  i.win = i.doc = i.root = i.events = null;
  if (!j) 
  {
    tiny_mce_js_exec_counter[1924]++;
    d.removeUnload(i.destroy);
  }
  tiny_mce_js_exec_counter[1919]++;
}, createRng: function() {
  tiny_mce_js_exec_counter[1925]++;
  tiny_mce_js_exec_counter[1926]++;
  var i = this.doc;
  tiny_mce_js_exec_counter[1928]++;
  return i.createRange ? i.createRange() : new d.dom.Range(this);
}, nodeIndex: function(n, o) {
  tiny_mce_js_exec_counter[1929]++;
  tiny_mce_js_exec_counter[1930]++;
  var i = 0, l, m, k, j;
  if (n) 
  {
    for (l = n.nodeType , n = n.previousSibling , m = n; n; n = n.previousSibling) 
      {
        tiny_mce_js_exec_counter[1932]++;
        k = n.nodeType;
        if (o && k == 3) 
        {
          tiny_mce_js_exec_counter[1933]++;
          j = false;
          try {
            tiny_mce_js_exec_counter[1934]++;
            j == n.nodeValue.length;
          }          catch (p) {
}
          if (k == l || !j) 
          {
            tiny_mce_js_exec_counter[1935]++;
            continue;
          }
        }
        tiny_mce_js_exec_counter[1936]++;
        i++;
        tiny_mce_js_exec_counter[1937]++;
        l = k;
      }
  }
  tiny_mce_js_exec_counter[1938]++;
  return i;
}, split: function(m, l, p) {
  tiny_mce_js_exec_counter[1939]++;
  tiny_mce_js_exec_counter[1941]++;
  var q = this, i = q.createRng(), n, k, o;
  function j(t) {
    tiny_mce_js_exec_counter[1943]++;
    tiny_mce_js_exec_counter[1944]++;
    var s, r = t.childNodes;
    if (t.nodeType == 1 && t.getAttribute("data-mce-type") == "bookmark") 
    {
      tiny_mce_js_exec_counter[1946]++;
      return;
    }
    for (s = r.length - 1; s >= 0; s--) 
      {
        tiny_mce_js_exec_counter[1947]++;
        j(r[s]);
      }
    if (t.nodeType != 9) 
    {
      if (t.nodeType == 3 && t.nodeValue.length > 0) 
      {
        if (!q.isBlock(t.parentNode) || d.trim(t.nodeValue).length > 0) 
        {
          tiny_mce_js_exec_counter[1948]++;
          return;
        }
      }
      if (t.nodeType == 1) 
      {
        tiny_mce_js_exec_counter[1949]++;
        r = t.childNodes;
        if (r.length == 1 && r[0] && r[0].nodeType == 1 && r[0].getAttribute("data-mce-type") == "bookmark") 
        {
          tiny_mce_js_exec_counter[1950]++;
          t.parentNode.insertBefore(r[0], t);
        }
        if (r.length || /^(br|hr|input|img)$/i.test(t.nodeName)) 
        {
          tiny_mce_js_exec_counter[1951]++;
          return;
        }
      }
      tiny_mce_js_exec_counter[1952]++;
      q.remove(t);
    }
    tiny_mce_js_exec_counter[1953]++;
    return t;
  }
  if (m && l) 
  {
    tiny_mce_js_exec_counter[1954]++;
    i.setStart(m.parentNode, q.nodeIndex(m));
    tiny_mce_js_exec_counter[1955]++;
    i.setEnd(l.parentNode, q.nodeIndex(l));
    tiny_mce_js_exec_counter[1956]++;
    n = i.extractContents();
    tiny_mce_js_exec_counter[1957]++;
    i = q.createRng();
    tiny_mce_js_exec_counter[1958]++;
    i.setStart(l.parentNode, q.nodeIndex(l) + 1);
    tiny_mce_js_exec_counter[1959]++;
    i.setEnd(m.parentNode, q.nodeIndex(m) + 1);
    tiny_mce_js_exec_counter[1960]++;
    k = i.extractContents();
    tiny_mce_js_exec_counter[1961]++;
    o = m.parentNode;
    tiny_mce_js_exec_counter[1962]++;
    o.insertBefore(j(n), m);
    if (p) 
    {
      tiny_mce_js_exec_counter[1963]++;
      o.replaceChild(p, l);
    } else {
      tiny_mce_js_exec_counter[1964]++;
      o.insertBefore(l, m);
    }
    tiny_mce_js_exec_counter[1965]++;
    o.insertBefore(j(k), m);
    tiny_mce_js_exec_counter[1966]++;
    q.remove(m);
    tiny_mce_js_exec_counter[1967]++;
    return p || l;
  }
  tiny_mce_js_exec_counter[1940]++;
}, bind: function(m, i, l, k) {
  tiny_mce_js_exec_counter[1968]++;
  tiny_mce_js_exec_counter[1969]++;
  var j = this;
  if (!j.events) 
  {
    tiny_mce_js_exec_counter[1971]++;
    j.events = new d.dom.EventUtils();
  }
  tiny_mce_js_exec_counter[1972]++;
  return j.events.add(m, i, l, k || this);
}, unbind: function(l, i, k) {
  tiny_mce_js_exec_counter[1973]++;
  tiny_mce_js_exec_counter[1974]++;
  var j = this;
  if (!j.events) 
  {
    tiny_mce_js_exec_counter[1976]++;
    j.events = new d.dom.EventUtils();
  }
  tiny_mce_js_exec_counter[1977]++;
  return j.events.remove(l, i, k);
}, _findSib: function(l, i, j) {
  tiny_mce_js_exec_counter[1978]++;
  tiny_mce_js_exec_counter[1979]++;
  var k = this, m = i;
  if (l) 
  {
    if (c(m, "string")) 
    {
      tiny_mce_js_exec_counter[1981]++;
      m = function(n) {
  tiny_mce_js_exec_counter[1982]++;
  tiny_mce_js_exec_counter[1983]++;
  return k.is(n, i);
};
    }
    for (l = l[j]; l; l = l[j]) 
      {
        if (m(l)) 
        {
          tiny_mce_js_exec_counter[1984]++;
          return l;
        }
      }
  }
  tiny_mce_js_exec_counter[1985]++;
  return null;
}, _isRes: function(i) {
  tiny_mce_js_exec_counter[1986]++;
  tiny_mce_js_exec_counter[1987]++;
  return /^(top|left|bottom|right|width|height)/i.test(i) || /;\s*(top|left|bottom|right|width|height)/i.test(i);
}});
  tiny_mce_js_exec_counter[1988]++;
  d.DOM = new d.dom.DOMUtils(document, {process_html: 0});
  tiny_mce_js_exec_counter[1426]++;
})(tinymce);
tiny_mce_js_exec_counter[1989]++;
(function(a) {
  tiny_mce_js_exec_counter[1990]++;
  function b(c) {
    tiny_mce_js_exec_counter[1992]++;
    tiny_mce_js_exec_counter[1994]++;
    var N = this, e = c.doc, S = 0, E = 1, j = 2, D = true, R = false, U = "startOffset", h = "startContainer", P = "endContainer", z = "endOffset", k = tinymce.extend, n = c.nodeIndex;
    tiny_mce_js_exec_counter[1996]++;
    k(N, {startContainer: e, startOffset: 0, endContainer: e, endOffset: 0, collapsed: D, commonAncestorContainer: e, START_TO_START: 0, START_TO_END: 1, END_TO_END: 2, END_TO_START: 3, setStart: q, setEnd: s, setStartBefore: g, setStartAfter: I, setEndBefore: J, setEndAfter: u, collapse: A, selectNode: x, selectNodeContents: F, compareBoundaryPoints: v, deleteContents: p, extractContents: H, cloneContents: d, insertNode: C, surroundContents: M, cloneRange: K});
    function q(V, t) {
      tiny_mce_js_exec_counter[1997]++;
      tiny_mce_js_exec_counter[1999]++;
      B(D, V, t);
      tiny_mce_js_exec_counter[1998]++;
    }
    function s(V, t) {
      tiny_mce_js_exec_counter[2000]++;
      tiny_mce_js_exec_counter[2002]++;
      B(R, V, t);
      tiny_mce_js_exec_counter[2001]++;
    }
    function g(t) {
      tiny_mce_js_exec_counter[2003]++;
      tiny_mce_js_exec_counter[2005]++;
      q(t.parentNode, n(t));
      tiny_mce_js_exec_counter[2004]++;
    }
    function I(t) {
      tiny_mce_js_exec_counter[2006]++;
      tiny_mce_js_exec_counter[2008]++;
      q(t.parentNode, n(t) + 1);
      tiny_mce_js_exec_counter[2007]++;
    }
    function J(t) {
      tiny_mce_js_exec_counter[2009]++;
      tiny_mce_js_exec_counter[2011]++;
      s(t.parentNode, n(t));
      tiny_mce_js_exec_counter[2010]++;
    }
    function u(t) {
      tiny_mce_js_exec_counter[2012]++;
      tiny_mce_js_exec_counter[2014]++;
      s(t.parentNode, n(t) + 1);
      tiny_mce_js_exec_counter[2013]++;
    }
    function A(t) {
      tiny_mce_js_exec_counter[2015]++;
      if (t) 
      {
        tiny_mce_js_exec_counter[2017]++;
        N[P] = N[h];
        tiny_mce_js_exec_counter[2018]++;
        N[z] = N[U];
      } else {
        tiny_mce_js_exec_counter[2019]++;
        N[h] = N[P];
        tiny_mce_js_exec_counter[2020]++;
        N[U] = N[z];
      }
      tiny_mce_js_exec_counter[2021]++;
      N.collapsed = D;
      tiny_mce_js_exec_counter[2016]++;
    }
    function x(t) {
      tiny_mce_js_exec_counter[2022]++;
      tiny_mce_js_exec_counter[2024]++;
      g(t);
      tiny_mce_js_exec_counter[2025]++;
      u(t);
      tiny_mce_js_exec_counter[2023]++;
    }
    function F(t) {
      tiny_mce_js_exec_counter[2026]++;
      tiny_mce_js_exec_counter[2028]++;
      q(t, 0);
      tiny_mce_js_exec_counter[2029]++;
      s(t, t.nodeType === 1 ? t.childNodes.length : t.nodeValue.length);
      tiny_mce_js_exec_counter[2027]++;
    }
    function v(Y, t) {
      tiny_mce_js_exec_counter[2030]++;
      tiny_mce_js_exec_counter[2032]++;
      var ab = N[h], W = N[U], aa = N[P], V = N[z], Z = t.startContainer, ad = t.startOffset, X = t.endContainer, ac = t.endOffset;
      if (Y === 0) 
      {
        tiny_mce_js_exec_counter[2034]++;
        return G(ab, W, Z, ad);
      }
      if (Y === 1) 
      {
        tiny_mce_js_exec_counter[2035]++;
        return G(aa, V, Z, ad);
      }
      if (Y === 2) 
      {
        tiny_mce_js_exec_counter[2036]++;
        return G(aa, V, X, ac);
      }
      if (Y === 3) 
      {
        tiny_mce_js_exec_counter[2037]++;
        return G(ab, W, X, ac);
      }
      tiny_mce_js_exec_counter[2031]++;
    }
    function p() {
      tiny_mce_js_exec_counter[2038]++;
      tiny_mce_js_exec_counter[2040]++;
      m(j);
      tiny_mce_js_exec_counter[2039]++;
    }
    function H() {
      tiny_mce_js_exec_counter[2041]++;
      tiny_mce_js_exec_counter[2042]++;
      return m(S);
    }
    function d() {
      tiny_mce_js_exec_counter[2043]++;
      tiny_mce_js_exec_counter[2044]++;
      return m(E);
    }
    function C(Y) {
      tiny_mce_js_exec_counter[2045]++;
      tiny_mce_js_exec_counter[2047]++;
      var V = this[h], t = this[U], X, W;
      if ((V.nodeType === 3 || V.nodeType === 4) && V.nodeValue) 
      {
        if (!t) 
        {
          tiny_mce_js_exec_counter[2049]++;
          V.parentNode.insertBefore(Y, V);
        } else {
          if (t >= V.nodeValue.length) 
          {
            tiny_mce_js_exec_counter[2050]++;
            c.insertAfter(Y, V);
          } else {
            tiny_mce_js_exec_counter[2051]++;
            X = V.splitText(t);
            tiny_mce_js_exec_counter[2052]++;
            V.parentNode.insertBefore(Y, X);
          }
        }
      } else {
        if (V.childNodes.length > 0) 
        {
          tiny_mce_js_exec_counter[2053]++;
          W = V.childNodes[t];
        }
        if (W) 
        {
          tiny_mce_js_exec_counter[2054]++;
          V.insertBefore(Y, W);
        } else {
          tiny_mce_js_exec_counter[2055]++;
          V.appendChild(Y);
        }
      }
      tiny_mce_js_exec_counter[2046]++;
    }
    function M(V) {
      tiny_mce_js_exec_counter[2056]++;
      tiny_mce_js_exec_counter[2058]++;
      var t = N.extractContents();
      tiny_mce_js_exec_counter[2060]++;
      N.insertNode(V);
      tiny_mce_js_exec_counter[2061]++;
      V.appendChild(t);
      tiny_mce_js_exec_counter[2062]++;
      N.selectNode(V);
      tiny_mce_js_exec_counter[2057]++;
    }
    function K() {
      tiny_mce_js_exec_counter[2063]++;
      tiny_mce_js_exec_counter[2064]++;
      return k(new b(c), {startContainer: N[h], startOffset: N[U], endContainer: N[P], endOffset: N[z], collapsed: N.collapsed, commonAncestorContainer: N.commonAncestorContainer});
    }
    function O(t, V) {
      tiny_mce_js_exec_counter[2065]++;
      tiny_mce_js_exec_counter[2066]++;
      var W;
      if (t.nodeType == 3) 
      {
        tiny_mce_js_exec_counter[2068]++;
        return t;
      }
      if (V < 0) 
      {
        tiny_mce_js_exec_counter[2069]++;
        return t;
      }
      tiny_mce_js_exec_counter[2070]++;
      W = t.firstChild;
      while (W && V > 0) 
        {
          tiny_mce_js_exec_counter[2071]++;
          --V;
          tiny_mce_js_exec_counter[2072]++;
          W = W.nextSibling;
        }
      if (W) 
      {
        tiny_mce_js_exec_counter[2073]++;
        return W;
      }
      tiny_mce_js_exec_counter[2074]++;
      return t;
    }
    function l() {
      tiny_mce_js_exec_counter[2075]++;
      tiny_mce_js_exec_counter[2076]++;
      return (N[h] == N[P] && N[U] == N[z]);
    }
    function G(X, Z, V, Y) {
      tiny_mce_js_exec_counter[2077]++;
      tiny_mce_js_exec_counter[2079]++;
      var aa, W, t, ab, ad, ac;
      if (X == V) 
      {
        if (Z == Y) 
        {
          tiny_mce_js_exec_counter[2081]++;
          return 0;
        }
        if (Z < Y) 
        {
          tiny_mce_js_exec_counter[2082]++;
          return -1;
        }
        tiny_mce_js_exec_counter[2083]++;
        return 1;
      }
      tiny_mce_js_exec_counter[2084]++;
      aa = V;
      while (aa && aa.parentNode != X) 
        {
          tiny_mce_js_exec_counter[2085]++;
          aa = aa.parentNode;
        }
      if (aa) 
      {
        tiny_mce_js_exec_counter[2086]++;
        W = 0;
        tiny_mce_js_exec_counter[2087]++;
        t = X.firstChild;
        while (t != aa && W < Z) 
          {
            tiny_mce_js_exec_counter[2088]++;
            W++;
            tiny_mce_js_exec_counter[2089]++;
            t = t.nextSibling;
          }
        if (Z <= W) 
        {
          tiny_mce_js_exec_counter[2090]++;
          return -1;
        }
        tiny_mce_js_exec_counter[2091]++;
        return 1;
      }
      tiny_mce_js_exec_counter[2092]++;
      aa = X;
      while (aa && aa.parentNode != V) 
        {
          tiny_mce_js_exec_counter[2093]++;
          aa = aa.parentNode;
        }
      if (aa) 
      {
        tiny_mce_js_exec_counter[2094]++;
        W = 0;
        tiny_mce_js_exec_counter[2095]++;
        t = V.firstChild;
        while (t != aa && W < Y) 
          {
            tiny_mce_js_exec_counter[2096]++;
            W++;
            tiny_mce_js_exec_counter[2097]++;
            t = t.nextSibling;
          }
        if (W < Y) 
        {
          tiny_mce_js_exec_counter[2098]++;
          return -1;
        }
        tiny_mce_js_exec_counter[2099]++;
        return 1;
      }
      tiny_mce_js_exec_counter[2100]++;
      ab = c.findCommonAncestor(X, V);
      tiny_mce_js_exec_counter[2101]++;
      ad = X;
      while (ad && ad.parentNode != ab) 
        {
          tiny_mce_js_exec_counter[2102]++;
          ad = ad.parentNode;
        }
      if (!ad) 
      {
        tiny_mce_js_exec_counter[2103]++;
        ad = ab;
      }
      tiny_mce_js_exec_counter[2104]++;
      ac = V;
      while (ac && ac.parentNode != ab) 
        {
          tiny_mce_js_exec_counter[2105]++;
          ac = ac.parentNode;
        }
      if (!ac) 
      {
        tiny_mce_js_exec_counter[2106]++;
        ac = ab;
      }
      if (ad == ac) 
      {
        tiny_mce_js_exec_counter[2107]++;
        return 0;
      }
      tiny_mce_js_exec_counter[2108]++;
      t = ab.firstChild;
      while (t) 
        {
          if (t == ad) 
          {
            tiny_mce_js_exec_counter[2109]++;
            return -1;
          }
          if (t == ac) 
          {
            tiny_mce_js_exec_counter[2110]++;
            return 1;
          }
          tiny_mce_js_exec_counter[2111]++;
          t = t.nextSibling;
        }
      tiny_mce_js_exec_counter[2078]++;
    }
    function B(V, Y, X) {
      tiny_mce_js_exec_counter[2112]++;
      tiny_mce_js_exec_counter[2114]++;
      var t, W;
      if (V) 
      {
        tiny_mce_js_exec_counter[2116]++;
        N[h] = Y;
        tiny_mce_js_exec_counter[2117]++;
        N[U] = X;
      } else {
        tiny_mce_js_exec_counter[2118]++;
        N[P] = Y;
        tiny_mce_js_exec_counter[2119]++;
        N[z] = X;
      }
      tiny_mce_js_exec_counter[2120]++;
      t = N[P];
      while (t.parentNode) 
        {
          tiny_mce_js_exec_counter[2121]++;
          t = t.parentNode;
        }
      tiny_mce_js_exec_counter[2122]++;
      W = N[h];
      while (W.parentNode) 
        {
          tiny_mce_js_exec_counter[2123]++;
          W = W.parentNode;
        }
      if (W == t) 
      {
        if (G(N[h], N[U], N[P], N[z]) > 0) 
        {
          tiny_mce_js_exec_counter[2124]++;
          N.collapse(V);
        }
      } else {
        tiny_mce_js_exec_counter[2125]++;
        N.collapse(V);
      }
      tiny_mce_js_exec_counter[2126]++;
      N.collapsed = l();
      tiny_mce_js_exec_counter[2127]++;
      N.commonAncestorContainer = c.findCommonAncestor(N[h], N[P]);
      tiny_mce_js_exec_counter[2113]++;
    }
    function m(ab) {
      tiny_mce_js_exec_counter[2128]++;
      tiny_mce_js_exec_counter[2129]++;
      var aa, X = 0, ad = 0, V, Z, W, Y, t, ac;
      if (N[h] == N[P]) 
      {
        tiny_mce_js_exec_counter[2131]++;
        return f(ab);
      }
      for (aa = N[P] , V = aa.parentNode; V; aa = V , V = V.parentNode) 
        {
          if (V == N[h]) 
          {
            tiny_mce_js_exec_counter[2132]++;
            return r(aa, ab);
          }
          tiny_mce_js_exec_counter[2133]++;
          ++X;
        }
      for (aa = N[h] , V = aa.parentNode; V; aa = V , V = V.parentNode) 
        {
          if (V == N[P]) 
          {
            tiny_mce_js_exec_counter[2134]++;
            return T(aa, ab);
          }
          tiny_mce_js_exec_counter[2135]++;
          ++ad;
        }
      tiny_mce_js_exec_counter[2136]++;
      Z = ad - X;
      tiny_mce_js_exec_counter[2137]++;
      W = N[h];
      while (Z > 0) 
        {
          tiny_mce_js_exec_counter[2138]++;
          W = W.parentNode;
          tiny_mce_js_exec_counter[2139]++;
          Z--;
        }
      tiny_mce_js_exec_counter[2140]++;
      Y = N[P];
      while (Z < 0) 
        {
          tiny_mce_js_exec_counter[2141]++;
          Y = Y.parentNode;
          tiny_mce_js_exec_counter[2142]++;
          Z++;
        }
      for (t = W.parentNode , ac = Y.parentNode; t != ac; t = t.parentNode , ac = ac.parentNode) 
        {
          tiny_mce_js_exec_counter[2143]++;
          W = t;
          tiny_mce_js_exec_counter[2144]++;
          Y = ac;
        }
      tiny_mce_js_exec_counter[2145]++;
      return o(W, Y, ab);
    }
    function f(Z) {
      tiny_mce_js_exec_counter[2146]++;
      tiny_mce_js_exec_counter[2147]++;
      var ab, Y, X, aa, t, W, V;
      if (Z != j) 
      {
        tiny_mce_js_exec_counter[2149]++;
        ab = e.createDocumentFragment();
      }
      if (N[U] == N[z]) 
      {
        tiny_mce_js_exec_counter[2150]++;
        return ab;
      }
      if (N[h].nodeType == 3) 
      {
        tiny_mce_js_exec_counter[2151]++;
        Y = N[h].nodeValue;
        tiny_mce_js_exec_counter[2152]++;
        X = Y.substring(N[U], N[z]);
        if (Z != E) 
        {
          tiny_mce_js_exec_counter[2153]++;
          N[h].deleteData(N[U], N[z] - N[U]);
          tiny_mce_js_exec_counter[2154]++;
          N.collapse(D);
        }
        if (Z == j) 
        {
          tiny_mce_js_exec_counter[2155]++;
          return;
        }
        tiny_mce_js_exec_counter[2156]++;
        ab.appendChild(e.createTextNode(X));
        tiny_mce_js_exec_counter[2157]++;
        return ab;
      }
      tiny_mce_js_exec_counter[2158]++;
      aa = O(N[h], N[U]);
      tiny_mce_js_exec_counter[2159]++;
      t = N[z] - N[U];
      while (t > 0) 
        {
          tiny_mce_js_exec_counter[2160]++;
          W = aa.nextSibling;
          tiny_mce_js_exec_counter[2161]++;
          V = y(aa, Z);
          if (ab) 
          {
            tiny_mce_js_exec_counter[2162]++;
            ab.appendChild(V);
          }
          tiny_mce_js_exec_counter[2163]++;
          --t;
          tiny_mce_js_exec_counter[2164]++;
          aa = W;
        }
      if (Z != E) 
      {
        tiny_mce_js_exec_counter[2165]++;
        N.collapse(D);
      }
      tiny_mce_js_exec_counter[2166]++;
      return ab;
    }
    function r(ab, Y) {
      tiny_mce_js_exec_counter[2167]++;
      tiny_mce_js_exec_counter[2168]++;
      var aa, Z, V, t, X, W;
      if (Y != j) 
      {
        tiny_mce_js_exec_counter[2170]++;
        aa = e.createDocumentFragment();
      }
      tiny_mce_js_exec_counter[2171]++;
      Z = i(ab, Y);
      if (aa) 
      {
        tiny_mce_js_exec_counter[2172]++;
        aa.appendChild(Z);
      }
      tiny_mce_js_exec_counter[2173]++;
      V = n(ab);
      tiny_mce_js_exec_counter[2174]++;
      t = V - N[U];
      if (t <= 0) 
      {
        if (Y != E) 
        {
          tiny_mce_js_exec_counter[2175]++;
          N.setEndBefore(ab);
          tiny_mce_js_exec_counter[2176]++;
          N.collapse(R);
        }
        tiny_mce_js_exec_counter[2177]++;
        return aa;
      }
      tiny_mce_js_exec_counter[2178]++;
      Z = ab.previousSibling;
      while (t > 0) 
        {
          tiny_mce_js_exec_counter[2179]++;
          X = Z.previousSibling;
          tiny_mce_js_exec_counter[2180]++;
          W = y(Z, Y);
          if (aa) 
          {
            tiny_mce_js_exec_counter[2181]++;
            aa.insertBefore(W, aa.firstChild);
          }
          tiny_mce_js_exec_counter[2182]++;
          --t;
          tiny_mce_js_exec_counter[2183]++;
          Z = X;
        }
      if (Y != E) 
      {
        tiny_mce_js_exec_counter[2184]++;
        N.setEndBefore(ab);
        tiny_mce_js_exec_counter[2185]++;
        N.collapse(R);
      }
      tiny_mce_js_exec_counter[2186]++;
      return aa;
    }
    function T(Z, Y) {
      tiny_mce_js_exec_counter[2187]++;
      tiny_mce_js_exec_counter[2188]++;
      var ab, V, aa, t, X, W;
      if (Y != j) 
      {
        tiny_mce_js_exec_counter[2190]++;
        ab = e.createDocumentFragment();
      }
      tiny_mce_js_exec_counter[2191]++;
      aa = Q(Z, Y);
      if (ab) 
      {
        tiny_mce_js_exec_counter[2192]++;
        ab.appendChild(aa);
      }
      tiny_mce_js_exec_counter[2193]++;
      V = n(Z);
      tiny_mce_js_exec_counter[2194]++;
      ++V;
      tiny_mce_js_exec_counter[2195]++;
      t = N[z] - V;
      tiny_mce_js_exec_counter[2196]++;
      aa = Z.nextSibling;
      while (t > 0) 
        {
          tiny_mce_js_exec_counter[2197]++;
          X = aa.nextSibling;
          tiny_mce_js_exec_counter[2198]++;
          W = y(aa, Y);
          if (ab) 
          {
            tiny_mce_js_exec_counter[2199]++;
            ab.appendChild(W);
          }
          tiny_mce_js_exec_counter[2200]++;
          --t;
          tiny_mce_js_exec_counter[2201]++;
          aa = X;
        }
      if (Y != E) 
      {
        tiny_mce_js_exec_counter[2202]++;
        N.setStartAfter(Z);
        tiny_mce_js_exec_counter[2203]++;
        N.collapse(D);
      }
      tiny_mce_js_exec_counter[2204]++;
      return ab;
    }
    function o(Z, t, ac) {
      tiny_mce_js_exec_counter[2205]++;
      tiny_mce_js_exec_counter[2206]++;
      var W, ae, Y, aa, ab, V, ad, X;
      if (ac != j) 
      {
        tiny_mce_js_exec_counter[2208]++;
        ae = e.createDocumentFragment();
      }
      tiny_mce_js_exec_counter[2209]++;
      W = Q(Z, ac);
      if (ae) 
      {
        tiny_mce_js_exec_counter[2210]++;
        ae.appendChild(W);
      }
      tiny_mce_js_exec_counter[2211]++;
      Y = Z.parentNode;
      tiny_mce_js_exec_counter[2212]++;
      aa = n(Z);
      tiny_mce_js_exec_counter[2213]++;
      ab = n(t);
      tiny_mce_js_exec_counter[2214]++;
      ++aa;
      tiny_mce_js_exec_counter[2215]++;
      V = ab - aa;
      tiny_mce_js_exec_counter[2216]++;
      ad = Z.nextSibling;
      while (V > 0) 
        {
          tiny_mce_js_exec_counter[2217]++;
          X = ad.nextSibling;
          tiny_mce_js_exec_counter[2218]++;
          W = y(ad, ac);
          if (ae) 
          {
            tiny_mce_js_exec_counter[2219]++;
            ae.appendChild(W);
          }
          tiny_mce_js_exec_counter[2220]++;
          ad = X;
          tiny_mce_js_exec_counter[2221]++;
          --V;
        }
      tiny_mce_js_exec_counter[2222]++;
      W = i(t, ac);
      if (ae) 
      {
        tiny_mce_js_exec_counter[2223]++;
        ae.appendChild(W);
      }
      if (ac != E) 
      {
        tiny_mce_js_exec_counter[2224]++;
        N.setStartAfter(Z);
        tiny_mce_js_exec_counter[2225]++;
        N.collapse(D);
      }
      tiny_mce_js_exec_counter[2226]++;
      return ae;
    }
    function i(aa, ab) {
      tiny_mce_js_exec_counter[2227]++;
      tiny_mce_js_exec_counter[2229]++;
      var W = O(N[P], N[z] - 1), ac, Z, Y, t, V, X = W != N[P];
      if (W == aa) 
      {
        tiny_mce_js_exec_counter[2231]++;
        return L(W, X, R, ab);
      }
      tiny_mce_js_exec_counter[2232]++;
      ac = W.parentNode;
      tiny_mce_js_exec_counter[2233]++;
      Z = L(ac, R, R, ab);
      while (ac) 
        {
          while (W) 
            {
              tiny_mce_js_exec_counter[2234]++;
              Y = W.previousSibling;
              tiny_mce_js_exec_counter[2235]++;
              t = L(W, X, R, ab);
              if (ab != j) 
              {
                tiny_mce_js_exec_counter[2236]++;
                Z.insertBefore(t, Z.firstChild);
              }
              tiny_mce_js_exec_counter[2237]++;
              X = D;
              tiny_mce_js_exec_counter[2238]++;
              W = Y;
            }
          if (ac == aa) 
          {
            tiny_mce_js_exec_counter[2239]++;
            return Z;
          }
          tiny_mce_js_exec_counter[2240]++;
          W = ac.previousSibling;
          tiny_mce_js_exec_counter[2241]++;
          ac = ac.parentNode;
          tiny_mce_js_exec_counter[2242]++;
          V = L(ac, R, R, ab);
          if (ab != j) 
          {
            tiny_mce_js_exec_counter[2243]++;
            V.appendChild(Z);
          }
          tiny_mce_js_exec_counter[2244]++;
          Z = V;
        }
      tiny_mce_js_exec_counter[2228]++;
    }
    function Q(aa, ab) {
      tiny_mce_js_exec_counter[2245]++;
      tiny_mce_js_exec_counter[2247]++;
      var X = O(N[h], N[U]), Y = X != N[h], ac, Z, W, t, V;
      if (X == aa) 
      {
        tiny_mce_js_exec_counter[2249]++;
        return L(X, Y, D, ab);
      }
      tiny_mce_js_exec_counter[2250]++;
      ac = X.parentNode;
      tiny_mce_js_exec_counter[2251]++;
      Z = L(ac, R, D, ab);
      while (ac) 
        {
          while (X) 
            {
              tiny_mce_js_exec_counter[2252]++;
              W = X.nextSibling;
              tiny_mce_js_exec_counter[2253]++;
              t = L(X, Y, D, ab);
              if (ab != j) 
              {
                tiny_mce_js_exec_counter[2254]++;
                Z.appendChild(t);
              }
              tiny_mce_js_exec_counter[2255]++;
              Y = D;
              tiny_mce_js_exec_counter[2256]++;
              X = W;
            }
          if (ac == aa) 
          {
            tiny_mce_js_exec_counter[2257]++;
            return Z;
          }
          tiny_mce_js_exec_counter[2258]++;
          X = ac.nextSibling;
          tiny_mce_js_exec_counter[2259]++;
          ac = ac.parentNode;
          tiny_mce_js_exec_counter[2260]++;
          V = L(ac, R, D, ab);
          if (ab != j) 
          {
            tiny_mce_js_exec_counter[2261]++;
            V.appendChild(Z);
          }
          tiny_mce_js_exec_counter[2262]++;
          Z = V;
        }
      tiny_mce_js_exec_counter[2246]++;
    }
    function L(t, Y, ab, ac) {
      tiny_mce_js_exec_counter[2263]++;
      tiny_mce_js_exec_counter[2264]++;
      var X, W, Z, V, aa;
      if (Y) 
      {
        tiny_mce_js_exec_counter[2266]++;
        return y(t, ac);
      }
      if (t.nodeType == 3) 
      {
        tiny_mce_js_exec_counter[2267]++;
        X = t.nodeValue;
        if (ab) 
        {
          tiny_mce_js_exec_counter[2268]++;
          V = N[U];
          tiny_mce_js_exec_counter[2269]++;
          W = X.substring(V);
          tiny_mce_js_exec_counter[2270]++;
          Z = X.substring(0, V);
        } else {
          tiny_mce_js_exec_counter[2271]++;
          V = N[z];
          tiny_mce_js_exec_counter[2272]++;
          W = X.substring(0, V);
          tiny_mce_js_exec_counter[2273]++;
          Z = X.substring(V);
        }
        if (ac != E) 
        {
          tiny_mce_js_exec_counter[2274]++;
          t.nodeValue = Z;
        }
        if (ac == j) 
        {
          tiny_mce_js_exec_counter[2275]++;
          return;
        }
        tiny_mce_js_exec_counter[2276]++;
        aa = t.cloneNode(R);
        tiny_mce_js_exec_counter[2277]++;
        aa.nodeValue = W;
        tiny_mce_js_exec_counter[2278]++;
        return aa;
      }
      if (ac == j) 
      {
        tiny_mce_js_exec_counter[2279]++;
        return;
      }
      tiny_mce_js_exec_counter[2280]++;
      return t.cloneNode(R);
    }
    function y(V, t) {
      tiny_mce_js_exec_counter[2281]++;
      if (t != j) 
      {
        tiny_mce_js_exec_counter[2283]++;
        return t == E ? V.cloneNode(D) : V;
      }
      tiny_mce_js_exec_counter[2284]++;
      V.parentNode.removeChild(V);
      tiny_mce_js_exec_counter[2282]++;
    }
    tiny_mce_js_exec_counter[1993]++;
  }
  tiny_mce_js_exec_counter[2285]++;
  a.Range = b;
  tiny_mce_js_exec_counter[1991]++;
})(tinymce.dom);
tiny_mce_js_exec_counter[2286]++;
(function() {
  tiny_mce_js_exec_counter[2287]++;
  function a(g) {
    tiny_mce_js_exec_counter[2289]++;
    tiny_mce_js_exec_counter[2291]++;
    var i = this, j = "\ufeff", e, h, d = g.dom, c = true, f = false;
    function b() {
      tiny_mce_js_exec_counter[2293]++;
      tiny_mce_js_exec_counter[2294]++;
      var n = g.getRng(), k = d.createRng(), m, o;
      tiny_mce_js_exec_counter[2296]++;
      m = n.item ? n.item(0) : n.parentElement();
      if (m.ownerDocument != d.doc) 
      {
        tiny_mce_js_exec_counter[2297]++;
        return k;
      }
      tiny_mce_js_exec_counter[2298]++;
      o = g.isCollapsed();
      if (n.item || !m.hasChildNodes()) 
      {
        if (o) 
        {
          tiny_mce_js_exec_counter[2299]++;
          k.setStart(m, 0);
          tiny_mce_js_exec_counter[2300]++;
          k.setEnd(m, 0);
        } else {
          tiny_mce_js_exec_counter[2301]++;
          k.setStart(m.parentNode, d.nodeIndex(m));
          tiny_mce_js_exec_counter[2302]++;
          k.setEnd(k.startContainer, k.startOffset + 1);
        }
        tiny_mce_js_exec_counter[2303]++;
        return k;
      }
      function l(s) {
        tiny_mce_js_exec_counter[2304]++;
        tiny_mce_js_exec_counter[2306]++;
        var u, q, t, p, A = 0, x, y, z, r, v;
        tiny_mce_js_exec_counter[2308]++;
        r = n.duplicate();
        tiny_mce_js_exec_counter[2309]++;
        r.collapse(s);
        tiny_mce_js_exec_counter[2310]++;
        u = d.create("a");
        tiny_mce_js_exec_counter[2311]++;
        z = r.parentElement();
        if (!z.hasChildNodes()) 
        {
          tiny_mce_js_exec_counter[2312]++;
          k[s ? "setStart" : "setEnd"](z, 0);
          tiny_mce_js_exec_counter[2313]++;
          return;
        }
        tiny_mce_js_exec_counter[2314]++;
        z.appendChild(u);
        tiny_mce_js_exec_counter[2315]++;
        r.moveToElementText(u);
        tiny_mce_js_exec_counter[2316]++;
        v = n.compareEndPoints(s ? "StartToStart" : "EndToEnd", r);
        if (v > 0) 
        {
          tiny_mce_js_exec_counter[2317]++;
          k[s ? "setStartAfter" : "setEndAfter"](z);
          tiny_mce_js_exec_counter[2318]++;
          d.remove(u);
          tiny_mce_js_exec_counter[2319]++;
          return;
        }
        tiny_mce_js_exec_counter[2320]++;
        p = tinymce.grep(z.childNodes);
        tiny_mce_js_exec_counter[2321]++;
        x = p.length - 1;
        while (A <= x) 
          {
            tiny_mce_js_exec_counter[2322]++;
            y = Math.floor((A + x) / 2);
            tiny_mce_js_exec_counter[2323]++;
            z.insertBefore(u, p[y]);
            tiny_mce_js_exec_counter[2324]++;
            r.moveToElementText(u);
            tiny_mce_js_exec_counter[2325]++;
            v = n.compareEndPoints(s ? "StartToStart" : "EndToEnd", r);
            if (v > 0) 
            {
              tiny_mce_js_exec_counter[2326]++;
              A = y + 1;
            } else {
              if (v < 0) 
              {
                tiny_mce_js_exec_counter[2327]++;
                x = y - 1;
              } else {
                tiny_mce_js_exec_counter[2328]++;
                found = true;
                tiny_mce_js_exec_counter[2329]++;
                break;
              }
            }
          }
        tiny_mce_js_exec_counter[2330]++;
        q = v > 0 || y == 0 ? u.nextSibling : u.previousSibling;
        if (q.nodeType == 1) 
        {
          tiny_mce_js_exec_counter[2331]++;
          d.remove(u);
          tiny_mce_js_exec_counter[2332]++;
          t = d.nodeIndex(q);
          tiny_mce_js_exec_counter[2333]++;
          q = q.parentNode;
          if (!s || y > 0) 
          {
            tiny_mce_js_exec_counter[2334]++;
            t++;
          }
        } else {
          if (v > 0 || y == 0) 
          {
            tiny_mce_js_exec_counter[2335]++;
            r.setEndPoint(s ? "StartToStart" : "EndToEnd", n);
            tiny_mce_js_exec_counter[2336]++;
            t = r.text.length;
          } else {
            tiny_mce_js_exec_counter[2337]++;
            r.setEndPoint(s ? "StartToStart" : "EndToEnd", n);
            tiny_mce_js_exec_counter[2338]++;
            t = q.nodeValue.length - r.text.length;
          }
          tiny_mce_js_exec_counter[2339]++;
          d.remove(u);
        }
        tiny_mce_js_exec_counter[2340]++;
        k[s ? "setStart" : "setEnd"](q, t);
        tiny_mce_js_exec_counter[2305]++;
      }
      tiny_mce_js_exec_counter[2341]++;
      l(true);
      if (!o) 
      {
        tiny_mce_js_exec_counter[2342]++;
        l();
      }
      tiny_mce_js_exec_counter[2343]++;
      return k;
    }
    tiny_mce_js_exec_counter[2344]++;
    this.addRange = function(k) {
  tiny_mce_js_exec_counter[2345]++;
  tiny_mce_js_exec_counter[2347]++;
  var p, n, m, r, u, s, t = g.dom.doc, o = t.body;
  function l(B) {
    tiny_mce_js_exec_counter[2349]++;
    tiny_mce_js_exec_counter[2351]++;
    var x, A, v, z, y;
    tiny_mce_js_exec_counter[2353]++;
    v = d.create("a");
    tiny_mce_js_exec_counter[2354]++;
    x = B ? m : u;
    tiny_mce_js_exec_counter[2355]++;
    A = B ? r : s;
    tiny_mce_js_exec_counter[2356]++;
    z = p.duplicate();
    if (x == t || x == t.documentElement) 
    {
      tiny_mce_js_exec_counter[2357]++;
      x = o;
      tiny_mce_js_exec_counter[2358]++;
      A = 0;
    }
    if (x.nodeType == 3) 
    {
      tiny_mce_js_exec_counter[2359]++;
      x.parentNode.insertBefore(v, x);
      tiny_mce_js_exec_counter[2360]++;
      z.moveToElementText(v);
      tiny_mce_js_exec_counter[2361]++;
      z.moveStart("character", A);
      tiny_mce_js_exec_counter[2362]++;
      d.remove(v);
      tiny_mce_js_exec_counter[2363]++;
      p.setEndPoint(B ? "StartToStart" : "EndToEnd", z);
    } else {
      tiny_mce_js_exec_counter[2364]++;
      y = x.childNodes;
      if (y.length) 
      {
        if (A >= y.length) 
        {
          tiny_mce_js_exec_counter[2365]++;
          d.insertAfter(v, y[y.length - 1]);
        } else {
          tiny_mce_js_exec_counter[2366]++;
          x.insertBefore(v, y[A]);
        }
        tiny_mce_js_exec_counter[2367]++;
        z.moveToElementText(v);
      } else {
        tiny_mce_js_exec_counter[2368]++;
        v = t.createTextNode(j);
        tiny_mce_js_exec_counter[2369]++;
        x.appendChild(v);
        tiny_mce_js_exec_counter[2370]++;
        z.moveToElementText(v.parentNode);
        tiny_mce_js_exec_counter[2371]++;
        z.collapse(c);
      }
      tiny_mce_js_exec_counter[2372]++;
      p.setEndPoint(B ? "StartToStart" : "EndToEnd", z);
      tiny_mce_js_exec_counter[2373]++;
      d.remove(v);
    }
    tiny_mce_js_exec_counter[2350]++;
  }
  tiny_mce_js_exec_counter[2374]++;
  this.destroy();
  tiny_mce_js_exec_counter[2375]++;
  m = k.startContainer;
  tiny_mce_js_exec_counter[2376]++;
  r = k.startOffset;
  tiny_mce_js_exec_counter[2377]++;
  u = k.endContainer;
  tiny_mce_js_exec_counter[2378]++;
  s = k.endOffset;
  tiny_mce_js_exec_counter[2379]++;
  p = o.createTextRange();
  if (m == u && m.nodeType == 1 && r == s - 1) 
  {
    if (r == s - 1) 
    {
      try {
        tiny_mce_js_exec_counter[2380]++;
        n = o.createControlRange();
        tiny_mce_js_exec_counter[2381]++;
        n.addElement(m.childNodes[r]);
        tiny_mce_js_exec_counter[2382]++;
        n.select();
        tiny_mce_js_exec_counter[2383]++;
        return;
      }      catch (q) {
}
    }
  }
  tiny_mce_js_exec_counter[2384]++;
  l(true);
  tiny_mce_js_exec_counter[2385]++;
  l();
  tiny_mce_js_exec_counter[2386]++;
  p.select();
  tiny_mce_js_exec_counter[2346]++;
};
    tiny_mce_js_exec_counter[2387]++;
    this.getRangeAt = function() {
  tiny_mce_js_exec_counter[2388]++;
  if (!e || !tinymce.dom.RangeUtils.compareRanges(h, g.getRng())) 
  {
    tiny_mce_js_exec_counter[2389]++;
    e = b();
    tiny_mce_js_exec_counter[2390]++;
    h = g.getRng();
  }
  try {
    tiny_mce_js_exec_counter[2391]++;
    e.startContainer.nextSibling;
  }  catch (k) {
  tiny_mce_js_exec_counter[2392]++;
  e = b();
  tiny_mce_js_exec_counter[2393]++;
  h = null;
}
  tiny_mce_js_exec_counter[2394]++;
  return e;
};
    tiny_mce_js_exec_counter[2395]++;
    this.destroy = function() {
  tiny_mce_js_exec_counter[2396]++;
  tiny_mce_js_exec_counter[2398]++;
  h = e = null;
  tiny_mce_js_exec_counter[2397]++;
};
    tiny_mce_js_exec_counter[2290]++;
  }
  tiny_mce_js_exec_counter[2399]++;
  tinymce.dom.TridentSelection = a;
  tiny_mce_js_exec_counter[2288]++;
})();
tiny_mce_js_exec_counter[2400]++;
(function() {
  tiny_mce_js_exec_counter[2401]++;
  tiny_mce_js_exec_counter[2403]++;
  var p = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g, j = 0, d = Object.prototype.toString, o = false, i = true;
  tiny_mce_js_exec_counter[2405]++;
  [0, 0].sort(function() {
  tiny_mce_js_exec_counter[2406]++;
  tiny_mce_js_exec_counter[2407]++;
  i = false;
  tiny_mce_js_exec_counter[2408]++;
  return 0;
});
  tiny_mce_js_exec_counter[2409]++;
  var b = function(v, e, z, A) {
  tiny_mce_js_exec_counter[2411]++;
  tiny_mce_js_exec_counter[2412]++;
  z = z || [];
  tiny_mce_js_exec_counter[2413]++;
  e = e || document;
  tiny_mce_js_exec_counter[2414]++;
  var C = e;
  if (e.nodeType !== 1 && e.nodeType !== 9) 
  {
    tiny_mce_js_exec_counter[2416]++;
    return [];
  }
  if (!v || typeof v !== "string") 
  {
    tiny_mce_js_exec_counter[2417]++;
    return z;
  }
  tiny_mce_js_exec_counter[2418]++;
  var x = [], s, E, H, r, u = true, t = b.isXML(e), B = v, D, G, F, y;
do {
    tiny_mce_js_exec_counter[2420]++;
    p.exec("");
    tiny_mce_js_exec_counter[2421]++;
    s = p.exec(B);
    if (s) 
    {
      tiny_mce_js_exec_counter[2422]++;
      B = s[3];
      tiny_mce_js_exec_counter[2423]++;
      x.push(s[1]);
      if (s[2]) 
      {
        tiny_mce_js_exec_counter[2424]++;
        r = s[3];
        tiny_mce_js_exec_counter[2425]++;
        break;
      }
    }
  } while (s);
  if (x.length > 1 && k.exec(v)) 
  {
    if (x.length === 2 && f.relative[x[0]]) 
    {
      tiny_mce_js_exec_counter[2426]++;
      E = h(x[0] + x[1], e);
    } else {
      tiny_mce_js_exec_counter[2427]++;
      E = f.relative[x[0]] ? [e] : b(x.shift(), e);
      while (x.length) 
        {
          tiny_mce_js_exec_counter[2428]++;
          v = x.shift();
          if (f.relative[v]) 
          {
            tiny_mce_js_exec_counter[2429]++;
            v += x.shift();
          }
          tiny_mce_js_exec_counter[2430]++;
          E = h(v, E);
        }
    }
  } else {
    if (!A && x.length > 1 && e.nodeType === 9 && !t && f.match.ID.test(x[0]) && !f.match.ID.test(x[x.length - 1])) 
    {
      tiny_mce_js_exec_counter[2431]++;
      D = b.find(x.shift(), e, t);
      tiny_mce_js_exec_counter[2432]++;
      e = D.expr ? b.filter(D.expr, D.set)[0] : D.set[0];
    }
    if (e) 
    {
      tiny_mce_js_exec_counter[2433]++;
      D = A ? {expr: x.pop(), set: a(A)} : b.find(x.pop(), x.length === 1 && (x[0] === "~" || x[0] === "+") && e.parentNode ? e.parentNode : e, t);
      tiny_mce_js_exec_counter[2434]++;
      E = D.expr ? b.filter(D.expr, D.set) : D.set;
      if (x.length > 0) 
      {
        tiny_mce_js_exec_counter[2435]++;
        H = a(E);
      } else {
        tiny_mce_js_exec_counter[2436]++;
        u = false;
      }
      while (x.length) 
        {
          tiny_mce_js_exec_counter[2437]++;
          G = x.pop();
          tiny_mce_js_exec_counter[2438]++;
          F = G;
          if (!f.relative[G]) 
          {
            tiny_mce_js_exec_counter[2439]++;
            G = "";
          } else {
            tiny_mce_js_exec_counter[2440]++;
            F = x.pop();
          }
          if (F == null) 
          {
            tiny_mce_js_exec_counter[2441]++;
            F = e;
          }
          tiny_mce_js_exec_counter[2442]++;
          f.relative[G](H, F, t);
        }
    } else {
      tiny_mce_js_exec_counter[2443]++;
      H = x = [];
    }
  }
  if (!H) 
  {
    tiny_mce_js_exec_counter[2444]++;
    H = E;
  }
  if (!H) 
  {
    tiny_mce_js_exec_counter[2445]++;
    b.error(G || v);
  }
  if (d.call(H) === "[object Array]") 
  {
    if (!u) 
    {
      tiny_mce_js_exec_counter[2446]++;
      z.push.apply(z, H);
    } else {
      if (e && e.nodeType === 1) 
      {
        for (y = 0; H[y] != null; y++) 
          {
            if (H[y] && (H[y] === true || H[y].nodeType === 1 && b.contains(e, H[y]))) 
            {
              tiny_mce_js_exec_counter[2447]++;
              z.push(E[y]);
            }
          }
      } else {
        for (y = 0; H[y] != null; y++) 
          {
            if (H[y] && H[y].nodeType === 1) 
            {
              tiny_mce_js_exec_counter[2448]++;
              z.push(E[y]);
            }
          }
      }
    }
  } else {
    tiny_mce_js_exec_counter[2449]++;
    a(H, z);
  }
  if (r) 
  {
    tiny_mce_js_exec_counter[2450]++;
    b(r, C, z, A);
    tiny_mce_js_exec_counter[2451]++;
    b.uniqueSort(z);
  }
  tiny_mce_js_exec_counter[2452]++;
  return z;
};
  tiny_mce_js_exec_counter[2453]++;
  b.uniqueSort = function(r) {
  tiny_mce_js_exec_counter[2454]++;
  if (c) 
  {
    tiny_mce_js_exec_counter[2455]++;
    o = i;
    tiny_mce_js_exec_counter[2456]++;
    r.sort(c);
    if (o) 
    {
      for (var e = 1; e < r.length; e++) 
        {
          if (r[e] === r[e - 1]) 
          {
            tiny_mce_js_exec_counter[2457]++;
            r.splice(e--, 1);
          }
        }
    }
  }
  tiny_mce_js_exec_counter[2458]++;
  return r;
};
  tiny_mce_js_exec_counter[2459]++;
  b.matches = function(e, r) {
  tiny_mce_js_exec_counter[2460]++;
  tiny_mce_js_exec_counter[2461]++;
  return b(e, null, null, r);
};
  tiny_mce_js_exec_counter[2462]++;
  b.find = function(y, e, z) {
  tiny_mce_js_exec_counter[2463]++;
  tiny_mce_js_exec_counter[2464]++;
  var x;
  if (!y) 
  {
    tiny_mce_js_exec_counter[2466]++;
    return [];
  }
  for (var t = 0, s = f.order.length; t < s; t++) 
    {
      tiny_mce_js_exec_counter[2467]++;
      var v = f.order[t], u;
      if ((u = f.leftMatch[v].exec(y))) 
      {
        tiny_mce_js_exec_counter[2469]++;
        var r = u[1];
        tiny_mce_js_exec_counter[2471]++;
        u.splice(1, 1);
        if (r.substr(r.length - 1) !== "\\") 
        {
          tiny_mce_js_exec_counter[2472]++;
          u[1] = (u[1] || "").replace(/\\/g, "");
          tiny_mce_js_exec_counter[2473]++;
          x = f.find[v](u, e, z);
          if (x != null) 
          {
            tiny_mce_js_exec_counter[2474]++;
            y = y.replace(f.match[v], "");
            tiny_mce_js_exec_counter[2475]++;
            break;
          }
        }
      }
    }
  if (!x) 
  {
    tiny_mce_js_exec_counter[2476]++;
    x = e.getElementsByTagName("*");
  }
  tiny_mce_js_exec_counter[2477]++;
  return {set: x, expr: y};
};
  tiny_mce_js_exec_counter[2478]++;
  b.filter = function(C, B, F, u) {
  tiny_mce_js_exec_counter[2479]++;
  tiny_mce_js_exec_counter[2480]++;
  var s = C, H = [], z = B, x, e, y = B && B[0] && b.isXML(B[0]);
  while (C && B.length) 
    {
      for (var A in f.filter) 
        {
          if ((x = f.leftMatch[A].exec(C)) != null && x[2]) 
          {
            tiny_mce_js_exec_counter[2483]++;
            var r = f.filter[A], G, E, t = x[1];
            tiny_mce_js_exec_counter[2485]++;
            e = false;
            tiny_mce_js_exec_counter[2486]++;
            x.splice(1, 1);
            if (t.substr(t.length - 1) === "\\") 
            {
              tiny_mce_js_exec_counter[2487]++;
              continue;
            }
            if (z === H) 
            {
              tiny_mce_js_exec_counter[2488]++;
              H = [];
            }
            if (f.preFilter[A]) 
            {
              tiny_mce_js_exec_counter[2489]++;
              x = f.preFilter[A](x, z, F, H, u, y);
              if (!x) 
              {
                tiny_mce_js_exec_counter[2490]++;
                e = G = true;
              } else {
                if (x === true) 
                {
                  tiny_mce_js_exec_counter[2491]++;
                  continue;
                }
              }
            }
            if (x) 
            {
              for (var v = 0; (E = z[v]) != null; v++) 
                {
                  if (E) 
                  {
                    tiny_mce_js_exec_counter[2492]++;
                    G = r(E, x, v, z);
                    tiny_mce_js_exec_counter[2493]++;
                    var D = u ^ !!G;
                    if (F && G != null) 
                    {
                      if (D) 
                      {
                        tiny_mce_js_exec_counter[2495]++;
                        e = true;
                      } else {
                        tiny_mce_js_exec_counter[2496]++;
                        z[v] = false;
                      }
                    } else {
                      if (D) 
                      {
                        tiny_mce_js_exec_counter[2497]++;
                        H.push(E);
                        tiny_mce_js_exec_counter[2498]++;
                        e = true;
                      }
                    }
                  }
                }
            }
            if (G !== undefined) 
            {
              if (!F) 
              {
                tiny_mce_js_exec_counter[2499]++;
                z = H;
              }
              tiny_mce_js_exec_counter[2500]++;
              C = C.replace(f.match[A], "");
              if (!e) 
              {
                tiny_mce_js_exec_counter[2501]++;
                return [];
              }
              tiny_mce_js_exec_counter[2502]++;
              break;
            }
          }
        }
      if (C === s) 
      {
        if (e == null) 
        {
          tiny_mce_js_exec_counter[2503]++;
          b.error(C);
        } else {
          tiny_mce_js_exec_counter[2504]++;
          break;
        }
      }
      tiny_mce_js_exec_counter[2505]++;
      s = C;
    }
  tiny_mce_js_exec_counter[2506]++;
  return z;
};
  tiny_mce_js_exec_counter[2507]++;
  b.error = function(e) {
  tiny_mce_js_exec_counter[2508]++;
  tiny_mce_js_exec_counter[2510]++;
  throw "Syntax error, unrecognized expression: " + e;
  tiny_mce_js_exec_counter[2509]++;
};
  tiny_mce_js_exec_counter[2511]++;
  var f = b.selectors = {order: ["ID", "NAME", "TAG"], match: {ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/, ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/, TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/, CHILD: /:(only|nth|last|first)-child(?:\((even|odd|[\dn+\-]*)\))?/, POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/, PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/}, leftMatch: {}, attrMap: {"class": "className", "for": "htmlFor"}, attrHandle: {href: function(e) {
  tiny_mce_js_exec_counter[2513]++;
  tiny_mce_js_exec_counter[2514]++;
  return e.getAttribute("href");
}}, relative: {"+": function(x, r) {
  tiny_mce_js_exec_counter[2515]++;
  tiny_mce_js_exec_counter[2517]++;
  var t = typeof r === "string", v = t && !/\W/.test(r), y = t && !v;
  if (v) 
  {
    tiny_mce_js_exec_counter[2519]++;
    r = r.toLowerCase();
  }
  for (var s = 0, e = x.length, u; s < e; s++) 
    {
      if ((u = x[s])) 
      {
        while ((u = u.previousSibling) && u.nodeType !== 1) 
          {
          }
        tiny_mce_js_exec_counter[2520]++;
        x[s] = y || u && u.nodeName.toLowerCase() === r ? u || false : u === r;
      }
    }
  if (y) 
  {
    tiny_mce_js_exec_counter[2521]++;
    b.filter(r, x, true);
  }
  tiny_mce_js_exec_counter[2516]++;
}, ">": function(x, r) {
  tiny_mce_js_exec_counter[2522]++;
  tiny_mce_js_exec_counter[2524]++;
  var u = typeof r === "string", v, s = 0, e = x.length;
  if (u && !/\W/.test(r)) 
  {
    tiny_mce_js_exec_counter[2526]++;
    r = r.toLowerCase();
    for (; s < e; s++) 
      {
        tiny_mce_js_exec_counter[2527]++;
        v = x[s];
        if (v) 
        {
          tiny_mce_js_exec_counter[2528]++;
          var t = v.parentNode;
          tiny_mce_js_exec_counter[2530]++;
          x[s] = t.nodeName.toLowerCase() === r ? t : false;
        }
      }
  } else {
    for (; s < e; s++) 
      {
        tiny_mce_js_exec_counter[2531]++;
        v = x[s];
        if (v) 
        {
          tiny_mce_js_exec_counter[2532]++;
          x[s] = u ? v.parentNode : v.parentNode === r;
        }
      }
    if (u) 
    {
      tiny_mce_js_exec_counter[2533]++;
      b.filter(r, x, true);
    }
  }
  tiny_mce_js_exec_counter[2523]++;
}, "": function(t, r, v) {
  tiny_mce_js_exec_counter[2534]++;
  tiny_mce_js_exec_counter[2536]++;
  var s = j++, e = q, u;
  if (typeof r === "string" && !/\W/.test(r)) 
  {
    tiny_mce_js_exec_counter[2538]++;
    r = r.toLowerCase();
    tiny_mce_js_exec_counter[2539]++;
    u = r;
    tiny_mce_js_exec_counter[2540]++;
    e = n;
  }
  tiny_mce_js_exec_counter[2541]++;
  e("parentNode", r, s, t, u, v);
  tiny_mce_js_exec_counter[2535]++;
}, "~": function(t, r, v) {
  tiny_mce_js_exec_counter[2542]++;
  tiny_mce_js_exec_counter[2544]++;
  var s = j++, e = q, u;
  if (typeof r === "string" && !/\W/.test(r)) 
  {
    tiny_mce_js_exec_counter[2546]++;
    r = r.toLowerCase();
    tiny_mce_js_exec_counter[2547]++;
    u = r;
    tiny_mce_js_exec_counter[2548]++;
    e = n;
  }
  tiny_mce_js_exec_counter[2549]++;
  e("previousSibling", r, s, t, u, v);
  tiny_mce_js_exec_counter[2543]++;
}}, find: {ID: function(r, s, t) {
  tiny_mce_js_exec_counter[2550]++;
  if (typeof s.getElementById !== "undefined" && !t) 
  {
    tiny_mce_js_exec_counter[2552]++;
    var e = s.getElementById(r[1]);
    tiny_mce_js_exec_counter[2554]++;
    return e ? [e] : [];
  }
  tiny_mce_js_exec_counter[2551]++;
}, NAME: function(s, v) {
  tiny_mce_js_exec_counter[2555]++;
  if (typeof v.getElementsByName !== "undefined") 
  {
    tiny_mce_js_exec_counter[2557]++;
    var r = [], u = v.getElementsByName(s[1]);
    for (var t = 0, e = u.length; t < e; t++) 
      {
        if (u[t].getAttribute("name") === s[1]) 
        {
          tiny_mce_js_exec_counter[2559]++;
          r.push(u[t]);
        }
      }
    tiny_mce_js_exec_counter[2560]++;
    return r.length === 0 ? null : r;
  }
  tiny_mce_js_exec_counter[2556]++;
}, TAG: function(e, r) {
  tiny_mce_js_exec_counter[2561]++;
  tiny_mce_js_exec_counter[2562]++;
  return r.getElementsByTagName(e[1]);
}}, preFilter: {CLASS: function(t, r, s, e, x, y) {
  tiny_mce_js_exec_counter[2563]++;
  tiny_mce_js_exec_counter[2564]++;
  t = " " + t[1].replace(/\\/g, "") + " ";
  if (y) 
  {
    tiny_mce_js_exec_counter[2565]++;
    return t;
  }
  for (var u = 0, v; (v = r[u]) != null; u++) 
    {
      if (v) 
      {
        if (x ^ (v.className && (" " + v.className + " ").replace(/[\t\n]/g, " ").indexOf(t) >= 0)) 
        {
          if (!s) 
          {
            tiny_mce_js_exec_counter[2566]++;
            e.push(v);
          }
        } else {
          if (s) 
          {
            tiny_mce_js_exec_counter[2567]++;
            r[u] = false;
          }
        }
      }
    }
  tiny_mce_js_exec_counter[2568]++;
  return false;
}, ID: function(e) {
  tiny_mce_js_exec_counter[2569]++;
  tiny_mce_js_exec_counter[2570]++;
  return e[1].replace(/\\/g, "");
}, TAG: function(r, e) {
  tiny_mce_js_exec_counter[2571]++;
  tiny_mce_js_exec_counter[2572]++;
  return r[1].toLowerCase();
}, CHILD: function(e) {
  tiny_mce_js_exec_counter[2573]++;
  if (e[1] === "nth") 
  {
    tiny_mce_js_exec_counter[2574]++;
    var r = /(-?)(\d*)n((?:\+|-)?\d*)/.exec(e[2] === "even" && "2n" || e[2] === "odd" && "2n+1" || !/\D/.test(e[2]) && "0n+" + e[2] || e[2]);
    tiny_mce_js_exec_counter[2576]++;
    e[2] = (r[1] + (r[2] || 1)) - 0;
    tiny_mce_js_exec_counter[2577]++;
    e[3] = r[3] - 0;
  }
  tiny_mce_js_exec_counter[2578]++;
  e[0] = j++;
  tiny_mce_js_exec_counter[2579]++;
  return e;
}, ATTR: function(u, r, s, e, v, x) {
  tiny_mce_js_exec_counter[2580]++;
  tiny_mce_js_exec_counter[2581]++;
  var t = u[1].replace(/\\/g, "");
  if (!x && f.attrMap[t]) 
  {
    tiny_mce_js_exec_counter[2583]++;
    u[1] = f.attrMap[t];
  }
  if (u[2] === "~=") 
  {
    tiny_mce_js_exec_counter[2584]++;
    u[4] = " " + u[4] + " ";
  }
  tiny_mce_js_exec_counter[2585]++;
  return u;
}, PSEUDO: function(u, r, s, e, v) {
  tiny_mce_js_exec_counter[2586]++;
  if (u[1] === "not") 
  {
    if ((p.exec(u[3]) || "").length > 1 || /^\w/.test(u[3])) 
    {
      tiny_mce_js_exec_counter[2587]++;
      u[3] = b(u[3], null, null, r);
    } else {
      tiny_mce_js_exec_counter[2588]++;
      var t = b.filter(u[3], r, s, true ^ v);
      if (!s) 
      {
        tiny_mce_js_exec_counter[2590]++;
        e.push.apply(e, t);
      }
      tiny_mce_js_exec_counter[2591]++;
      return false;
    }
  } else {
    if (f.match.POS.test(u[0]) || f.match.CHILD.test(u[0])) 
    {
      tiny_mce_js_exec_counter[2592]++;
      return true;
    }
  }
  tiny_mce_js_exec_counter[2593]++;
  return u;
}, POS: function(e) {
  tiny_mce_js_exec_counter[2594]++;
  tiny_mce_js_exec_counter[2595]++;
  e.unshift(true);
  tiny_mce_js_exec_counter[2596]++;
  return e;
}}, filters: {enabled: function(e) {
  tiny_mce_js_exec_counter[2597]++;
  tiny_mce_js_exec_counter[2598]++;
  return e.disabled === false && e.type !== "hidden";
}, disabled: function(e) {
  tiny_mce_js_exec_counter[2599]++;
  tiny_mce_js_exec_counter[2600]++;
  return e.disabled === true;
}, checked: function(e) {
  tiny_mce_js_exec_counter[2601]++;
  tiny_mce_js_exec_counter[2602]++;
  return e.checked === true;
}, selected: function(e) {
  tiny_mce_js_exec_counter[2603]++;
  tiny_mce_js_exec_counter[2604]++;
  e.parentNode.selectedIndex;
  tiny_mce_js_exec_counter[2605]++;
  return e.selected === true;
}, parent: function(e) {
  tiny_mce_js_exec_counter[2606]++;
  tiny_mce_js_exec_counter[2607]++;
  return !!e.firstChild;
}, empty: function(e) {
  tiny_mce_js_exec_counter[2608]++;
  tiny_mce_js_exec_counter[2609]++;
  return !e.firstChild;
}, has: function(s, r, e) {
  tiny_mce_js_exec_counter[2610]++;
  tiny_mce_js_exec_counter[2611]++;
  return !!b(e[3], s).length;
}, header: function(e) {
  tiny_mce_js_exec_counter[2612]++;
  tiny_mce_js_exec_counter[2613]++;
  return (/h\d/i).test(e.nodeName);
}, text: function(e) {
  tiny_mce_js_exec_counter[2614]++;
  tiny_mce_js_exec_counter[2615]++;
  return "text" === e.type;
}, radio: function(e) {
  tiny_mce_js_exec_counter[2616]++;
  tiny_mce_js_exec_counter[2617]++;
  return "radio" === e.type;
}, checkbox: function(e) {
  tiny_mce_js_exec_counter[2618]++;
  tiny_mce_js_exec_counter[2619]++;
  return "checkbox" === e.type;
}, file: function(e) {
  tiny_mce_js_exec_counter[2620]++;
  tiny_mce_js_exec_counter[2621]++;
  return "file" === e.type;
}, password: function(e) {
  tiny_mce_js_exec_counter[2622]++;
  tiny_mce_js_exec_counter[2623]++;
  return "password" === e.type;
}, submit: function(e) {
  tiny_mce_js_exec_counter[2624]++;
  tiny_mce_js_exec_counter[2625]++;
  return "submit" === e.type;
}, image: function(e) {
  tiny_mce_js_exec_counter[2626]++;
  tiny_mce_js_exec_counter[2627]++;
  return "image" === e.type;
}, reset: function(e) {
  tiny_mce_js_exec_counter[2628]++;
  tiny_mce_js_exec_counter[2629]++;
  return "reset" === e.type;
}, button: function(e) {
  tiny_mce_js_exec_counter[2630]++;
  tiny_mce_js_exec_counter[2631]++;
  return "button" === e.type || e.nodeName.toLowerCase() === "button";
}, input: function(e) {
  tiny_mce_js_exec_counter[2632]++;
  tiny_mce_js_exec_counter[2633]++;
  return (/input|select|textarea|button/i).test(e.nodeName);
}}, setFilters: {first: function(r, e) {
  tiny_mce_js_exec_counter[2634]++;
  tiny_mce_js_exec_counter[2635]++;
  return e === 0;
}, last: function(s, r, e, t) {
  tiny_mce_js_exec_counter[2636]++;
  tiny_mce_js_exec_counter[2637]++;
  return r === t.length - 1;
}, even: function(r, e) {
  tiny_mce_js_exec_counter[2638]++;
  tiny_mce_js_exec_counter[2639]++;
  return e % 2 === 0;
}, odd: function(r, e) {
  tiny_mce_js_exec_counter[2640]++;
  tiny_mce_js_exec_counter[2641]++;
  return e % 2 === 1;
}, lt: function(s, r, e) {
  tiny_mce_js_exec_counter[2642]++;
  tiny_mce_js_exec_counter[2643]++;
  return r < e[3] - 0;
}, gt: function(s, r, e) {
  tiny_mce_js_exec_counter[2644]++;
  tiny_mce_js_exec_counter[2645]++;
  return r > e[3] - 0;
}, nth: function(s, r, e) {
  tiny_mce_js_exec_counter[2646]++;
  tiny_mce_js_exec_counter[2647]++;
  return e[3] - 0 === r;
}, eq: function(s, r, e) {
  tiny_mce_js_exec_counter[2648]++;
  tiny_mce_js_exec_counter[2649]++;
  return e[3] - 0 === r;
}}, filter: {PSEUDO: function(s, y, x, z) {
  tiny_mce_js_exec_counter[2650]++;
  tiny_mce_js_exec_counter[2652]++;
  var e = y[1], r = f.filters[e];
  if (r) 
  {
    tiny_mce_js_exec_counter[2654]++;
    return r(s, x, y, z);
  } else {
    if (e === "contains") 
    {
      tiny_mce_js_exec_counter[2655]++;
      return (s.textContent || s.innerText || b.getText([s]) || "").indexOf(y[3]) >= 0;
    } else {
      if (e === "not") 
      {
        tiny_mce_js_exec_counter[2656]++;
        var t = y[3];
        for (var v = 0, u = t.length; v < u; v++) 
          {
            if (t[v] === s) 
            {
              tiny_mce_js_exec_counter[2658]++;
              return false;
            }
          }
        tiny_mce_js_exec_counter[2659]++;
        return true;
      } else {
        tiny_mce_js_exec_counter[2660]++;
        b.error("Syntax error, unrecognized expression: " + e);
      }
    }
  }
  tiny_mce_js_exec_counter[2651]++;
}, CHILD: function(e, t) {
  tiny_mce_js_exec_counter[2661]++;
  tiny_mce_js_exec_counter[2663]++;
  var x = t[1], r = e;
  switch (x) {
    case "only":
    case "first":
      {
        while ((r = r.previousSibling)) 
          {
            if (r.nodeType === 1) 
            {
              tiny_mce_js_exec_counter[2665]++;
              return false;
            }
          }
        if (x === "first") 
        {
          tiny_mce_js_exec_counter[2666]++;
          return true;
        }
        tiny_mce_js_exec_counter[2667]++;
        r = e;
      }
    case "last":
      {
        while ((r = r.nextSibling)) 
          {
            if (r.nodeType === 1) 
            {
              tiny_mce_js_exec_counter[2668]++;
              return false;
            }
          }
        tiny_mce_js_exec_counter[2669]++;
        return true;
      }
    case "nth":
      {
        tiny_mce_js_exec_counter[2670]++;
        var s = t[2], A = t[3];
        if (s === 1 && A === 0) 
        {
          tiny_mce_js_exec_counter[2672]++;
          return true;
        }
        tiny_mce_js_exec_counter[2673]++;
        var v = t[0], z = e.parentNode;
        if (z && (z.sizcache !== v || !e.nodeIndex)) 
        {
          tiny_mce_js_exec_counter[2675]++;
          var u = 0;
          for (r = z.firstChild; r; r = r.nextSibling) 
            {
              if (r.nodeType === 1) 
              {
                tiny_mce_js_exec_counter[2677]++;
                r.nodeIndex = ++u;
              }
            }
          tiny_mce_js_exec_counter[2678]++;
          z.sizcache = v;
        }
        tiny_mce_js_exec_counter[2679]++;
        var y = e.nodeIndex - A;
        if (s === 0) 
        {
          tiny_mce_js_exec_counter[2681]++;
          return y === 0;
        } else {
          tiny_mce_js_exec_counter[2682]++;
          return (y % s === 0 && y / s >= 0);
        }
      }
  }
  tiny_mce_js_exec_counter[2662]++;
}, ID: function(r, e) {
  tiny_mce_js_exec_counter[2683]++;
  tiny_mce_js_exec_counter[2684]++;
  return r.nodeType === 1 && r.getAttribute("id") === e;
}, TAG: function(r, e) {
  tiny_mce_js_exec_counter[2685]++;
  tiny_mce_js_exec_counter[2686]++;
  return (e === "*" && r.nodeType === 1) || r.nodeName.toLowerCase() === e;
}, CLASS: function(r, e) {
  tiny_mce_js_exec_counter[2687]++;
  tiny_mce_js_exec_counter[2688]++;
  return (" " + (r.className || r.getAttribute("class")) + " ").indexOf(e) > -1;
}, ATTR: function(v, t) {
  tiny_mce_js_exec_counter[2689]++;
  tiny_mce_js_exec_counter[2690]++;
  var s = t[1], e = f.attrHandle[s] ? f.attrHandle[s](v) : v[s] != null ? v[s] : v.getAttribute(s), x = e + "", u = t[2], r = t[4];
  tiny_mce_js_exec_counter[2692]++;
  return e == null ? u === "!=" : u === "=" ? x === r : u === "*=" ? x.indexOf(r) >= 0 : u === "~=" ? (" " + x + " ").indexOf(r) >= 0 : !r ? x && e !== false : u === "!=" ? x !== r : u === "^=" ? x.indexOf(r) === 0 : u === "$=" ? x.substr(x.length - r.length) === r : u === "|=" ? x === r || x.substr(0, r.length + 1) === r + "-" : false;
}, POS: function(u, r, s, v) {
  tiny_mce_js_exec_counter[2693]++;
  tiny_mce_js_exec_counter[2695]++;
  var e = r[2], t = f.setFilters[e];
  if (t) 
  {
    tiny_mce_js_exec_counter[2697]++;
    return t(u, s, r, v);
  }
  tiny_mce_js_exec_counter[2694]++;
}}};
  tiny_mce_js_exec_counter[2698]++;
  var k = f.match.POS, g = function(r, e) {
  tiny_mce_js_exec_counter[2700]++;
  tiny_mce_js_exec_counter[2701]++;
  return "\\" + (e - 0 + 1);
};
  for (var m in f.match) 
    {
      tiny_mce_js_exec_counter[2703]++;
      f.match[m] = new RegExp(f.match[m].source + (/(?![^\[]*\])(?![^\(]*\))/.source));
      tiny_mce_js_exec_counter[2704]++;
      f.leftMatch[m] = new RegExp(/(^(?:.|\r|\n)*?)/.source + f.match[m].source.replace(/\\(\d+)/g, g));
    }
  tiny_mce_js_exec_counter[2705]++;
  var a = function(r, e) {
  tiny_mce_js_exec_counter[2707]++;
  tiny_mce_js_exec_counter[2708]++;
  r = Array.prototype.slice.call(r, 0);
  if (e) 
  {
    tiny_mce_js_exec_counter[2709]++;
    e.push.apply(e, r);
    tiny_mce_js_exec_counter[2710]++;
    return e;
  }
  tiny_mce_js_exec_counter[2711]++;
  return r;
};
  try {
    tiny_mce_js_exec_counter[2712]++;
    Array.prototype.slice.call(document.documentElement.childNodes, 0)[0].nodeType;
  }  catch (l) {
  tiny_mce_js_exec_counter[2713]++;
  a = function(u, t) {
  tiny_mce_js_exec_counter[2714]++;
  tiny_mce_js_exec_counter[2715]++;
  var r = t || [], s = 0;
  if (d.call(u) === "[object Array]") 
  {
    tiny_mce_js_exec_counter[2717]++;
    Array.prototype.push.apply(r, u);
  } else {
    if (typeof u.length === "number") 
    {
      for (var e = u.length; s < e; s++) 
        {
          tiny_mce_js_exec_counter[2718]++;
          r.push(u[s]);
        }
    } else {
      for (; u[s]; s++) 
        {
          tiny_mce_js_exec_counter[2719]++;
          r.push(u[s]);
        }
    }
  }
  tiny_mce_js_exec_counter[2720]++;
  return r;
};
}
  tiny_mce_js_exec_counter[2721]++;
  var c;
  if (document.documentElement.compareDocumentPosition) 
  {
    tiny_mce_js_exec_counter[2723]++;
    c = function(r, e) {
  tiny_mce_js_exec_counter[2724]++;
  if (!r.compareDocumentPosition || !e.compareDocumentPosition) 
  {
    if (r == e) 
    {
      tiny_mce_js_exec_counter[2725]++;
      o = true;
    }
    tiny_mce_js_exec_counter[2726]++;
    return r.compareDocumentPosition ? -1 : 1;
  }
  tiny_mce_js_exec_counter[2727]++;
  var s = r.compareDocumentPosition(e) & 4 ? -1 : r === e ? 0 : 1;
  if (s === 0) 
  {
    tiny_mce_js_exec_counter[2729]++;
    o = true;
  }
  tiny_mce_js_exec_counter[2730]++;
  return s;
};
  } else {
    if ("sourceIndex" in document.documentElement) 
    {
      tiny_mce_js_exec_counter[2731]++;
      c = function(r, e) {
  tiny_mce_js_exec_counter[2732]++;
  if (!r.sourceIndex || !e.sourceIndex) 
  {
    if (r == e) 
    {
      tiny_mce_js_exec_counter[2733]++;
      o = true;
    }
    tiny_mce_js_exec_counter[2734]++;
    return r.sourceIndex ? -1 : 1;
  }
  tiny_mce_js_exec_counter[2735]++;
  var s = r.sourceIndex - e.sourceIndex;
  if (s === 0) 
  {
    tiny_mce_js_exec_counter[2737]++;
    o = true;
  }
  tiny_mce_js_exec_counter[2738]++;
  return s;
};
    } else {
      if (document.createRange) 
      {
        tiny_mce_js_exec_counter[2739]++;
        c = function(t, r) {
  tiny_mce_js_exec_counter[2740]++;
  if (!t.ownerDocument || !r.ownerDocument) 
  {
    if (t == r) 
    {
      tiny_mce_js_exec_counter[2741]++;
      o = true;
    }
    tiny_mce_js_exec_counter[2742]++;
    return t.ownerDocument ? -1 : 1;
  }
  tiny_mce_js_exec_counter[2743]++;
  var s = t.ownerDocument.createRange(), e = r.ownerDocument.createRange();
  tiny_mce_js_exec_counter[2745]++;
  s.setStart(t, 0);
  tiny_mce_js_exec_counter[2746]++;
  s.setEnd(t, 0);
  tiny_mce_js_exec_counter[2747]++;
  e.setStart(r, 0);
  tiny_mce_js_exec_counter[2748]++;
  e.setEnd(r, 0);
  tiny_mce_js_exec_counter[2749]++;
  var u = s.compareBoundaryPoints(Range.START_TO_END, e);
  if (u === 0) 
  {
    tiny_mce_js_exec_counter[2751]++;
    o = true;
  }
  tiny_mce_js_exec_counter[2752]++;
  return u;
};
      }
    }
  }
  tiny_mce_js_exec_counter[2753]++;
  b.getText = function(e) {
  tiny_mce_js_exec_counter[2754]++;
  tiny_mce_js_exec_counter[2755]++;
  var r = "", t;
  for (var s = 0; e[s]; s++) 
    {
      tiny_mce_js_exec_counter[2757]++;
      t = e[s];
      if (t.nodeType === 3 || t.nodeType === 4) 
      {
        tiny_mce_js_exec_counter[2758]++;
        r += t.nodeValue;
      } else {
        if (t.nodeType !== 8) 
        {
          tiny_mce_js_exec_counter[2759]++;
          r += b.getText(t.childNodes);
        }
      }
    }
  tiny_mce_js_exec_counter[2760]++;
  return r;
};
  tiny_mce_js_exec_counter[2761]++;
  (function() {
  tiny_mce_js_exec_counter[2762]++;
  tiny_mce_js_exec_counter[2764]++;
  var r = document.createElement("div"), s = "script" + (new Date()).getTime();
  tiny_mce_js_exec_counter[2766]++;
  r.innerHTML = "<a name='" + s + "'/>";
  tiny_mce_js_exec_counter[2767]++;
  var e = document.documentElement;
  tiny_mce_js_exec_counter[2769]++;
  e.insertBefore(r, e.firstChild);
  if (document.getElementById(s)) 
  {
    tiny_mce_js_exec_counter[2770]++;
    f.find.ID = function(u, v, x) {
  tiny_mce_js_exec_counter[2771]++;
  if (typeof v.getElementById !== "undefined" && !x) 
  {
    tiny_mce_js_exec_counter[2773]++;
    var t = v.getElementById(u[1]);
    tiny_mce_js_exec_counter[2775]++;
    return t ? t.id === u[1] || typeof t.getAttributeNode !== "undefined" && t.getAttributeNode("id").nodeValue === u[1] ? [t] : undefined : [];
  }
  tiny_mce_js_exec_counter[2772]++;
};
    tiny_mce_js_exec_counter[2776]++;
    f.filter.ID = function(v, t) {
  tiny_mce_js_exec_counter[2777]++;
  tiny_mce_js_exec_counter[2778]++;
  var u = typeof v.getAttributeNode !== "undefined" && v.getAttributeNode("id");
  tiny_mce_js_exec_counter[2780]++;
  return v.nodeType === 1 && u && u.nodeValue === t;
};
  }
  tiny_mce_js_exec_counter[2781]++;
  e.removeChild(r);
  tiny_mce_js_exec_counter[2782]++;
  e = r = null;
  tiny_mce_js_exec_counter[2763]++;
})();
  tiny_mce_js_exec_counter[2783]++;
  (function() {
  tiny_mce_js_exec_counter[2784]++;
  tiny_mce_js_exec_counter[2786]++;
  var e = document.createElement("div");
  tiny_mce_js_exec_counter[2788]++;
  e.appendChild(document.createComment(""));
  if (e.getElementsByTagName("*").length > 0) 
  {
    tiny_mce_js_exec_counter[2789]++;
    f.find.TAG = function(r, v) {
  tiny_mce_js_exec_counter[2790]++;
  tiny_mce_js_exec_counter[2791]++;
  var u = v.getElementsByTagName(r[1]);
  if (r[1] === "*") 
  {
    tiny_mce_js_exec_counter[2793]++;
    var t = [];
    for (var s = 0; u[s]; s++) 
      {
        if (u[s].nodeType === 1) 
        {
          tiny_mce_js_exec_counter[2795]++;
          t.push(u[s]);
        }
      }
    tiny_mce_js_exec_counter[2796]++;
    u = t;
  }
  tiny_mce_js_exec_counter[2797]++;
  return u;
};
  }
  tiny_mce_js_exec_counter[2798]++;
  e.innerHTML = "<a href='#'></a>";
  if (e.firstChild && typeof e.firstChild.getAttribute !== "undefined" && e.firstChild.getAttribute("href") !== "#") 
  {
    tiny_mce_js_exec_counter[2799]++;
    f.attrHandle.href = function(r) {
  tiny_mce_js_exec_counter[2800]++;
  tiny_mce_js_exec_counter[2801]++;
  return r.getAttribute("href", 2);
};
  }
  tiny_mce_js_exec_counter[2802]++;
  e = null;
  tiny_mce_js_exec_counter[2785]++;
})();
  if (document.querySelectorAll) 
  {
    tiny_mce_js_exec_counter[2803]++;
    (function() {
  tiny_mce_js_exec_counter[2804]++;
  tiny_mce_js_exec_counter[2806]++;
  var e = b, s = document.createElement("div");
  tiny_mce_js_exec_counter[2808]++;
  s.innerHTML = "<p class='TEST'></p>";
  if (s.querySelectorAll && s.querySelectorAll(".TEST").length === 0) 
  {
    tiny_mce_js_exec_counter[2809]++;
    return;
  }
  tiny_mce_js_exec_counter[2810]++;
  b = function(x, v, t, u) {
  tiny_mce_js_exec_counter[2811]++;
  tiny_mce_js_exec_counter[2812]++;
  v = v || document;
  if (!u && v.nodeType === 9 && !b.isXML(v)) 
  {
    try {
      tiny_mce_js_exec_counter[2813]++;
      return a(v.querySelectorAll(x), t);
    }    catch (y) {
}
  }
  tiny_mce_js_exec_counter[2814]++;
  return e(x, v, t, u);
};
  for (var r in e) 
    {
      tiny_mce_js_exec_counter[2816]++;
      b[r] = e[r];
    }
  tiny_mce_js_exec_counter[2817]++;
  s = null;
  tiny_mce_js_exec_counter[2805]++;
})();
  }
  tiny_mce_js_exec_counter[2818]++;
  (function() {
  tiny_mce_js_exec_counter[2819]++;
  tiny_mce_js_exec_counter[2821]++;
  var e = document.createElement("div");
  tiny_mce_js_exec_counter[2823]++;
  e.innerHTML = "<div class='test e'></div><div class='test'></div>";
  if (!e.getElementsByClassName || e.getElementsByClassName("e").length === 0) 
  {
    tiny_mce_js_exec_counter[2824]++;
    return;
  }
  tiny_mce_js_exec_counter[2825]++;
  e.lastChild.className = "e";
  if (e.getElementsByClassName("e").length === 1) 
  {
    tiny_mce_js_exec_counter[2826]++;
    return;
  }
  tiny_mce_js_exec_counter[2827]++;
  f.order.splice(1, 0, "CLASS");
  tiny_mce_js_exec_counter[2828]++;
  f.find.CLASS = function(r, s, t) {
  tiny_mce_js_exec_counter[2829]++;
  if (typeof s.getElementsByClassName !== "undefined" && !t) 
  {
    tiny_mce_js_exec_counter[2831]++;
    return s.getElementsByClassName(r[1]);
  }
  tiny_mce_js_exec_counter[2830]++;
};
  tiny_mce_js_exec_counter[2832]++;
  e = null;
  tiny_mce_js_exec_counter[2820]++;
})();
  function n(r, x, v, A, y, z) {
    tiny_mce_js_exec_counter[2833]++;
    for (var t = 0, s = A.length; t < s; t++) 
      {
        tiny_mce_js_exec_counter[2835]++;
        var e = A[t];
        if (e) 
        {
          tiny_mce_js_exec_counter[2837]++;
          e = e[r];
          tiny_mce_js_exec_counter[2838]++;
          var u = false;
          while (e) 
            {
              if (e.sizcache === v) 
              {
                tiny_mce_js_exec_counter[2840]++;
                u = A[e.sizset];
                tiny_mce_js_exec_counter[2841]++;
                break;
              }
              if (e.nodeType === 1 && !z) 
              {
                tiny_mce_js_exec_counter[2842]++;
                e.sizcache = v;
                tiny_mce_js_exec_counter[2843]++;
                e.sizset = t;
              }
              if (e.nodeName.toLowerCase() === x) 
              {
                tiny_mce_js_exec_counter[2844]++;
                u = e;
                tiny_mce_js_exec_counter[2845]++;
                break;
              }
              tiny_mce_js_exec_counter[2846]++;
              e = e[r];
            }
          tiny_mce_js_exec_counter[2847]++;
          A[t] = u;
        }
      }
    tiny_mce_js_exec_counter[2834]++;
  }
  function q(r, x, v, A, y, z) {
    tiny_mce_js_exec_counter[2848]++;
    for (var t = 0, s = A.length; t < s; t++) 
      {
        tiny_mce_js_exec_counter[2850]++;
        var e = A[t];
        if (e) 
        {
          tiny_mce_js_exec_counter[2852]++;
          e = e[r];
          tiny_mce_js_exec_counter[2853]++;
          var u = false;
          while (e) 
            {
              if (e.sizcache === v) 
              {
                tiny_mce_js_exec_counter[2855]++;
                u = A[e.sizset];
                tiny_mce_js_exec_counter[2856]++;
                break;
              }
              if (e.nodeType === 1) 
              {
                if (!z) 
                {
                  tiny_mce_js_exec_counter[2857]++;
                  e.sizcache = v;
                  tiny_mce_js_exec_counter[2858]++;
                  e.sizset = t;
                }
                if (typeof x !== "string") 
                {
                  if (e === x) 
                  {
                    tiny_mce_js_exec_counter[2859]++;
                    u = true;
                    tiny_mce_js_exec_counter[2860]++;
                    break;
                  }
                } else {
                  if (b.filter(x, [e]).length > 0) 
                  {
                    tiny_mce_js_exec_counter[2861]++;
                    u = e;
                    tiny_mce_js_exec_counter[2862]++;
                    break;
                  }
                }
              }
              tiny_mce_js_exec_counter[2863]++;
              e = e[r];
            }
          tiny_mce_js_exec_counter[2864]++;
          A[t] = u;
        }
      }
    tiny_mce_js_exec_counter[2849]++;
  }
  tiny_mce_js_exec_counter[2865]++;
  b.contains = document.compareDocumentPosition ? function(r, e) {
  tiny_mce_js_exec_counter[2866]++;
  tiny_mce_js_exec_counter[2867]++;
  return !!(r.compareDocumentPosition(e) & 16);
} : function(r, e) {
  tiny_mce_js_exec_counter[2868]++;
  tiny_mce_js_exec_counter[2869]++;
  return r !== e && (r.contains ? r.contains(e) : true);
};
  tiny_mce_js_exec_counter[2870]++;
  b.isXML = function(e) {
  tiny_mce_js_exec_counter[2871]++;
  tiny_mce_js_exec_counter[2872]++;
  var r = (e ? e.ownerDocument || e : 0).documentElement;
  tiny_mce_js_exec_counter[2874]++;
  return r ? r.nodeName !== "HTML" : false;
};
  tiny_mce_js_exec_counter[2875]++;
  var h = function(e, y) {
  tiny_mce_js_exec_counter[2877]++;
  tiny_mce_js_exec_counter[2878]++;
  var t = [], u = "", v, s = y.nodeType ? [y] : y;
  while ((v = f.match.PSEUDO.exec(e))) 
    {
      tiny_mce_js_exec_counter[2880]++;
      u += v[0];
      tiny_mce_js_exec_counter[2881]++;
      e = e.replace(f.match.PSEUDO, "");
    }
  tiny_mce_js_exec_counter[2882]++;
  e = f.relative[e] ? e + "*" : e;
  for (var x = 0, r = s.length; x < r; x++) 
    {
      tiny_mce_js_exec_counter[2883]++;
      b(e, s[x], t);
    }
  tiny_mce_js_exec_counter[2884]++;
  return b.filter(u, t);
};
  tiny_mce_js_exec_counter[2885]++;
  window.tinymce.dom.Sizzle = b;
  tiny_mce_js_exec_counter[2402]++;
})();
tiny_mce_js_exec_counter[2886]++;
(function(d) {
  tiny_mce_js_exec_counter[2887]++;
  tiny_mce_js_exec_counter[2889]++;
  var f = d.each, c = d.DOM, b = d.isIE, e = d.isWebKit, a;
  tiny_mce_js_exec_counter[2891]++;
  d.create("tinymce.dom.EventUtils", {EventUtils: function() {
  tiny_mce_js_exec_counter[2892]++;
  tiny_mce_js_exec_counter[2894]++;
  this.inits = [];
  tiny_mce_js_exec_counter[2895]++;
  this.events = [];
  tiny_mce_js_exec_counter[2893]++;
}, add: function(m, p, l, j) {
  tiny_mce_js_exec_counter[2896]++;
  tiny_mce_js_exec_counter[2897]++;
  var g, h = this, i = h.events, k;
  if (p instanceof Array) 
  {
    tiny_mce_js_exec_counter[2899]++;
    k = [];
    tiny_mce_js_exec_counter[2900]++;
    f(p, function(o) {
  tiny_mce_js_exec_counter[2901]++;
  tiny_mce_js_exec_counter[2903]++;
  k.push(h.add(m, o, l, j));
  tiny_mce_js_exec_counter[2902]++;
});
    tiny_mce_js_exec_counter[2904]++;
    return k;
  }
  if (m && m.hasOwnProperty && m instanceof Array) 
  {
    tiny_mce_js_exec_counter[2905]++;
    k = [];
    tiny_mce_js_exec_counter[2906]++;
    f(m, function(n) {
  tiny_mce_js_exec_counter[2907]++;
  tiny_mce_js_exec_counter[2909]++;
  n = c.get(n);
  tiny_mce_js_exec_counter[2910]++;
  k.push(h.add(n, p, l, j));
  tiny_mce_js_exec_counter[2908]++;
});
    tiny_mce_js_exec_counter[2911]++;
    return k;
  }
  tiny_mce_js_exec_counter[2912]++;
  m = c.get(m);
  if (!m) 
  {
    tiny_mce_js_exec_counter[2913]++;
    return;
  }
  tiny_mce_js_exec_counter[2914]++;
  g = function(n) {
  tiny_mce_js_exec_counter[2915]++;
  if (h.disabled) 
  {
    tiny_mce_js_exec_counter[2916]++;
    return;
  }
  tiny_mce_js_exec_counter[2917]++;
  n = n || window.event;
  if (n && b) 
  {
    if (!n.target) 
    {
      tiny_mce_js_exec_counter[2918]++;
      n.target = n.srcElement;
    }
    tiny_mce_js_exec_counter[2919]++;
    d.extend(n, h._stoppers);
  }
  if (!j) 
  {
    tiny_mce_js_exec_counter[2920]++;
    return l(n);
  }
  tiny_mce_js_exec_counter[2921]++;
  return l.call(j, n);
};
  if (p == "unload") 
  {
    tiny_mce_js_exec_counter[2922]++;
    d.unloads.unshift({func: g});
    tiny_mce_js_exec_counter[2923]++;
    return g;
  }
  if (p == "init") 
  {
    if (h.domLoaded) 
    {
      tiny_mce_js_exec_counter[2924]++;
      g();
    } else {
      tiny_mce_js_exec_counter[2925]++;
      h.inits.push(g);
    }
    tiny_mce_js_exec_counter[2926]++;
    return g;
  }
  tiny_mce_js_exec_counter[2927]++;
  i.push({obj: m, name: p, func: l, cfunc: g, scope: j});
  tiny_mce_js_exec_counter[2928]++;
  h._add(m, p, g);
  tiny_mce_js_exec_counter[2929]++;
  return l;
}, remove: function(l, m, k) {
  tiny_mce_js_exec_counter[2930]++;
  tiny_mce_js_exec_counter[2931]++;
  var h = this, g = h.events, i = false, j;
  if (l && l.hasOwnProperty && l instanceof Array) 
  {
    tiny_mce_js_exec_counter[2933]++;
    j = [];
    tiny_mce_js_exec_counter[2934]++;
    f(l, function(n) {
  tiny_mce_js_exec_counter[2935]++;
  tiny_mce_js_exec_counter[2937]++;
  n = c.get(n);
  tiny_mce_js_exec_counter[2938]++;
  j.push(h.remove(n, m, k));
  tiny_mce_js_exec_counter[2936]++;
});
    tiny_mce_js_exec_counter[2939]++;
    return j;
  }
  tiny_mce_js_exec_counter[2940]++;
  l = c.get(l);
  tiny_mce_js_exec_counter[2941]++;
  f(g, function(o, n) {
  tiny_mce_js_exec_counter[2942]++;
  if (o.obj == l && o.name == m && (!k || (o.func == k || o.cfunc == k))) 
  {
    tiny_mce_js_exec_counter[2944]++;
    g.splice(n, 1);
    tiny_mce_js_exec_counter[2945]++;
    h._remove(l, m, o.cfunc);
    tiny_mce_js_exec_counter[2946]++;
    i = true;
    tiny_mce_js_exec_counter[2947]++;
    return false;
  }
  tiny_mce_js_exec_counter[2943]++;
});
  tiny_mce_js_exec_counter[2948]++;
  return i;
}, clear: function(l) {
  tiny_mce_js_exec_counter[2949]++;
  tiny_mce_js_exec_counter[2951]++;
  var j = this, g = j.events, h, k;
  if (l) 
  {
    tiny_mce_js_exec_counter[2953]++;
    l = c.get(l);
    for (h = g.length - 1; h >= 0; h--) 
      {
        tiny_mce_js_exec_counter[2954]++;
        k = g[h];
        if (k.obj === l) 
        {
          tiny_mce_js_exec_counter[2955]++;
          j._remove(k.obj, k.name, k.cfunc);
          tiny_mce_js_exec_counter[2956]++;
          k.obj = k.cfunc = null;
          tiny_mce_js_exec_counter[2957]++;
          g.splice(h, 1);
        }
      }
  }
  tiny_mce_js_exec_counter[2950]++;
}, cancel: function(g) {
  tiny_mce_js_exec_counter[2958]++;
  if (!g) 
  {
    tiny_mce_js_exec_counter[2959]++;
    return false;
  }
  tiny_mce_js_exec_counter[2960]++;
  this.stop(g);
  tiny_mce_js_exec_counter[2961]++;
  return this.prevent(g);
}, stop: function(g) {
  tiny_mce_js_exec_counter[2962]++;
  if (g.stopPropagation) 
  {
    tiny_mce_js_exec_counter[2963]++;
    g.stopPropagation();
  } else {
    tiny_mce_js_exec_counter[2964]++;
    g.cancelBubble = true;
  }
  tiny_mce_js_exec_counter[2965]++;
  return false;
}, prevent: function(g) {
  tiny_mce_js_exec_counter[2966]++;
  if (g.preventDefault) 
  {
    tiny_mce_js_exec_counter[2967]++;
    g.preventDefault();
  } else {
    tiny_mce_js_exec_counter[2968]++;
    g.returnValue = false;
  }
  tiny_mce_js_exec_counter[2969]++;
  return false;
}, destroy: function() {
  tiny_mce_js_exec_counter[2970]++;
  tiny_mce_js_exec_counter[2972]++;
  var g = this;
  tiny_mce_js_exec_counter[2974]++;
  f(g.events, function(j, h) {
  tiny_mce_js_exec_counter[2975]++;
  tiny_mce_js_exec_counter[2977]++;
  g._remove(j.obj, j.name, j.cfunc);
  tiny_mce_js_exec_counter[2978]++;
  j.obj = j.cfunc = null;
  tiny_mce_js_exec_counter[2976]++;
});
  tiny_mce_js_exec_counter[2979]++;
  g.events = [];
  tiny_mce_js_exec_counter[2980]++;
  g = null;
  tiny_mce_js_exec_counter[2971]++;
}, _add: function(h, i, g) {
  tiny_mce_js_exec_counter[2981]++;
  if (h.attachEvent) 
  {
    tiny_mce_js_exec_counter[2983]++;
    h.attachEvent("on" + i, g);
  } else {
    if (h.addEventListener) 
    {
      tiny_mce_js_exec_counter[2984]++;
      h.addEventListener(i, g, false);
    } else {
      tiny_mce_js_exec_counter[2985]++;
      h["on" + i] = g;
    }
  }
  tiny_mce_js_exec_counter[2982]++;
}, _remove: function(i, j, h) {
  tiny_mce_js_exec_counter[2986]++;
  if (i) 
  {
    try {
      if (i.detachEvent) 
      {
        tiny_mce_js_exec_counter[2988]++;
        i.detachEvent("on" + j, h);
      } else {
        if (i.removeEventListener) 
        {
          tiny_mce_js_exec_counter[2989]++;
          i.removeEventListener(j, h, false);
        } else {
          tiny_mce_js_exec_counter[2990]++;
          i["on" + j] = null;
        }
      }
    }    catch (g) {
}
  }
  tiny_mce_js_exec_counter[2987]++;
}, _pageInit: function(h) {
  tiny_mce_js_exec_counter[2991]++;
  tiny_mce_js_exec_counter[2993]++;
  var g = this;
  if (g.domLoaded) 
  {
    tiny_mce_js_exec_counter[2995]++;
    return;
  }
  tiny_mce_js_exec_counter[2996]++;
  g.domLoaded = true;
  tiny_mce_js_exec_counter[2997]++;
  f(g.inits, function(i) {
  tiny_mce_js_exec_counter[2998]++;
  tiny_mce_js_exec_counter[3000]++;
  i();
  tiny_mce_js_exec_counter[2999]++;
});
  tiny_mce_js_exec_counter[3001]++;
  g.inits = [];
  tiny_mce_js_exec_counter[2992]++;
}, _wait: function(i) {
  tiny_mce_js_exec_counter[3002]++;
  tiny_mce_js_exec_counter[3004]++;
  var g = this, h = i.document;
  if (i.tinyMCE_GZ && tinyMCE_GZ.loaded) 
  {
    tiny_mce_js_exec_counter[3006]++;
    g.domLoaded = 1;
    tiny_mce_js_exec_counter[3007]++;
    return;
  }
  if (h.attachEvent) 
  {
    tiny_mce_js_exec_counter[3008]++;
    h.attachEvent("onreadystatechange", function() {
  tiny_mce_js_exec_counter[3009]++;
  if (h.readyState === "complete") 
  {
    tiny_mce_js_exec_counter[3011]++;
    h.detachEvent("onreadystatechange", arguments.callee);
    tiny_mce_js_exec_counter[3012]++;
    g._pageInit(i);
  }
  tiny_mce_js_exec_counter[3010]++;
});
    if (h.documentElement.doScroll && i == i.top) 
    {
      tiny_mce_js_exec_counter[3013]++;
      (function() {
  tiny_mce_js_exec_counter[3014]++;
  if (g.domLoaded) 
  {
    tiny_mce_js_exec_counter[3016]++;
    return;
  }
  try {
    tiny_mce_js_exec_counter[3017]++;
    h.documentElement.doScroll("left");
  }  catch (j) {
  tiny_mce_js_exec_counter[3018]++;
  setTimeout(arguments.callee, 0);
  tiny_mce_js_exec_counter[3019]++;
  return;
}
  tiny_mce_js_exec_counter[3020]++;
  g._pageInit(i);
  tiny_mce_js_exec_counter[3015]++;
})();
    }
  } else {
    if (h.addEventListener) 
    {
      tiny_mce_js_exec_counter[3021]++;
      g._add(i, "DOMContentLoaded", function() {
  tiny_mce_js_exec_counter[3022]++;
  tiny_mce_js_exec_counter[3024]++;
  g._pageInit(i);
  tiny_mce_js_exec_counter[3023]++;
});
    }
  }
  tiny_mce_js_exec_counter[3025]++;
  g._add(i, "load", function() {
  tiny_mce_js_exec_counter[3026]++;
  tiny_mce_js_exec_counter[3028]++;
  g._pageInit(i);
  tiny_mce_js_exec_counter[3027]++;
});
  tiny_mce_js_exec_counter[3003]++;
}, _stoppers: {preventDefault: function() {
  tiny_mce_js_exec_counter[3029]++;
  tiny_mce_js_exec_counter[3031]++;
  this.returnValue = false;
  tiny_mce_js_exec_counter[3030]++;
}, stopPropagation: function() {
  tiny_mce_js_exec_counter[3032]++;
  tiny_mce_js_exec_counter[3034]++;
  this.cancelBubble = true;
  tiny_mce_js_exec_counter[3033]++;
}}});
  tiny_mce_js_exec_counter[3035]++;
  a = d.dom.Event = new d.dom.EventUtils();
  tiny_mce_js_exec_counter[3036]++;
  a._wait(window);
  tiny_mce_js_exec_counter[3037]++;
  d.addUnload(function() {
  tiny_mce_js_exec_counter[3038]++;
  tiny_mce_js_exec_counter[3040]++;
  a.destroy();
  tiny_mce_js_exec_counter[3039]++;
});
  tiny_mce_js_exec_counter[2888]++;
})(tinymce);
tiny_mce_js_exec_counter[3041]++;
(function(a) {
  tiny_mce_js_exec_counter[3042]++;
  tiny_mce_js_exec_counter[3044]++;
  a.dom.Element = function(f, d) {
  tiny_mce_js_exec_counter[3045]++;
  tiny_mce_js_exec_counter[3047]++;
  var b = this, e, c;
  tiny_mce_js_exec_counter[3049]++;
  b.settings = d = d || {};
  tiny_mce_js_exec_counter[3050]++;
  b.id = f;
  tiny_mce_js_exec_counter[3051]++;
  b.dom = e = d.dom || a.DOM;
  if (!a.isIE) 
  {
    tiny_mce_js_exec_counter[3052]++;
    c = e.get(b.id);
  }
  tiny_mce_js_exec_counter[3053]++;
  a.each(("getPos,getRect,getParent,add,setStyle,getStyle,setStyles,setAttrib,setAttribs,getAttrib,addClass,removeClass,hasClass,getOuterHTML,setOuterHTML,remove,show,hide,isHidden,setHTML,get").split(/,/), function(g) {
  tiny_mce_js_exec_counter[3054]++;
  tiny_mce_js_exec_counter[3056]++;
  b[g] = function() {
  tiny_mce_js_exec_counter[3057]++;
  tiny_mce_js_exec_counter[3058]++;
  var h = [f], j;
  for (j = 0; j < arguments.length; j++) 
    {
      tiny_mce_js_exec_counter[3060]++;
      h.push(arguments[j]);
    }
  tiny_mce_js_exec_counter[3061]++;
  h = e[g].apply(e, h);
  tiny_mce_js_exec_counter[3062]++;
  b.update(g);
  tiny_mce_js_exec_counter[3063]++;
  return h;
};
  tiny_mce_js_exec_counter[3055]++;
});
  tiny_mce_js_exec_counter[3064]++;
  a.extend(b, {on: function(i, h, g) {
  tiny_mce_js_exec_counter[3065]++;
  tiny_mce_js_exec_counter[3066]++;
  return a.dom.Event.add(b.id, i, h, g);
}, getXY: function() {
  tiny_mce_js_exec_counter[3067]++;
  tiny_mce_js_exec_counter[3068]++;
  return {x: parseInt(b.getStyle("left")), y: parseInt(b.getStyle("top"))};
}, getSize: function() {
  tiny_mce_js_exec_counter[3069]++;
  tiny_mce_js_exec_counter[3070]++;
  var g = e.get(b.id);
  tiny_mce_js_exec_counter[3072]++;
  return {w: parseInt(b.getStyle("width") || g.clientWidth), h: parseInt(b.getStyle("height") || g.clientHeight)};
}, moveTo: function(g, h) {
  tiny_mce_js_exec_counter[3073]++;
  tiny_mce_js_exec_counter[3075]++;
  b.setStyles({left: g, top: h});
  tiny_mce_js_exec_counter[3074]++;
}, moveBy: function(g, i) {
  tiny_mce_js_exec_counter[3076]++;
  tiny_mce_js_exec_counter[3078]++;
  var h = b.getXY();
  tiny_mce_js_exec_counter[3080]++;
  b.moveTo(h.x + g, h.y + i);
  tiny_mce_js_exec_counter[3077]++;
}, resizeTo: function(g, i) {
  tiny_mce_js_exec_counter[3081]++;
  tiny_mce_js_exec_counter[3083]++;
  b.setStyles({width: g, height: i});
  tiny_mce_js_exec_counter[3082]++;
}, resizeBy: function(g, j) {
  tiny_mce_js_exec_counter[3084]++;
  tiny_mce_js_exec_counter[3086]++;
  var i = b.getSize();
  tiny_mce_js_exec_counter[3088]++;
  b.resizeTo(i.w + g, i.h + j);
  tiny_mce_js_exec_counter[3085]++;
}, update: function(h) {
  tiny_mce_js_exec_counter[3089]++;
  tiny_mce_js_exec_counter[3091]++;
  var g;
  if (a.isIE6 && d.blocker) 
  {
    tiny_mce_js_exec_counter[3093]++;
    h = h || "";
    if (h.indexOf("get") === 0 || h.indexOf("has") === 0 || h.indexOf("is") === 0) 
    {
      tiny_mce_js_exec_counter[3094]++;
      return;
    }
    if (h == "remove") 
    {
      tiny_mce_js_exec_counter[3095]++;
      e.remove(b.blocker);
      tiny_mce_js_exec_counter[3096]++;
      return;
    }
    if (!b.blocker) 
    {
      tiny_mce_js_exec_counter[3097]++;
      b.blocker = e.uniqueId();
      tiny_mce_js_exec_counter[3098]++;
      g = e.add(d.container || e.getRoot(), "iframe", {id: b.blocker, style: "position:absolute;", frameBorder: 0, src: 'javascript:""'});
      tiny_mce_js_exec_counter[3099]++;
      e.setStyle(g, "opacity", 0);
    } else {
      tiny_mce_js_exec_counter[3100]++;
      g = e.get(b.blocker);
    }
    tiny_mce_js_exec_counter[3101]++;
    e.setStyles(g, {left: b.getStyle("left", 1), top: b.getStyle("top", 1), width: b.getStyle("width", 1), height: b.getStyle("height", 1), display: b.getStyle("display", 1), zIndex: parseInt(b.getStyle("zIndex", 1) || 0) - 1});
  }
  tiny_mce_js_exec_counter[3090]++;
}});
  tiny_mce_js_exec_counter[3046]++;
};
  tiny_mce_js_exec_counter[3043]++;
})(tinymce);
tiny_mce_js_exec_counter[3102]++;
(function(c) {
  tiny_mce_js_exec_counter[3103]++;
  function e(f) {
    tiny_mce_js_exec_counter[3105]++;
    tiny_mce_js_exec_counter[3106]++;
    return f.replace(/[\n\r]+/g, "");
  }
  tiny_mce_js_exec_counter[3107]++;
  var b = c.is, a = c.isIE, d = c.each;
  tiny_mce_js_exec_counter[3109]++;
  c.create("tinymce.dom.Selection", {Selection: function(i, h, g) {
  tiny_mce_js_exec_counter[3110]++;
  tiny_mce_js_exec_counter[3112]++;
  var f = this;
  tiny_mce_js_exec_counter[3114]++;
  f.dom = i;
  tiny_mce_js_exec_counter[3115]++;
  f.win = h;
  tiny_mce_js_exec_counter[3116]++;
  f.serializer = g;
  tiny_mce_js_exec_counter[3117]++;
  d(["onBeforeSetContent", "onBeforeGetContent", "onSetContent", "onGetContent"], function(j) {
  tiny_mce_js_exec_counter[3118]++;
  tiny_mce_js_exec_counter[3120]++;
  f[j] = new c.util.Dispatcher(f);
  tiny_mce_js_exec_counter[3119]++;
});
  if (!f.win.getSelection) 
  {
    tiny_mce_js_exec_counter[3121]++;
    f.tridentSel = new c.dom.TridentSelection(f);
  }
  if (c.isIE && i.boxModel) 
  {
    tiny_mce_js_exec_counter[3122]++;
    this._fixIESelection();
  }
  tiny_mce_js_exec_counter[3123]++;
  c.addUnload(f.destroy, f);
  tiny_mce_js_exec_counter[3111]++;
}, getContent: function(g) {
  tiny_mce_js_exec_counter[3124]++;
  tiny_mce_js_exec_counter[3125]++;
  var f = this, h = f.getRng(), l = f.dom.create("body"), j = f.getSel(), i, k, m;
  tiny_mce_js_exec_counter[3127]++;
  g = g || {};
  tiny_mce_js_exec_counter[3128]++;
  i = k = "";
  tiny_mce_js_exec_counter[3129]++;
  g.get = true;
  tiny_mce_js_exec_counter[3130]++;
  g.format = g.format || "html";
  tiny_mce_js_exec_counter[3131]++;
  f.onBeforeGetContent.dispatch(f, g);
  if (g.format == "text") 
  {
    tiny_mce_js_exec_counter[3132]++;
    return f.isCollapsed() ? "" : (h.text || (j.toString ? j.toString() : ""));
  }
  if (h.cloneContents) 
  {
    tiny_mce_js_exec_counter[3133]++;
    m = h.cloneContents();
    if (m) 
    {
      tiny_mce_js_exec_counter[3134]++;
      l.appendChild(m);
    }
  } else {
    if (b(h.item) || b(h.htmlText)) 
    {
      tiny_mce_js_exec_counter[3135]++;
      l.innerHTML = h.item ? h.item(0).outerHTML : h.htmlText;
    } else {
      tiny_mce_js_exec_counter[3136]++;
      l.innerHTML = h.toString();
    }
  }
  if (/^\s/.test(l.innerHTML)) 
  {
    tiny_mce_js_exec_counter[3137]++;
    i = " ";
  }
  if (/\s+$/.test(l.innerHTML)) 
  {
    tiny_mce_js_exec_counter[3138]++;
    k = " ";
  }
  tiny_mce_js_exec_counter[3139]++;
  g.getInner = true;
  tiny_mce_js_exec_counter[3140]++;
  g.content = f.isCollapsed() ? "" : i + f.serializer.serialize(l, g) + k;
  tiny_mce_js_exec_counter[3141]++;
  f.onGetContent.dispatch(f, g);
  tiny_mce_js_exec_counter[3142]++;
  return g.content;
}, setContent: function(k, j) {
  tiny_mce_js_exec_counter[3143]++;
  tiny_mce_js_exec_counter[3145]++;
  var h = this, f = h.getRng(), i, l = h.win.document, m, g;
  tiny_mce_js_exec_counter[3147]++;
  j = j || {format: "html"};
  tiny_mce_js_exec_counter[3148]++;
  j.set = true;
  tiny_mce_js_exec_counter[3149]++;
  k = j.content = k;
  if (!j.no_events) 
  {
    tiny_mce_js_exec_counter[3150]++;
    h.onBeforeSetContent.dispatch(h, j);
  }
  tiny_mce_js_exec_counter[3151]++;
  k = j.content;
  if (f.insertNode) 
  {
    tiny_mce_js_exec_counter[3152]++;
    k += '<span id="__caret">_</span>';
    if (f.startContainer == l && f.endContainer == l) 
    {
      tiny_mce_js_exec_counter[3153]++;
      l.body.innerHTML = k;
    } else {
      tiny_mce_js_exec_counter[3154]++;
      f.deleteContents();
      if (l.body.childNodes.length == 0) 
      {
        tiny_mce_js_exec_counter[3155]++;
        l.body.innerHTML = k;
      } else {
        if (f.createContextualFragment) 
        {
          tiny_mce_js_exec_counter[3156]++;
          f.insertNode(f.createContextualFragment(k));
        } else {
          tiny_mce_js_exec_counter[3157]++;
          m = l.createDocumentFragment();
          tiny_mce_js_exec_counter[3158]++;
          g = l.createElement("div");
          tiny_mce_js_exec_counter[3159]++;
          m.appendChild(g);
          tiny_mce_js_exec_counter[3160]++;
          g.outerHTML = k;
          tiny_mce_js_exec_counter[3161]++;
          f.insertNode(m);
        }
      }
    }
    tiny_mce_js_exec_counter[3162]++;
    i = h.dom.get("__caret");
    tiny_mce_js_exec_counter[3163]++;
    f = l.createRange();
    tiny_mce_js_exec_counter[3164]++;
    f.setStartBefore(i);
    tiny_mce_js_exec_counter[3165]++;
    f.setEndBefore(i);
    tiny_mce_js_exec_counter[3166]++;
    h.setRng(f);
    tiny_mce_js_exec_counter[3167]++;
    h.dom.remove("__caret");
    tiny_mce_js_exec_counter[3168]++;
    h.setRng(f);
  } else {
    if (f.item) 
    {
      tiny_mce_js_exec_counter[3169]++;
      l.execCommand("Delete", false, null);
      tiny_mce_js_exec_counter[3170]++;
      f = h.getRng();
    }
    tiny_mce_js_exec_counter[3171]++;
    f.pasteHTML(k);
  }
  if (!j.no_events) 
  {
    tiny_mce_js_exec_counter[3172]++;
    h.onSetContent.dispatch(h, j);
  }
  tiny_mce_js_exec_counter[3144]++;
}, getStart: function() {
  tiny_mce_js_exec_counter[3173]++;
  tiny_mce_js_exec_counter[3175]++;
  var g = this.getRng(), h, f, j, i;
  if (g.duplicate || g.item) 
  {
    if (g.item) 
    {
      tiny_mce_js_exec_counter[3177]++;
      return g.item(0);
    }
    tiny_mce_js_exec_counter[3178]++;
    j = g.duplicate();
    tiny_mce_js_exec_counter[3179]++;
    j.collapse(1);
    tiny_mce_js_exec_counter[3180]++;
    h = j.parentElement();
    tiny_mce_js_exec_counter[3181]++;
    f = i = g.parentElement();
    while (i = i.parentNode) 
      {
        if (i == h) 
        {
          tiny_mce_js_exec_counter[3182]++;
          h = f;
          tiny_mce_js_exec_counter[3183]++;
          break;
        }
      }
    tiny_mce_js_exec_counter[3184]++;
    return h;
  } else {
    tiny_mce_js_exec_counter[3185]++;
    h = g.startContainer;
    if (h.nodeType == 1 && h.hasChildNodes()) 
    {
      tiny_mce_js_exec_counter[3186]++;
      h = h.childNodes[Math.min(h.childNodes.length - 1, g.startOffset)];
    }
    if (h && h.nodeType == 3) 
    {
      tiny_mce_js_exec_counter[3187]++;
      return h.parentNode;
    }
    tiny_mce_js_exec_counter[3188]++;
    return h;
  }
  tiny_mce_js_exec_counter[3174]++;
}, getEnd: function() {
  tiny_mce_js_exec_counter[3189]++;
  tiny_mce_js_exec_counter[3191]++;
  var g = this, h = g.getRng(), i, f;
  if (h.duplicate || h.item) 
  {
    if (h.item) 
    {
      tiny_mce_js_exec_counter[3193]++;
      return h.item(0);
    }
    tiny_mce_js_exec_counter[3194]++;
    h = h.duplicate();
    tiny_mce_js_exec_counter[3195]++;
    h.collapse(0);
    tiny_mce_js_exec_counter[3196]++;
    i = h.parentElement();
    if (i && i.nodeName == "BODY") 
    {
      tiny_mce_js_exec_counter[3197]++;
      return i.lastChild || i;
    }
    tiny_mce_js_exec_counter[3198]++;
    return i;
  } else {
    tiny_mce_js_exec_counter[3199]++;
    i = h.endContainer;
    tiny_mce_js_exec_counter[3200]++;
    f = h.endOffset;
    if (i.nodeType == 1 && i.hasChildNodes()) 
    {
      tiny_mce_js_exec_counter[3201]++;
      i = i.childNodes[f > 0 ? f - 1 : f];
    }
    if (i && i.nodeType == 3) 
    {
      tiny_mce_js_exec_counter[3202]++;
      return i.parentNode;
    }
    tiny_mce_js_exec_counter[3203]++;
    return i;
  }
  tiny_mce_js_exec_counter[3190]++;
}, getBookmark: function(r, s) {
  tiny_mce_js_exec_counter[3204]++;
  tiny_mce_js_exec_counter[3205]++;
  var v = this, m = v.dom, g, j, i, n, h, o, p, l = "\ufeff", u;
  function f(x, y) {
    tiny_mce_js_exec_counter[3207]++;
    tiny_mce_js_exec_counter[3208]++;
    var t = 0;
    tiny_mce_js_exec_counter[3210]++;
    d(m.select(x), function(A, z) {
  tiny_mce_js_exec_counter[3211]++;
  if (A == y) 
  {
    tiny_mce_js_exec_counter[3213]++;
    t = z;
  }
  tiny_mce_js_exec_counter[3212]++;
});
    tiny_mce_js_exec_counter[3214]++;
    return t;
  }
  if (r == 2) 
  {
    function k() {
      tiny_mce_js_exec_counter[3215]++;
      tiny_mce_js_exec_counter[3216]++;
      var x = v.getRng(true), t = m.getRoot(), y = {};
      function z(C, H) {
        tiny_mce_js_exec_counter[3218]++;
        tiny_mce_js_exec_counter[3219]++;
        var B = C[H ? "startContainer" : "endContainer"], G = C[H ? "startOffset" : "endOffset"], A = [], D, F, E = 0;
        if (B.nodeType == 3) 
        {
          if (s) 
          {
            for (D = B.previousSibling; D && D.nodeType == 3; D = D.previousSibling) 
              {
                tiny_mce_js_exec_counter[3221]++;
                G += D.nodeValue.length;
              }
          }
          tiny_mce_js_exec_counter[3222]++;
          A.push(G);
        } else {
          tiny_mce_js_exec_counter[3223]++;
          F = B.childNodes;
          if (G >= F.length && F.length) 
          {
            tiny_mce_js_exec_counter[3224]++;
            E = 1;
            tiny_mce_js_exec_counter[3225]++;
            G = Math.max(0, F.length - 1);
          }
          tiny_mce_js_exec_counter[3226]++;
          A.push(v.dom.nodeIndex(F[G], s) + E);
        }
        for (; B && B != t; B = B.parentNode) 
          {
            tiny_mce_js_exec_counter[3227]++;
            A.push(v.dom.nodeIndex(B, s));
          }
        tiny_mce_js_exec_counter[3228]++;
        return A;
      }
      tiny_mce_js_exec_counter[3229]++;
      y.start = z(x, true);
      if (!v.isCollapsed()) 
      {
        tiny_mce_js_exec_counter[3230]++;
        y.end = z(x);
      }
      tiny_mce_js_exec_counter[3231]++;
      return y;
    }    tiny_mce_js_exec_counter[3232]++;
    return k();
  }
  if (r) 
  {
    tiny_mce_js_exec_counter[3233]++;
    return {rng: v.getRng()};
  }
  tiny_mce_js_exec_counter[3234]++;
  g = v.getRng();
  tiny_mce_js_exec_counter[3235]++;
  i = m.uniqueId();
  tiny_mce_js_exec_counter[3236]++;
  n = tinyMCE.activeEditor.selection.isCollapsed();
  tiny_mce_js_exec_counter[3237]++;
  u = "overflow:hidden;line-height:0px";
  if (g.duplicate || g.item) 
  {
    if (!g.item) 
    {
      tiny_mce_js_exec_counter[3238]++;
      j = g.duplicate();
      try {
        tiny_mce_js_exec_counter[3239]++;
        g.collapse();
        tiny_mce_js_exec_counter[3240]++;
        g.pasteHTML('<span data-mce-type="bookmark" id="' + i + '_start" style="' + u + '">' + l + "</span>");
        if (!n) 
        {
          tiny_mce_js_exec_counter[3241]++;
          j.collapse(false);
          tiny_mce_js_exec_counter[3242]++;
          j.pasteHTML('<span data-mce-type="bookmark" id="' + i + '_end" style="' + u + '">' + l + "</span>");
        }
      }      catch (q) {
  tiny_mce_js_exec_counter[3243]++;
  return null;
}
    } else {
      tiny_mce_js_exec_counter[3244]++;
      o = g.item(0);
      tiny_mce_js_exec_counter[3245]++;
      h = o.nodeName;
      tiny_mce_js_exec_counter[3246]++;
      return {name: h, index: f(h, o)};
    }
  } else {
    tiny_mce_js_exec_counter[3247]++;
    o = v.getNode();
    tiny_mce_js_exec_counter[3248]++;
    h = o.nodeName;
    if (h == "IMG") 
    {
      tiny_mce_js_exec_counter[3249]++;
      return {name: h, index: f(h, o)};
    }
    tiny_mce_js_exec_counter[3250]++;
    j = g.cloneRange();
    if (!n) 
    {
      tiny_mce_js_exec_counter[3251]++;
      j.collapse(false);
      tiny_mce_js_exec_counter[3252]++;
      j.insertNode(m.create("span", {"data-mce-type": "bookmark", id: i + "_end", style: u}, l));
    }
    tiny_mce_js_exec_counter[3253]++;
    g.collapse(true);
    tiny_mce_js_exec_counter[3254]++;
    g.insertNode(m.create("span", {"data-mce-type": "bookmark", id: i + "_start", style: u}, l));
  }
  tiny_mce_js_exec_counter[3255]++;
  v.moveToBookmark({id: i, keep: 1});
  tiny_mce_js_exec_counter[3256]++;
  return {id: i};
}, moveToBookmark: function(n) {
  tiny_mce_js_exec_counter[3257]++;
  tiny_mce_js_exec_counter[3259]++;
  var r = this, l = r.dom, i, h, f, q, j, s, o, p;
  if (r.tridentSel) 
  {
    tiny_mce_js_exec_counter[3261]++;
    r.tridentSel.destroy();
  }
  if (n) 
  {
    if (n.start) 
    {
      tiny_mce_js_exec_counter[3262]++;
      f = l.createRng();
      tiny_mce_js_exec_counter[3263]++;
      q = l.getRoot();
      function g(z) {
        tiny_mce_js_exec_counter[3264]++;
        tiny_mce_js_exec_counter[3265]++;
        var t = n[z ? "start" : "end"], v, x, y, u;
        if (t) 
        {
          for (x = q , v = t.length - 1; v >= 1; v--) 
            {
              tiny_mce_js_exec_counter[3267]++;
              u = x.childNodes;
              if (u.length) 
              {
                tiny_mce_js_exec_counter[3268]++;
                x = u[t[v]];
                if (!x) 
                {
                  tiny_mce_js_exec_counter[3269]++;
                  return;
                }
              }
            }
          if (x.nodeType === 3 && t[0] > x.nodeValue.length - 1) 
          {
            tiny_mce_js_exec_counter[3270]++;
            return;
          } else {
            if (x.nodeType === 1 && t[0] > x.childNodes.length) 
            {
              tiny_mce_js_exec_counter[3271]++;
              return;
            }
          }
          if (z) 
          {
            tiny_mce_js_exec_counter[3272]++;
            f.setStart(x, t[0]);
          } else {
            tiny_mce_js_exec_counter[3273]++;
            f.setEnd(x, t[0]);
          }
        }
        tiny_mce_js_exec_counter[3274]++;
        return true;
      }      if (g(true) && g()) 
      {
        tiny_mce_js_exec_counter[3275]++;
        r.setRng(f);
      }
    } else {
      if (n.id) 
      {
        function k(A) {
          tiny_mce_js_exec_counter[3276]++;
          tiny_mce_js_exec_counter[3278]++;
          var u = l.get(n.id + "_" + A), z, t, x, y, v = n.keep;
          if (u) 
          {
            tiny_mce_js_exec_counter[3280]++;
            z = u.parentNode;
            if (A == "start") 
            {
              if (!v) 
              {
                tiny_mce_js_exec_counter[3281]++;
                t = l.nodeIndex(u);
              } else {
                tiny_mce_js_exec_counter[3282]++;
                z = u.firstChild;
                tiny_mce_js_exec_counter[3283]++;
                t = 1;
              }
              tiny_mce_js_exec_counter[3284]++;
              j = s = z;
              tiny_mce_js_exec_counter[3285]++;
              o = p = t;
            } else {
              if (!v) 
              {
                tiny_mce_js_exec_counter[3286]++;
                t = l.nodeIndex(u);
              } else {
                tiny_mce_js_exec_counter[3287]++;
                z = u.firstChild;
                tiny_mce_js_exec_counter[3288]++;
                t = 1;
              }
              tiny_mce_js_exec_counter[3289]++;
              s = z;
              tiny_mce_js_exec_counter[3290]++;
              p = t;
            }
            if (!v) 
            {
              tiny_mce_js_exec_counter[3291]++;
              y = u.previousSibling;
              tiny_mce_js_exec_counter[3292]++;
              x = u.nextSibling;
              tiny_mce_js_exec_counter[3293]++;
              d(c.grep(u.childNodes), function(B) {
  tiny_mce_js_exec_counter[3294]++;
  if (B.nodeType == 3) 
  {
    tiny_mce_js_exec_counter[3296]++;
    B.nodeValue = B.nodeValue.replace(/\uFEFF/g, "");
  }
  tiny_mce_js_exec_counter[3295]++;
});
              while (u = l.get(n.id + "_" + A)) 
                {
                  tiny_mce_js_exec_counter[3297]++;
                  l.remove(u, 1);
                }
              if (y && x && y.nodeType == x.nodeType && y.nodeType == 3 && !c.isOpera) 
              {
                tiny_mce_js_exec_counter[3298]++;
                t = y.nodeValue.length;
                tiny_mce_js_exec_counter[3299]++;
                y.appendData(x.nodeValue);
                tiny_mce_js_exec_counter[3300]++;
                l.remove(x);
                if (A == "start") 
                {
                  tiny_mce_js_exec_counter[3301]++;
                  j = s = y;
                  tiny_mce_js_exec_counter[3302]++;
                  o = p = t;
                } else {
                  tiny_mce_js_exec_counter[3303]++;
                  s = y;
                  tiny_mce_js_exec_counter[3304]++;
                  p = t;
                }
              }
            }
          }
          tiny_mce_js_exec_counter[3277]++;
        }        function m(t) {
          tiny_mce_js_exec_counter[3305]++;
          if (l.isBlock(t) && !t.innerHTML) 
          {
            tiny_mce_js_exec_counter[3306]++;
            t.innerHTML = !a ? '<br data-mce-bogus="1" />' : " ";
          }
          tiny_mce_js_exec_counter[3307]++;
          return t;
        }        tiny_mce_js_exec_counter[3308]++;
        k("start");
        tiny_mce_js_exec_counter[3309]++;
        k("end");
        if (j) 
        {
          tiny_mce_js_exec_counter[3310]++;
          f = l.createRng();
          tiny_mce_js_exec_counter[3311]++;
          f.setStart(m(j), o);
          tiny_mce_js_exec_counter[3312]++;
          f.setEnd(m(s), p);
          tiny_mce_js_exec_counter[3313]++;
          r.setRng(f);
        }
      } else {
        if (n.name) 
        {
          tiny_mce_js_exec_counter[3314]++;
          r.select(l.select(n.name)[n.index]);
        } else {
          if (n.rng) 
          {
            tiny_mce_js_exec_counter[3315]++;
            r.setRng(n.rng);
          }
        }
      }
    }
  }
  tiny_mce_js_exec_counter[3258]++;
}, select: function(k, j) {
  tiny_mce_js_exec_counter[3316]++;
  tiny_mce_js_exec_counter[3317]++;
  var i = this, l = i.dom, g = l.createRng(), f;
  if (k) 
  {
    tiny_mce_js_exec_counter[3319]++;
    f = l.nodeIndex(k);
    tiny_mce_js_exec_counter[3320]++;
    g.setStart(k.parentNode, f);
    tiny_mce_js_exec_counter[3321]++;
    g.setEnd(k.parentNode, f + 1);
    if (j) 
    {
      function h(m, o) {
        tiny_mce_js_exec_counter[3322]++;
        tiny_mce_js_exec_counter[3324]++;
        var n = new c.dom.TreeWalker(m, m);
do {
          if (m.nodeType == 3 && c.trim(m.nodeValue).length != 0) 
          {
            if (o) 
            {
              tiny_mce_js_exec_counter[3326]++;
              g.setStart(m, 0);
            } else {
              tiny_mce_js_exec_counter[3327]++;
              g.setEnd(m, m.nodeValue.length);
            }
            tiny_mce_js_exec_counter[3328]++;
            return;
          }
          if (m.nodeName == "BR") 
          {
            if (o) 
            {
              tiny_mce_js_exec_counter[3329]++;
              g.setStartBefore(m);
            } else {
              tiny_mce_js_exec_counter[3330]++;
              g.setEndBefore(m);
            }
            tiny_mce_js_exec_counter[3331]++;
            return;
          }
        } while (m = (o ? n.next() : n.prev()));
        tiny_mce_js_exec_counter[3323]++;
      }      tiny_mce_js_exec_counter[3332]++;
      h(k, 1);
      tiny_mce_js_exec_counter[3333]++;
      h(k);
    }
    tiny_mce_js_exec_counter[3334]++;
    i.setRng(g);
  }
  tiny_mce_js_exec_counter[3335]++;
  return k;
}, isCollapsed: function() {
  tiny_mce_js_exec_counter[3336]++;
  tiny_mce_js_exec_counter[3337]++;
  var f = this, h = f.getRng(), g = f.getSel();
  if (!h || h.item) 
  {
    tiny_mce_js_exec_counter[3339]++;
    return false;
  }
  if (h.compareEndPoints) 
  {
    tiny_mce_js_exec_counter[3340]++;
    return h.compareEndPoints("StartToEnd", h) === 0;
  }
  tiny_mce_js_exec_counter[3341]++;
  return !g || h.collapsed;
}, collapse: function(f) {
  tiny_mce_js_exec_counter[3342]++;
  tiny_mce_js_exec_counter[3344]++;
  var h = this, g = h.getRng(), i;
  if (g.item) 
  {
    tiny_mce_js_exec_counter[3346]++;
    i = g.item(0);
    tiny_mce_js_exec_counter[3347]++;
    g = h.win.document.body.createTextRange();
    tiny_mce_js_exec_counter[3348]++;
    g.moveToElementText(i);
  }
  tiny_mce_js_exec_counter[3349]++;
  g.collapse(!!f);
  tiny_mce_js_exec_counter[3350]++;
  h.setRng(g);
  tiny_mce_js_exec_counter[3343]++;
}, getSel: function() {
  tiny_mce_js_exec_counter[3351]++;
  tiny_mce_js_exec_counter[3352]++;
  var g = this, f = this.win;
  tiny_mce_js_exec_counter[3354]++;
  return f.getSelection ? f.getSelection() : f.document.selection;
}, getRng: function(l) {
  tiny_mce_js_exec_counter[3355]++;
  tiny_mce_js_exec_counter[3356]++;
  var g = this, h, i, k, j = g.win.document;
  if (l && g.tridentSel) 
  {
    tiny_mce_js_exec_counter[3358]++;
    return g.tridentSel.getRangeAt(0);
  }
  try {
    if (h = g.getSel()) 
    {
      tiny_mce_js_exec_counter[3359]++;
      i = h.rangeCount > 0 ? h.getRangeAt(0) : (h.createRange ? h.createRange() : j.createRange());
    }
  }  catch (f) {
}
  if (c.isIE && i.setStart && j.selection.createRange().item) 
  {
    tiny_mce_js_exec_counter[3360]++;
    k = j.selection.createRange().item(0);
    tiny_mce_js_exec_counter[3361]++;
    i = j.createRange();
    tiny_mce_js_exec_counter[3362]++;
    i.setStartBefore(k);
    tiny_mce_js_exec_counter[3363]++;
    i.setEndAfter(k);
  }
  if (!i) 
  {
    tiny_mce_js_exec_counter[3364]++;
    i = j.createRange ? j.createRange() : j.body.createTextRange();
  }
  if (g.selectedRange && g.explicitRange) 
  {
    if (i.compareBoundaryPoints(i.START_TO_START, g.selectedRange) === 0 && i.compareBoundaryPoints(i.END_TO_END, g.selectedRange) === 0) 
    {
      tiny_mce_js_exec_counter[3365]++;
      i = g.explicitRange;
    } else {
      tiny_mce_js_exec_counter[3366]++;
      g.selectedRange = null;
      tiny_mce_js_exec_counter[3367]++;
      g.explicitRange = null;
    }
  }
  tiny_mce_js_exec_counter[3368]++;
  return i;
}, setRng: function(i) {
  tiny_mce_js_exec_counter[3369]++;
  tiny_mce_js_exec_counter[3371]++;
  var h, g = this;
  if (!g.tridentSel) 
  {
    tiny_mce_js_exec_counter[3373]++;
    h = g.getSel();
    if (h) 
    {
      tiny_mce_js_exec_counter[3374]++;
      g.explicitRange = i;
      tiny_mce_js_exec_counter[3375]++;
      h.removeAllRanges();
      tiny_mce_js_exec_counter[3376]++;
      h.addRange(i);
      tiny_mce_js_exec_counter[3377]++;
      g.selectedRange = h.getRangeAt(0);
    }
  } else {
    if (i.cloneRange) 
    {
      tiny_mce_js_exec_counter[3378]++;
      g.tridentSel.addRange(i);
      tiny_mce_js_exec_counter[3379]++;
      return;
    }
    try {
      tiny_mce_js_exec_counter[3380]++;
      i.select();
    }    catch (f) {
}
  }
  tiny_mce_js_exec_counter[3370]++;
}, setNode: function(g) {
  tiny_mce_js_exec_counter[3381]++;
  tiny_mce_js_exec_counter[3382]++;
  var f = this;
  tiny_mce_js_exec_counter[3384]++;
  f.setContent(f.dom.getOuterHTML(g));
  tiny_mce_js_exec_counter[3385]++;
  return g;
}, getNode: function() {
  tiny_mce_js_exec_counter[3386]++;
  tiny_mce_js_exec_counter[3387]++;
  var h = this, g = h.getRng(), i = h.getSel(), l, k = g.startContainer, f = g.endContainer;
  if (!g) 
  {
    tiny_mce_js_exec_counter[3389]++;
    return h.dom.getRoot();
  }
  if (g.setStart) 
  {
    tiny_mce_js_exec_counter[3390]++;
    l = g.commonAncestorContainer;
    if (!g.collapsed) 
    {
      if (g.startContainer == g.endContainer) 
      {
        if (g.endOffset - g.startOffset < 2) 
        {
          if (g.startContainer.hasChildNodes()) 
          {
            tiny_mce_js_exec_counter[3391]++;
            l = g.startContainer.childNodes[g.startOffset];
          }
        }
      }
      if (k.nodeType === 3 && f.nodeType === 3) 
      {
        function j(p, m) {
          tiny_mce_js_exec_counter[3392]++;
          tiny_mce_js_exec_counter[3393]++;
          var o = p;
          while (p && p.nodeType === 3 && p.length === 0) 
            {
              tiny_mce_js_exec_counter[3395]++;
              p = m ? p.nextSibling : p.previousSibling;
            }
          tiny_mce_js_exec_counter[3396]++;
          return p || o;
        }        if (k.length === g.startOffset) 
        {
          tiny_mce_js_exec_counter[3397]++;
          k = j(k.nextSibling, true);
        } else {
          tiny_mce_js_exec_counter[3398]++;
          k = k.parentNode;
        }
        if (g.endOffset === 0) 
        {
          tiny_mce_js_exec_counter[3399]++;
          f = j(f.previousSibling, false);
        } else {
          tiny_mce_js_exec_counter[3400]++;
          f = f.parentNode;
        }
        if (k && k === f) 
        {
          tiny_mce_js_exec_counter[3401]++;
          return k;
        }
      }
    }
    if (l && l.nodeType == 3) 
    {
      tiny_mce_js_exec_counter[3402]++;
      return l.parentNode;
    }
    tiny_mce_js_exec_counter[3403]++;
    return l;
  }
  tiny_mce_js_exec_counter[3404]++;
  return g.item ? g.item(0) : g.parentElement();
}, getSelectedBlocks: function(g, f) {
  tiny_mce_js_exec_counter[3405]++;
  tiny_mce_js_exec_counter[3406]++;
  var i = this, j = i.dom, m, h, l, k = [];
  tiny_mce_js_exec_counter[3408]++;
  m = j.getParent(g || i.getStart(), j.isBlock);
  tiny_mce_js_exec_counter[3409]++;
  h = j.getParent(f || i.getEnd(), j.isBlock);
  if (m) 
  {
    tiny_mce_js_exec_counter[3410]++;
    k.push(m);
  }
  if (m && h && m != h) 
  {
    tiny_mce_js_exec_counter[3411]++;
    l = m;
    while ((l = l.nextSibling) && l != h) 
      {
        if (j.isBlock(l)) 
        {
          tiny_mce_js_exec_counter[3412]++;
          k.push(l);
        }
      }
  }
  if (h && m != h) 
  {
    tiny_mce_js_exec_counter[3413]++;
    k.push(h);
  }
  tiny_mce_js_exec_counter[3414]++;
  return k;
}, destroy: function(g) {
  tiny_mce_js_exec_counter[3415]++;
  tiny_mce_js_exec_counter[3417]++;
  var f = this;
  tiny_mce_js_exec_counter[3419]++;
  f.win = null;
  if (f.tridentSel) 
  {
    tiny_mce_js_exec_counter[3420]++;
    f.tridentSel.destroy();
  }
  if (!g) 
  {
    tiny_mce_js_exec_counter[3421]++;
    c.removeUnload(f.destroy);
  }
  tiny_mce_js_exec_counter[3416]++;
}, _fixIESelection: function() {
  tiny_mce_js_exec_counter[3422]++;
  tiny_mce_js_exec_counter[3424]++;
  var g = this.dom, m = g.doc, h = m.body, j, n, f;
  tiny_mce_js_exec_counter[3426]++;
  m.documentElement.unselectable = true;
  function i(o, r) {
    tiny_mce_js_exec_counter[3427]++;
    tiny_mce_js_exec_counter[3428]++;
    var p = h.createTextRange();
    try {
      tiny_mce_js_exec_counter[3430]++;
      p.moveToPoint(o, r);
    }    catch (q) {
  tiny_mce_js_exec_counter[3431]++;
  p = null;
}
    tiny_mce_js_exec_counter[3432]++;
    return p;
  }
  function l(p) {
    tiny_mce_js_exec_counter[3433]++;
    tiny_mce_js_exec_counter[3435]++;
    var o;
    if (p.button) 
    {
      tiny_mce_js_exec_counter[3437]++;
      o = i(p.x, p.y);
      if (o) 
      {
        if (o.compareEndPoints("StartToStart", n) > 0) 
        {
          tiny_mce_js_exec_counter[3438]++;
          o.setEndPoint("StartToStart", n);
        } else {
          tiny_mce_js_exec_counter[3439]++;
          o.setEndPoint("EndToEnd", n);
        }
        tiny_mce_js_exec_counter[3440]++;
        o.select();
      }
    } else {
      tiny_mce_js_exec_counter[3441]++;
      k();
    }
    tiny_mce_js_exec_counter[3434]++;
  }
  function k() {
    tiny_mce_js_exec_counter[3442]++;
    tiny_mce_js_exec_counter[3444]++;
    var o = m.selection.createRange();
    if (n && !o.item && o.compareEndPoints("StartToEnd", o) === 0) 
    {
      tiny_mce_js_exec_counter[3446]++;
      n.select();
    }
    tiny_mce_js_exec_counter[3447]++;
    g.unbind(m, "mouseup", k);
    tiny_mce_js_exec_counter[3448]++;
    g.unbind(m, "mousemove", l);
    tiny_mce_js_exec_counter[3449]++;
    n = j = 0;
    tiny_mce_js_exec_counter[3443]++;
  }
  tiny_mce_js_exec_counter[3450]++;
  g.bind(m, ["mousedown", "contextmenu"], function(o) {
  tiny_mce_js_exec_counter[3451]++;
  if (o.target.nodeName === "HTML") 
  {
    if (j) 
    {
      tiny_mce_js_exec_counter[3453]++;
      k();
    }
    tiny_mce_js_exec_counter[3454]++;
    f = m.documentElement;
    if (f.scrollHeight > f.clientHeight) 
    {
      tiny_mce_js_exec_counter[3455]++;
      return;
    }
    tiny_mce_js_exec_counter[3456]++;
    j = 1;
    tiny_mce_js_exec_counter[3457]++;
    n = i(o.x, o.y);
    if (n) 
    {
      tiny_mce_js_exec_counter[3458]++;
      g.bind(m, "mouseup", k);
      tiny_mce_js_exec_counter[3459]++;
      g.bind(m, "mousemove", l);
      tiny_mce_js_exec_counter[3460]++;
      g.win.focus();
      tiny_mce_js_exec_counter[3461]++;
      n.select();
    }
  }
  tiny_mce_js_exec_counter[3452]++;
});
  tiny_mce_js_exec_counter[3423]++;
}});
  tiny_mce_js_exec_counter[3104]++;
})(tinymce);
tiny_mce_js_exec_counter[3462]++;
(function(a) {
  tiny_mce_js_exec_counter[3463]++;
  tiny_mce_js_exec_counter[3465]++;
  a.dom.Serializer = function(e, i, f) {
  tiny_mce_js_exec_counter[3466]++;
  tiny_mce_js_exec_counter[3467]++;
  var h, b, d = a.isIE, g = a.each, c;
  if (!e.apply_source_formatting) 
  {
    tiny_mce_js_exec_counter[3469]++;
    e.indent = false;
  }
  tiny_mce_js_exec_counter[3470]++;
  e.remove_trailing_brs = true;
  tiny_mce_js_exec_counter[3471]++;
  i = i || a.DOM;
  tiny_mce_js_exec_counter[3472]++;
  f = f || new a.html.Schema(e);
  tiny_mce_js_exec_counter[3473]++;
  e.entity_encoding = e.entity_encoding || "named";
  tiny_mce_js_exec_counter[3474]++;
  h = new a.util.Dispatcher(self);
  tiny_mce_js_exec_counter[3475]++;
  b = new a.util.Dispatcher(self);
  tiny_mce_js_exec_counter[3476]++;
  c = new a.html.DomParser(e, f);
  tiny_mce_js_exec_counter[3477]++;
  c.addAttributeFilter("src,href,style", function(k, j) {
  tiny_mce_js_exec_counter[3478]++;
  tiny_mce_js_exec_counter[3480]++;
  var o = k.length, l, q, n = "data-mce-" + j, p = e.url_converter, r = e.url_converter_scope, m;
  while (o--) 
    {
      tiny_mce_js_exec_counter[3482]++;
      l = k[o];
      tiny_mce_js_exec_counter[3483]++;
      q = l.attributes.map[n];
      if (q !== m) 
      {
        tiny_mce_js_exec_counter[3484]++;
        l.attr(j, q.length > 0 ? q : null);
        tiny_mce_js_exec_counter[3485]++;
        l.attr(n, null);
      } else {
        tiny_mce_js_exec_counter[3486]++;
        q = l.attributes.map[j];
        if (j === "style") 
        {
          tiny_mce_js_exec_counter[3487]++;
          q = i.serializeStyle(i.parseStyle(q), l.name);
        } else {
          if (p) 
          {
            tiny_mce_js_exec_counter[3488]++;
            q = p.call(r, q, j, l.name);
          }
        }
        tiny_mce_js_exec_counter[3489]++;
        l.attr(j, q.length > 0 ? q : null);
      }
    }
  tiny_mce_js_exec_counter[3479]++;
});
  tiny_mce_js_exec_counter[3490]++;
  c.addAttributeFilter("class", function(j, k) {
  tiny_mce_js_exec_counter[3491]++;
  tiny_mce_js_exec_counter[3493]++;
  var l = j.length, m, n;
  while (l--) 
    {
      tiny_mce_js_exec_counter[3495]++;
      m = j[l];
      tiny_mce_js_exec_counter[3496]++;
      n = m.attr("class").replace(/\s*mceItem\w+\s*/g, "");
      tiny_mce_js_exec_counter[3497]++;
      m.attr("class", n.length > 0 ? n : null);
    }
  tiny_mce_js_exec_counter[3492]++;
});
  tiny_mce_js_exec_counter[3498]++;
  c.addAttributeFilter("data-mce-type", function(j, l, k) {
  tiny_mce_js_exec_counter[3499]++;
  tiny_mce_js_exec_counter[3501]++;
  var m = j.length, n;
  while (m--) 
    {
      tiny_mce_js_exec_counter[3503]++;
      n = j[m];
      if (n.attributes.map["data-mce-type"] === "bookmark" && !k.cleanup) 
      {
        tiny_mce_js_exec_counter[3504]++;
        n.remove();
      }
    }
  tiny_mce_js_exec_counter[3500]++;
});
  tiny_mce_js_exec_counter[3505]++;
  c.addNodeFilter("script,style", function(k, l) {
  tiny_mce_js_exec_counter[3506]++;
  tiny_mce_js_exec_counter[3508]++;
  var m = k.length, n, o;
  function j(p) {
    tiny_mce_js_exec_counter[3510]++;
    tiny_mce_js_exec_counter[3511]++;
    return p.replace(/(<!--\[CDATA\[|\]\]-->)/g, "\n").replace(/^[\r\n]*|[\r\n]*$/g, "").replace(/^\s*(\/\/\s*<!--|\/\/\s*<!\[CDATA\[|<!--|<!\[CDATA\[)[\r\n]*/g, "").replace(/\s*(\/\/\s*\]\]>|\/\/\s*-->|\]\]>|-->|\]\]-->)\s*$/g, "");
  }
  while (m--) 
    {
      tiny_mce_js_exec_counter[3512]++;
      n = k[m];
      tiny_mce_js_exec_counter[3513]++;
      o = n.firstChild ? n.firstChild.value : "";
      if (l === "script") 
      {
        tiny_mce_js_exec_counter[3514]++;
        n.attr("type", (n.attr("type") || "text/javascript").replace(/^mce\-/, ""));
        if (o.length > 0) 
        {
          tiny_mce_js_exec_counter[3515]++;
          n.firstChild.value = "// <![CDATA[\n" + j(o) + "\n// ]]>";
        }
      } else {
        if (o.length > 0) 
        {
          tiny_mce_js_exec_counter[3516]++;
          n.firstChild.value = "<!--\n" + j(o) + "\n-->";
        }
      }
    }
  tiny_mce_js_exec_counter[3507]++;
});
  tiny_mce_js_exec_counter[3517]++;
  c.addNodeFilter("#comment", function(j, k) {
  tiny_mce_js_exec_counter[3518]++;
  tiny_mce_js_exec_counter[3520]++;
  var l = j.length, m;
  while (l--) 
    {
      tiny_mce_js_exec_counter[3522]++;
      m = j[l];
      if (m.value.indexOf("[CDATA[") === 0) 
      {
        tiny_mce_js_exec_counter[3523]++;
        m.name = "#cdata";
        tiny_mce_js_exec_counter[3524]++;
        m.type = 4;
        tiny_mce_js_exec_counter[3525]++;
        m.value = m.value.replace(/^\[CDATA\[|\]\]$/g, "");
      } else {
        if (m.value.indexOf("mce:protected ") === 0) 
        {
          tiny_mce_js_exec_counter[3526]++;
          m.name = "#text";
          tiny_mce_js_exec_counter[3527]++;
          m.type = 3;
          tiny_mce_js_exec_counter[3528]++;
          m.raw = true;
          tiny_mce_js_exec_counter[3529]++;
          m.value = unescape(m.value).substr(14);
        }
      }
    }
  tiny_mce_js_exec_counter[3519]++;
});
  tiny_mce_js_exec_counter[3530]++;
  c.addNodeFilter("xml:namespace,input", function(j, k) {
  tiny_mce_js_exec_counter[3531]++;
  tiny_mce_js_exec_counter[3533]++;
  var l = j.length, m;
  while (l--) 
    {
      tiny_mce_js_exec_counter[3535]++;
      m = j[l];
      if (m.type === 7) 
      {
        tiny_mce_js_exec_counter[3536]++;
        m.remove();
      } else {
        if (m.type === 1) 
        {
          if (k === "input" && !("type" in m.attributes.map)) 
          {
            tiny_mce_js_exec_counter[3537]++;
            m.attr("type", "text");
          }
        }
      }
    }
  tiny_mce_js_exec_counter[3532]++;
});
  if (e.fix_list_elements) 
  {
    tiny_mce_js_exec_counter[3538]++;
    c.addNodeFilter("ul,ol", function(k, l) {
  tiny_mce_js_exec_counter[3539]++;
  tiny_mce_js_exec_counter[3541]++;
  var m = k.length, n, j;
  while (m--) 
    {
      tiny_mce_js_exec_counter[3543]++;
      n = k[m];
      tiny_mce_js_exec_counter[3544]++;
      j = n.parent;
      if (j.name === "ul" || j.name === "ol") 
      {
        if (n.prev && n.prev.name === "li") 
        {
          tiny_mce_js_exec_counter[3545]++;
          n.prev.append(n);
        }
      }
    }
  tiny_mce_js_exec_counter[3540]++;
});
  }
  tiny_mce_js_exec_counter[3546]++;
  c.addAttributeFilter("data-mce-src,data-mce-href,data-mce-style", function(j, k) {
  tiny_mce_js_exec_counter[3547]++;
  tiny_mce_js_exec_counter[3549]++;
  var l = j.length;
  while (l--) 
    {
      tiny_mce_js_exec_counter[3551]++;
      j[l].attr(k, null);
    }
  tiny_mce_js_exec_counter[3548]++;
});
  tiny_mce_js_exec_counter[3552]++;
  return {schema: f, addNodeFilter: c.addNodeFilter, addAttributeFilter: c.addAttributeFilter, onPreProcess: h, onPostProcess: b, serialize: function(o, m) {
  tiny_mce_js_exec_counter[3553]++;
  tiny_mce_js_exec_counter[3554]++;
  var l, p, k, j, n;
  if (d && i.select("script,style,select").length > 0) 
  {
    tiny_mce_js_exec_counter[3556]++;
    n = o.innerHTML;
    tiny_mce_js_exec_counter[3557]++;
    o = o.cloneNode(false);
    tiny_mce_js_exec_counter[3558]++;
    i.setHTML(o, n);
  } else {
    tiny_mce_js_exec_counter[3559]++;
    o = o.cloneNode(true);
  }
  tiny_mce_js_exec_counter[3560]++;
  l = o.ownerDocument.implementation;
  if (l.createHTMLDocument) 
  {
    tiny_mce_js_exec_counter[3561]++;
    p = l.createHTMLDocument("");
    tiny_mce_js_exec_counter[3562]++;
    g(o.nodeName == "BODY" ? o.childNodes : [o], function(q) {
  tiny_mce_js_exec_counter[3563]++;
  tiny_mce_js_exec_counter[3565]++;
  p.body.appendChild(p.importNode(q, true));
  tiny_mce_js_exec_counter[3564]++;
});
    if (o.nodeName != "BODY") 
    {
      tiny_mce_js_exec_counter[3566]++;
      o = p.body.firstChild;
    } else {
      tiny_mce_js_exec_counter[3567]++;
      o = p.body;
    }
    tiny_mce_js_exec_counter[3568]++;
    k = i.doc;
    tiny_mce_js_exec_counter[3569]++;
    i.doc = p;
  }
  tiny_mce_js_exec_counter[3570]++;
  m = m || {};
  tiny_mce_js_exec_counter[3571]++;
  m.format = m.format || "html";
  if (!m.no_events) 
  {
    tiny_mce_js_exec_counter[3572]++;
    m.node = o;
    tiny_mce_js_exec_counter[3573]++;
    h.dispatch(self, m);
  }
  tiny_mce_js_exec_counter[3574]++;
  j = new a.html.Serializer(e, f);
  tiny_mce_js_exec_counter[3575]++;
  m.content = j.serialize(c.parse(m.getInner ? o.innerHTML : a.trim(i.getOuterHTML(o), m), m));
  if (!m.no_events) 
  {
    tiny_mce_js_exec_counter[3576]++;
    b.dispatch(self, m);
  }
  if (k) 
  {
    tiny_mce_js_exec_counter[3577]++;
    i.doc = k;
  }
  tiny_mce_js_exec_counter[3578]++;
  m.node = null;
  tiny_mce_js_exec_counter[3579]++;
  return m.content;
}, addRules: function(j) {
  tiny_mce_js_exec_counter[3580]++;
  tiny_mce_js_exec_counter[3582]++;
  f.addValidElements(j);
  tiny_mce_js_exec_counter[3581]++;
}, setRules: function(j) {
  tiny_mce_js_exec_counter[3583]++;
  tiny_mce_js_exec_counter[3585]++;
  f.setValidElements(j);
  tiny_mce_js_exec_counter[3584]++;
}};
};
  tiny_mce_js_exec_counter[3464]++;
})(tinymce);
tiny_mce_js_exec_counter[3586]++;
(function(a) {
  tiny_mce_js_exec_counter[3587]++;
  tiny_mce_js_exec_counter[3589]++;
  a.dom.ScriptLoader = function(h) {
  tiny_mce_js_exec_counter[3590]++;
  tiny_mce_js_exec_counter[3592]++;
  var c = 0, k = 1, i = 2, l = {}, j = [], f = {}, d = [], g = 0, e;
  function b(m, u) {
    tiny_mce_js_exec_counter[3594]++;
    tiny_mce_js_exec_counter[3596]++;
    var v = this, q = a.DOM, s, o, r, n;
    function p() {
      tiny_mce_js_exec_counter[3598]++;
      tiny_mce_js_exec_counter[3600]++;
      q.remove(n);
      if (s) 
      {
        tiny_mce_js_exec_counter[3601]++;
        s.onreadystatechange = s.onload = s = null;
      }
      tiny_mce_js_exec_counter[3602]++;
      u();
      tiny_mce_js_exec_counter[3599]++;
    }
    tiny_mce_js_exec_counter[3603]++;
    n = q.uniqueId();
    if (a.isIE6) 
    {
      tiny_mce_js_exec_counter[3604]++;
      o = new a.util.URI(m);
      tiny_mce_js_exec_counter[3605]++;
      r = location;
      if (o.host == r.hostname && o.port == r.port && (o.protocol + ":") == r.protocol) 
      {
        tiny_mce_js_exec_counter[3606]++;
        a.util.XHR.send({url: a._addVer(o.getURI()), success: function(x) {
  tiny_mce_js_exec_counter[3607]++;
  tiny_mce_js_exec_counter[3609]++;
  var t = q.create("script", {type: "text/javascript"});
  tiny_mce_js_exec_counter[3611]++;
  t.text = x;
  tiny_mce_js_exec_counter[3612]++;
  document.getElementsByTagName("head")[0].appendChild(t);
  tiny_mce_js_exec_counter[3613]++;
  q.remove(t);
  tiny_mce_js_exec_counter[3614]++;
  p();
  tiny_mce_js_exec_counter[3608]++;
}});
        tiny_mce_js_exec_counter[3615]++;
        return;
      }
    }
    tiny_mce_js_exec_counter[3616]++;
    s = q.create("script", {id: n, type: "text/javascript", src: a._addVer(m)});
    if (!a.isIE) 
    {
      tiny_mce_js_exec_counter[3617]++;
      s.onload = p;
    }
    if (!a.isOpera) 
    {
      tiny_mce_js_exec_counter[3618]++;
      s.onreadystatechange = function() {
  tiny_mce_js_exec_counter[3619]++;
  tiny_mce_js_exec_counter[3621]++;
  var t = s.readyState;
  if (t == "complete" || t == "loaded") 
  {
    tiny_mce_js_exec_counter[3623]++;
    p();
  }
  tiny_mce_js_exec_counter[3620]++;
};
    }
    tiny_mce_js_exec_counter[3624]++;
    (document.getElementsByTagName("head")[0] || document.body).appendChild(s);
    tiny_mce_js_exec_counter[3595]++;
  }
  tiny_mce_js_exec_counter[3625]++;
  this.isDone = function(m) {
  tiny_mce_js_exec_counter[3626]++;
  tiny_mce_js_exec_counter[3627]++;
  return l[m] == i;
};
  tiny_mce_js_exec_counter[3628]++;
  this.markDone = function(m) {
  tiny_mce_js_exec_counter[3629]++;
  tiny_mce_js_exec_counter[3631]++;
  l[m] = i;
  tiny_mce_js_exec_counter[3630]++;
};
  tiny_mce_js_exec_counter[3632]++;
  this.add = this.load = function(m, q, n) {
  tiny_mce_js_exec_counter[3633]++;
  tiny_mce_js_exec_counter[3635]++;
  var o, p = l[m];
  if (p == e) 
  {
    tiny_mce_js_exec_counter[3637]++;
    j.push(m);
    tiny_mce_js_exec_counter[3638]++;
    l[m] = c;
  }
  if (q) 
  {
    if (!f[m]) 
    {
      tiny_mce_js_exec_counter[3639]++;
      f[m] = [];
    }
    tiny_mce_js_exec_counter[3640]++;
    f[m].push({func: q, scope: n || this});
  }
  tiny_mce_js_exec_counter[3634]++;
};
  tiny_mce_js_exec_counter[3641]++;
  this.loadQueue = function(n, m) {
  tiny_mce_js_exec_counter[3642]++;
  tiny_mce_js_exec_counter[3644]++;
  this.loadScripts(j, n, m);
  tiny_mce_js_exec_counter[3643]++;
};
  tiny_mce_js_exec_counter[3645]++;
  this.loadScripts = function(m, q, p) {
  tiny_mce_js_exec_counter[3646]++;
  tiny_mce_js_exec_counter[3648]++;
  var o;
  function n(r) {
    tiny_mce_js_exec_counter[3650]++;
    tiny_mce_js_exec_counter[3652]++;
    a.each(f[r], function(s) {
  tiny_mce_js_exec_counter[3653]++;
  tiny_mce_js_exec_counter[3655]++;
  s.func.call(s.scope);
  tiny_mce_js_exec_counter[3654]++;
});
    tiny_mce_js_exec_counter[3656]++;
    f[r] = e;
    tiny_mce_js_exec_counter[3651]++;
  }
  tiny_mce_js_exec_counter[3657]++;
  d.push({func: q, scope: p || this});
  tiny_mce_js_exec_counter[3658]++;
  o = function() {
  tiny_mce_js_exec_counter[3659]++;
  tiny_mce_js_exec_counter[3661]++;
  var r = a.grep(m);
  tiny_mce_js_exec_counter[3663]++;
  m.length = 0;
  tiny_mce_js_exec_counter[3664]++;
  a.each(r, function(s) {
  tiny_mce_js_exec_counter[3665]++;
  if (l[s] == i) 
  {
    tiny_mce_js_exec_counter[3667]++;
    n(s);
    tiny_mce_js_exec_counter[3668]++;
    return;
  }
  if (l[s] != k) 
  {
    tiny_mce_js_exec_counter[3669]++;
    l[s] = k;
    tiny_mce_js_exec_counter[3670]++;
    g++;
    tiny_mce_js_exec_counter[3671]++;
    b(s, function() {
  tiny_mce_js_exec_counter[3672]++;
  tiny_mce_js_exec_counter[3674]++;
  l[s] = i;
  tiny_mce_js_exec_counter[3675]++;
  g--;
  tiny_mce_js_exec_counter[3676]++;
  n(s);
  tiny_mce_js_exec_counter[3677]++;
  o();
  tiny_mce_js_exec_counter[3673]++;
});
  }
  tiny_mce_js_exec_counter[3666]++;
});
  if (!g) 
  {
    tiny_mce_js_exec_counter[3678]++;
    a.each(d, function(s) {
  tiny_mce_js_exec_counter[3679]++;
  tiny_mce_js_exec_counter[3681]++;
  s.func.call(s.scope);
  tiny_mce_js_exec_counter[3680]++;
});
    tiny_mce_js_exec_counter[3682]++;
    d.length = 0;
  }
  tiny_mce_js_exec_counter[3660]++;
};
  tiny_mce_js_exec_counter[3683]++;
  o();
  tiny_mce_js_exec_counter[3647]++;
};
  tiny_mce_js_exec_counter[3591]++;
};
  tiny_mce_js_exec_counter[3684]++;
  a.ScriptLoader = new a.dom.ScriptLoader();
  tiny_mce_js_exec_counter[3588]++;
})(tinymce);
tiny_mce_js_exec_counter[3685]++;
tinymce.dom.TreeWalker = function(a, c) {
  tiny_mce_js_exec_counter[3686]++;
  tiny_mce_js_exec_counter[3688]++;
  var b = a;
  function d(i, f, e, j) {
    tiny_mce_js_exec_counter[3690]++;
    tiny_mce_js_exec_counter[3692]++;
    var h, g;
    if (i) 
    {
      if (!j && i[f]) 
      {
        tiny_mce_js_exec_counter[3694]++;
        return i[f];
      }
      if (i != c) 
      {
        tiny_mce_js_exec_counter[3695]++;
        h = i[e];
        if (h) 
        {
          tiny_mce_js_exec_counter[3696]++;
          return h;
        }
        for (g = i.parentNode; g && g != c; g = g.parentNode) 
          {
            tiny_mce_js_exec_counter[3697]++;
            h = g[e];
            if (h) 
            {
              tiny_mce_js_exec_counter[3698]++;
              return h;
            }
          }
      }
    }
    tiny_mce_js_exec_counter[3691]++;
  }
  tiny_mce_js_exec_counter[3699]++;
  this.current = function() {
  tiny_mce_js_exec_counter[3700]++;
  tiny_mce_js_exec_counter[3701]++;
  return b;
};
  tiny_mce_js_exec_counter[3702]++;
  this.next = function(e) {
  tiny_mce_js_exec_counter[3703]++;
  tiny_mce_js_exec_counter[3704]++;
  return (b = d(b, "firstChild", "nextSibling", e));
};
  tiny_mce_js_exec_counter[3705]++;
  this.prev = function(e) {
  tiny_mce_js_exec_counter[3706]++;
  tiny_mce_js_exec_counter[3707]++;
  return (b = d(b, "lastChild", "previousSibling", e));
};
  tiny_mce_js_exec_counter[3687]++;
};
tiny_mce_js_exec_counter[3708]++;
(function(a) {
  tiny_mce_js_exec_counter[3709]++;
  tiny_mce_js_exec_counter[3711]++;
  a.dom.RangeUtils = function(c) {
  tiny_mce_js_exec_counter[3712]++;
  tiny_mce_js_exec_counter[3714]++;
  var b = "\ufeff";
  tiny_mce_js_exec_counter[3716]++;
  this.walk = function(d, r) {
  tiny_mce_js_exec_counter[3717]++;
  tiny_mce_js_exec_counter[3719]++;
  var h = d.startContainer, k = d.startOffset, s = d.endContainer, l = d.endOffset, i, f, n, g, q, p, e;
  tiny_mce_js_exec_counter[3721]++;
  e = c.select("td.mceSelected,th.mceSelected");
  if (e.length > 0) 
  {
    tiny_mce_js_exec_counter[3722]++;
    a.each(e, function(t) {
  tiny_mce_js_exec_counter[3723]++;
  tiny_mce_js_exec_counter[3725]++;
  r([t]);
  tiny_mce_js_exec_counter[3724]++;
});
    tiny_mce_js_exec_counter[3726]++;
    return;
  }
  function o(v, u, t) {
    tiny_mce_js_exec_counter[3727]++;
    tiny_mce_js_exec_counter[3728]++;
    var x = [];
    for (; v && v != t; v = v[u]) 
      {
        tiny_mce_js_exec_counter[3730]++;
        x.push(v);
      }
    tiny_mce_js_exec_counter[3731]++;
    return x;
  }
  function m(u, t) {
    tiny_mce_js_exec_counter[3732]++;
do {
      if (u.parentNode == t) 
      {
        tiny_mce_js_exec_counter[3734]++;
        return u;
      }
      tiny_mce_js_exec_counter[3735]++;
      u = u.parentNode;
    } while (u);
    tiny_mce_js_exec_counter[3733]++;
  }
  function j(v, u, x) {
    tiny_mce_js_exec_counter[3736]++;
    tiny_mce_js_exec_counter[3738]++;
    var t = x ? "nextSibling" : "previousSibling";
    for (g = v , q = g.parentNode; g && g != u; g = q) 
      {
        tiny_mce_js_exec_counter[3740]++;
        q = g.parentNode;
        tiny_mce_js_exec_counter[3741]++;
        p = o(g == v ? g : g[t], t);
        if (p.length) 
        {
          if (!x) 
          {
            tiny_mce_js_exec_counter[3742]++;
            p.reverse();
          }
          tiny_mce_js_exec_counter[3743]++;
          r(p);
        }
      }
    tiny_mce_js_exec_counter[3737]++;
  }
  if (h.nodeType == 1 && h.hasChildNodes()) 
  {
    tiny_mce_js_exec_counter[3744]++;
    h = h.childNodes[k];
  }
  if (s.nodeType == 1 && s.hasChildNodes()) 
  {
    tiny_mce_js_exec_counter[3745]++;
    s = s.childNodes[Math.min(l - 1, s.childNodes.length - 1)];
  }
  tiny_mce_js_exec_counter[3746]++;
  i = c.findCommonAncestor(h, s);
  if (h == s) 
  {
    tiny_mce_js_exec_counter[3747]++;
    return r([h]);
  }
  for (g = h; g; g = g.parentNode) 
    {
      if (g == s) 
      {
        tiny_mce_js_exec_counter[3748]++;
        return j(h, i, true);
      }
      if (g == i) 
      {
        tiny_mce_js_exec_counter[3749]++;
        break;
      }
    }
  for (g = s; g; g = g.parentNode) 
    {
      if (g == h) 
      {
        tiny_mce_js_exec_counter[3750]++;
        return j(s, i);
      }
      if (g == i) 
      {
        tiny_mce_js_exec_counter[3751]++;
        break;
      }
    }
  tiny_mce_js_exec_counter[3752]++;
  f = m(h, i) || h;
  tiny_mce_js_exec_counter[3753]++;
  n = m(s, i) || s;
  tiny_mce_js_exec_counter[3754]++;
  j(h, f, true);
  tiny_mce_js_exec_counter[3755]++;
  p = o(f == h ? f : f.nextSibling, "nextSibling", n == s ? n.nextSibling : n);
  if (p.length) 
  {
    tiny_mce_js_exec_counter[3756]++;
    r(p);
  }
  tiny_mce_js_exec_counter[3757]++;
  j(s, n);
  tiny_mce_js_exec_counter[3718]++;
};
  tiny_mce_js_exec_counter[3713]++;
};
  tiny_mce_js_exec_counter[3758]++;
  a.dom.RangeUtils.compareRanges = function(c, b) {
  tiny_mce_js_exec_counter[3759]++;
  if (c && b) 
  {
    if (c.item || c.duplicate) 
    {
      if (c.item && b.item && c.item(0) === b.item(0)) 
      {
        tiny_mce_js_exec_counter[3760]++;
        return true;
      }
      if (c.isEqual && b.isEqual && b.isEqual(c)) 
      {
        tiny_mce_js_exec_counter[3761]++;
        return true;
      }
    } else {
      tiny_mce_js_exec_counter[3762]++;
      return c.startContainer == b.startContainer && c.startOffset == b.startOffset;
    }
  }
  tiny_mce_js_exec_counter[3763]++;
  return false;
};
  tiny_mce_js_exec_counter[3710]++;
})(tinymce);
tiny_mce_js_exec_counter[3764]++;
(function(b) {
  tiny_mce_js_exec_counter[3765]++;
  tiny_mce_js_exec_counter[3767]++;
  var a = b.dom.Event, c = b.each;
  tiny_mce_js_exec_counter[3769]++;
  b.create("tinymce.ui.KeyboardNavigation", {KeyboardNavigation: function(e, f) {
  tiny_mce_js_exec_counter[3770]++;
  tiny_mce_js_exec_counter[3772]++;
  var p = this, m = e.root, l = e.items, n = e.enableUpDown, i = e.enableLeftRight || !e.enableUpDown, k = e.excludeFromTabOrder, j, h, o, d, g;
  tiny_mce_js_exec_counter[3774]++;
  f = f || b.DOM;
  tiny_mce_js_exec_counter[3775]++;
  j = function(q) {
  tiny_mce_js_exec_counter[3776]++;
  tiny_mce_js_exec_counter[3778]++;
  g = q.target.id;
  tiny_mce_js_exec_counter[3777]++;
};
  tiny_mce_js_exec_counter[3779]++;
  h = function(q) {
  tiny_mce_js_exec_counter[3780]++;
  tiny_mce_js_exec_counter[3782]++;
  f.setAttrib(q.target.id, "tabindex", "-1");
  tiny_mce_js_exec_counter[3781]++;
};
  tiny_mce_js_exec_counter[3783]++;
  d = function(q) {
  tiny_mce_js_exec_counter[3784]++;
  tiny_mce_js_exec_counter[3786]++;
  var r = f.get(g);
  tiny_mce_js_exec_counter[3788]++;
  f.setAttrib(r, "tabindex", "0");
  tiny_mce_js_exec_counter[3789]++;
  r.focus();
  tiny_mce_js_exec_counter[3785]++;
};
  tiny_mce_js_exec_counter[3790]++;
  p.focus = function() {
  tiny_mce_js_exec_counter[3791]++;
  tiny_mce_js_exec_counter[3793]++;
  f.get(g).focus();
  tiny_mce_js_exec_counter[3792]++;
};
  tiny_mce_js_exec_counter[3794]++;
  p.destroy = function() {
  tiny_mce_js_exec_counter[3795]++;
  tiny_mce_js_exec_counter[3797]++;
  c(l, function(q) {
  tiny_mce_js_exec_counter[3798]++;
  tiny_mce_js_exec_counter[3800]++;
  f.unbind(f.get(q.id), "focus", j);
  tiny_mce_js_exec_counter[3801]++;
  f.unbind(f.get(q.id), "blur", h);
  tiny_mce_js_exec_counter[3799]++;
});
  tiny_mce_js_exec_counter[3802]++;
  f.unbind(f.get(m), "focus", d);
  tiny_mce_js_exec_counter[3803]++;
  f.unbind(f.get(m), "keydown", o);
  tiny_mce_js_exec_counter[3804]++;
  l = f = m = p.focus = j = h = o = d = null;
  tiny_mce_js_exec_counter[3805]++;
  p.destroy = function() {
  tiny_mce_js_exec_counter[3806]++;
  tiny_mce_js_exec_counter[3807]++;
};
  tiny_mce_js_exec_counter[3796]++;
};
  tiny_mce_js_exec_counter[3808]++;
  p.moveFocus = function(u, r) {
  tiny_mce_js_exec_counter[3809]++;
  tiny_mce_js_exec_counter[3811]++;
  var q = -1, t = p.controls, s;
  if (!g) 
  {
    tiny_mce_js_exec_counter[3813]++;
    return;
  }
  tiny_mce_js_exec_counter[3814]++;
  c(l, function(x, v) {
  tiny_mce_js_exec_counter[3815]++;
  if (x.id === g) 
  {
    tiny_mce_js_exec_counter[3817]++;
    q = v;
    tiny_mce_js_exec_counter[3818]++;
    return false;
  }
  tiny_mce_js_exec_counter[3816]++;
});
  tiny_mce_js_exec_counter[3819]++;
  q += u;
  if (q < 0) 
  {
    tiny_mce_js_exec_counter[3820]++;
    q = l.length - 1;
  } else {
    if (q >= l.length) 
    {
      tiny_mce_js_exec_counter[3821]++;
      q = 0;
    }
  }
  tiny_mce_js_exec_counter[3822]++;
  s = l[q];
  tiny_mce_js_exec_counter[3823]++;
  f.setAttrib(g, "tabindex", "-1");
  tiny_mce_js_exec_counter[3824]++;
  f.setAttrib(s.id, "tabindex", "0");
  tiny_mce_js_exec_counter[3825]++;
  f.get(s.id).focus();
  if (e.actOnFocus) 
  {
    tiny_mce_js_exec_counter[3826]++;
    e.onAction(s.id);
  }
  if (r) 
  {
    tiny_mce_js_exec_counter[3827]++;
    a.cancel(r);
  }
  tiny_mce_js_exec_counter[3810]++;
};
  tiny_mce_js_exec_counter[3828]++;
  o = function(y) {
  tiny_mce_js_exec_counter[3829]++;
  tiny_mce_js_exec_counter[3831]++;
  var u = 37, t = 39, x = 38, z = 40, q = 27, s = 14, r = 13, v = 32;
  switch (y.keyCode) {
    case u:
      {
        if (i) 
        {
          tiny_mce_js_exec_counter[3833]++;
          p.moveFocus(-1);
        }
        tiny_mce_js_exec_counter[3834]++;
        break;
      }
    case t:
      {
        if (i) 
        {
          tiny_mce_js_exec_counter[3835]++;
          p.moveFocus(1);
        }
        tiny_mce_js_exec_counter[3836]++;
        break;
      }
    case x:
      {
        if (n) 
        {
          tiny_mce_js_exec_counter[3837]++;
          p.moveFocus(-1);
        }
        tiny_mce_js_exec_counter[3838]++;
        break;
      }
    case z:
      {
        if (n) 
        {
          tiny_mce_js_exec_counter[3839]++;
          p.moveFocus(1);
        }
        tiny_mce_js_exec_counter[3840]++;
        break;
      }
    case q:
      {
        if (e.onCancel) 
        {
          tiny_mce_js_exec_counter[3841]++;
          e.onCancel();
          tiny_mce_js_exec_counter[3842]++;
          a.cancel(y);
        }
        tiny_mce_js_exec_counter[3843]++;
        break;
      }
    case s:
    case r:
    case v:
      {
        if (e.onAction) 
        {
          tiny_mce_js_exec_counter[3844]++;
          e.onAction(g);
          tiny_mce_js_exec_counter[3845]++;
          a.cancel(y);
        }
        tiny_mce_js_exec_counter[3846]++;
        break;
      }
  }
  tiny_mce_js_exec_counter[3830]++;
};
  tiny_mce_js_exec_counter[3847]++;
  c(l, function(s, q) {
  tiny_mce_js_exec_counter[3848]++;
  tiny_mce_js_exec_counter[3850]++;
  var r;
  if (!s.id) 
  {
    tiny_mce_js_exec_counter[3852]++;
    s.id = f.uniqueId("_mce_item_");
  }
  if (k) 
  {
    tiny_mce_js_exec_counter[3853]++;
    f.bind(s.id, "blur", h);
    tiny_mce_js_exec_counter[3854]++;
    r = "-1";
  } else {
    tiny_mce_js_exec_counter[3855]++;
    r = (q === 0 ? "0" : "-1");
  }
  tiny_mce_js_exec_counter[3856]++;
  f.setAttrib(s.id, "tabindex", r);
  tiny_mce_js_exec_counter[3857]++;
  f.bind(f.get(s.id), "focus", j);
  tiny_mce_js_exec_counter[3849]++;
});
  if (l[0]) 
  {
    tiny_mce_js_exec_counter[3858]++;
    g = l[0].id;
  }
  tiny_mce_js_exec_counter[3859]++;
  f.setAttrib(m, "tabindex", "-1");
  tiny_mce_js_exec_counter[3860]++;
  f.bind(f.get(m), "focus", d);
  tiny_mce_js_exec_counter[3861]++;
  f.bind(f.get(m), "keydown", o);
  tiny_mce_js_exec_counter[3771]++;
}});
  tiny_mce_js_exec_counter[3766]++;
})(tinymce);
tiny_mce_js_exec_counter[3862]++;
(function(c) {
  tiny_mce_js_exec_counter[3863]++;
  tiny_mce_js_exec_counter[3865]++;
  var b = c.DOM, a = c.is;
  tiny_mce_js_exec_counter[3867]++;
  c.create("tinymce.ui.Control", {Control: function(f, e, d) {
  tiny_mce_js_exec_counter[3868]++;
  tiny_mce_js_exec_counter[3870]++;
  this.id = f;
  tiny_mce_js_exec_counter[3871]++;
  this.settings = e = e || {};
  tiny_mce_js_exec_counter[3872]++;
  this.rendered = false;
  tiny_mce_js_exec_counter[3873]++;
  this.onRender = new c.util.Dispatcher(this);
  tiny_mce_js_exec_counter[3874]++;
  this.classPrefix = "";
  tiny_mce_js_exec_counter[3875]++;
  this.scope = e.scope || this;
  tiny_mce_js_exec_counter[3876]++;
  this.disabled = 0;
  tiny_mce_js_exec_counter[3877]++;
  this.active = 0;
  tiny_mce_js_exec_counter[3878]++;
  this.editor = d;
  tiny_mce_js_exec_counter[3869]++;
}, setAriaProperty: function(f, e) {
  tiny_mce_js_exec_counter[3879]++;
  tiny_mce_js_exec_counter[3881]++;
  var d = b.get(this.id + "_aria") || b.get(this.id);
  if (d) 
  {
    tiny_mce_js_exec_counter[3883]++;
    b.setAttrib(d, "aria-" + f, !!e);
  }
  tiny_mce_js_exec_counter[3880]++;
}, focus: function() {
  tiny_mce_js_exec_counter[3884]++;
  tiny_mce_js_exec_counter[3886]++;
  b.get(this.id).focus();
  tiny_mce_js_exec_counter[3885]++;
}, setDisabled: function(d) {
  tiny_mce_js_exec_counter[3887]++;
  if (d != this.disabled) 
  {
    tiny_mce_js_exec_counter[3889]++;
    this.setAriaProperty("disabled", d);
    tiny_mce_js_exec_counter[3890]++;
    this.setState("Disabled", d);
    tiny_mce_js_exec_counter[3891]++;
    this.setState("Enabled", !d);
    tiny_mce_js_exec_counter[3892]++;
    this.disabled = d;
  }
  tiny_mce_js_exec_counter[3888]++;
}, isDisabled: function() {
  tiny_mce_js_exec_counter[3893]++;
  tiny_mce_js_exec_counter[3894]++;
  return this.disabled;
}, setActive: function(d) {
  tiny_mce_js_exec_counter[3895]++;
  if (d != this.active) 
  {
    tiny_mce_js_exec_counter[3897]++;
    this.setState("Active", d);
    tiny_mce_js_exec_counter[3898]++;
    this.active = d;
    tiny_mce_js_exec_counter[3899]++;
    this.setAriaProperty("pressed", d);
  }
  tiny_mce_js_exec_counter[3896]++;
}, isActive: function() {
  tiny_mce_js_exec_counter[3900]++;
  tiny_mce_js_exec_counter[3901]++;
  return this.active;
}, setState: function(f, d) {
  tiny_mce_js_exec_counter[3902]++;
  tiny_mce_js_exec_counter[3904]++;
  var e = b.get(this.id);
  tiny_mce_js_exec_counter[3906]++;
  f = this.classPrefix + f;
  if (d) 
  {
    tiny_mce_js_exec_counter[3907]++;
    b.addClass(e, f);
  } else {
    tiny_mce_js_exec_counter[3908]++;
    b.removeClass(e, f);
  }
  tiny_mce_js_exec_counter[3903]++;
}, isRendered: function() {
  tiny_mce_js_exec_counter[3909]++;
  tiny_mce_js_exec_counter[3910]++;
  return this.rendered;
}, renderHTML: function() {
  tiny_mce_js_exec_counter[3911]++;
  tiny_mce_js_exec_counter[3912]++;
}, renderTo: function(d) {
  tiny_mce_js_exec_counter[3913]++;
  tiny_mce_js_exec_counter[3915]++;
  b.setHTML(d, this.renderHTML());
  tiny_mce_js_exec_counter[3914]++;
}, postRender: function() {
  tiny_mce_js_exec_counter[3916]++;
  tiny_mce_js_exec_counter[3918]++;
  var e = this, d;
  if (a(e.disabled)) 
  {
    tiny_mce_js_exec_counter[3920]++;
    d = e.disabled;
    tiny_mce_js_exec_counter[3921]++;
    e.disabled = -1;
    tiny_mce_js_exec_counter[3922]++;
    e.setDisabled(d);
  }
  if (a(e.active)) 
  {
    tiny_mce_js_exec_counter[3923]++;
    d = e.active;
    tiny_mce_js_exec_counter[3924]++;
    e.active = -1;
    tiny_mce_js_exec_counter[3925]++;
    e.setActive(d);
  }
  tiny_mce_js_exec_counter[3917]++;
}, remove: function() {
  tiny_mce_js_exec_counter[3926]++;
  tiny_mce_js_exec_counter[3928]++;
  b.remove(this.id);
  tiny_mce_js_exec_counter[3929]++;
  this.destroy();
  tiny_mce_js_exec_counter[3927]++;
}, destroy: function() {
  tiny_mce_js_exec_counter[3930]++;
  tiny_mce_js_exec_counter[3932]++;
  c.dom.Event.clear(this.id);
  tiny_mce_js_exec_counter[3931]++;
}});
  tiny_mce_js_exec_counter[3864]++;
})(tinymce);
tiny_mce_js_exec_counter[3933]++;
tinymce.create("tinymce.ui.Container:tinymce.ui.Control", {Container: function(c, b, a) {
  tiny_mce_js_exec_counter[3934]++;
  tiny_mce_js_exec_counter[3936]++;
  this.parent(c, b, a);
  tiny_mce_js_exec_counter[3937]++;
  this.controls = [];
  tiny_mce_js_exec_counter[3938]++;
  this.lookup = {};
  tiny_mce_js_exec_counter[3935]++;
}, add: function(a) {
  tiny_mce_js_exec_counter[3939]++;
  tiny_mce_js_exec_counter[3940]++;
  this.lookup[a.id] = a;
  tiny_mce_js_exec_counter[3941]++;
  this.controls.push(a);
  tiny_mce_js_exec_counter[3942]++;
  return a;
}, get: function(a) {
  tiny_mce_js_exec_counter[3943]++;
  tiny_mce_js_exec_counter[3944]++;
  return this.lookup[a];
}});
tiny_mce_js_exec_counter[3945]++;
tinymce.create("tinymce.ui.Separator:tinymce.ui.Control", {Separator: function(b, a) {
  tiny_mce_js_exec_counter[3946]++;
  tiny_mce_js_exec_counter[3948]++;
  this.parent(b, a);
  tiny_mce_js_exec_counter[3949]++;
  this.classPrefix = "mceSeparator";
  tiny_mce_js_exec_counter[3950]++;
  this.setDisabled(true);
  tiny_mce_js_exec_counter[3947]++;
}, renderHTML: function() {
  tiny_mce_js_exec_counter[3951]++;
  tiny_mce_js_exec_counter[3952]++;
  return tinymce.DOM.createHTML("span", {"class": this.classPrefix, role: "separator", "aria-orientation": "vertical", tabindex: "-1"});
}});
tiny_mce_js_exec_counter[3953]++;
(function(d) {
  tiny_mce_js_exec_counter[3954]++;
  tiny_mce_js_exec_counter[3956]++;
  var c = d.is, b = d.DOM, e = d.each, a = d.walk;
  tiny_mce_js_exec_counter[3958]++;
  d.create("tinymce.ui.MenuItem:tinymce.ui.Control", {MenuItem: function(g, f) {
  tiny_mce_js_exec_counter[3959]++;
  tiny_mce_js_exec_counter[3961]++;
  this.parent(g, f);
  tiny_mce_js_exec_counter[3962]++;
  this.classPrefix = "mceMenuItem";
  tiny_mce_js_exec_counter[3960]++;
}, setSelected: function(f) {
  tiny_mce_js_exec_counter[3963]++;
  tiny_mce_js_exec_counter[3965]++;
  this.setState("Selected", f);
  tiny_mce_js_exec_counter[3966]++;
  this.setAriaProperty("checked", !!f);
  tiny_mce_js_exec_counter[3967]++;
  this.selected = f;
  tiny_mce_js_exec_counter[3964]++;
}, isSelected: function() {
  tiny_mce_js_exec_counter[3968]++;
  tiny_mce_js_exec_counter[3969]++;
  return this.selected;
}, postRender: function() {
  tiny_mce_js_exec_counter[3970]++;
  tiny_mce_js_exec_counter[3972]++;
  var f = this;
  tiny_mce_js_exec_counter[3974]++;
  f.parent();
  if (c(f.selected)) 
  {
    tiny_mce_js_exec_counter[3975]++;
    f.setSelected(f.selected);
  }
  tiny_mce_js_exec_counter[3971]++;
}});
  tiny_mce_js_exec_counter[3955]++;
})(tinymce);
tiny_mce_js_exec_counter[3976]++;
(function(d) {
  tiny_mce_js_exec_counter[3977]++;
  tiny_mce_js_exec_counter[3979]++;
  var c = d.is, b = d.DOM, e = d.each, a = d.walk;
  tiny_mce_js_exec_counter[3981]++;
  d.create("tinymce.ui.Menu:tinymce.ui.MenuItem", {Menu: function(h, g) {
  tiny_mce_js_exec_counter[3982]++;
  tiny_mce_js_exec_counter[3984]++;
  var f = this;
  tiny_mce_js_exec_counter[3986]++;
  f.parent(h, g);
  tiny_mce_js_exec_counter[3987]++;
  f.items = {};
  tiny_mce_js_exec_counter[3988]++;
  f.collapsed = false;
  tiny_mce_js_exec_counter[3989]++;
  f.menuCount = 0;
  tiny_mce_js_exec_counter[3990]++;
  f.onAddItem = new d.util.Dispatcher(this);
  tiny_mce_js_exec_counter[3983]++;
}, expand: function(g) {
  tiny_mce_js_exec_counter[3991]++;
  tiny_mce_js_exec_counter[3993]++;
  var f = this;
  if (g) 
  {
    tiny_mce_js_exec_counter[3995]++;
    a(f, function(h) {
  tiny_mce_js_exec_counter[3996]++;
  if (h.expand) 
  {
    tiny_mce_js_exec_counter[3998]++;
    h.expand();
  }
  tiny_mce_js_exec_counter[3997]++;
}, "items", f);
  }
  tiny_mce_js_exec_counter[3999]++;
  f.collapsed = false;
  tiny_mce_js_exec_counter[3992]++;
}, collapse: function(g) {
  tiny_mce_js_exec_counter[4000]++;
  tiny_mce_js_exec_counter[4002]++;
  var f = this;
  if (g) 
  {
    tiny_mce_js_exec_counter[4004]++;
    a(f, function(h) {
  tiny_mce_js_exec_counter[4005]++;
  if (h.collapse) 
  {
    tiny_mce_js_exec_counter[4007]++;
    h.collapse();
  }
  tiny_mce_js_exec_counter[4006]++;
}, "items", f);
  }
  tiny_mce_js_exec_counter[4008]++;
  f.collapsed = true;
  tiny_mce_js_exec_counter[4001]++;
}, isCollapsed: function() {
  tiny_mce_js_exec_counter[4009]++;
  tiny_mce_js_exec_counter[4010]++;
  return this.collapsed;
}, add: function(f) {
  tiny_mce_js_exec_counter[4011]++;
  if (!f.settings) 
  {
    tiny_mce_js_exec_counter[4012]++;
    f = new d.ui.MenuItem(f.id || b.uniqueId(), f);
  }
  tiny_mce_js_exec_counter[4013]++;
  this.onAddItem.dispatch(this, f);
  tiny_mce_js_exec_counter[4014]++;
  return this.items[f.id] = f;
}, addSeparator: function() {
  tiny_mce_js_exec_counter[4015]++;
  tiny_mce_js_exec_counter[4016]++;
  return this.add({separator: true});
}, addMenu: function(f) {
  tiny_mce_js_exec_counter[4017]++;
  if (!f.collapse) 
  {
    tiny_mce_js_exec_counter[4018]++;
    f = this.createMenu(f);
  }
  tiny_mce_js_exec_counter[4019]++;
  this.menuCount++;
  tiny_mce_js_exec_counter[4020]++;
  return this.add(f);
}, hasMenus: function() {
  tiny_mce_js_exec_counter[4021]++;
  tiny_mce_js_exec_counter[4022]++;
  return this.menuCount !== 0;
}, remove: function(f) {
  tiny_mce_js_exec_counter[4023]++;
  tiny_mce_js_exec_counter[4025]++;
  delete this.items[f.id];
  tiny_mce_js_exec_counter[4024]++;
}, removeAll: function() {
  tiny_mce_js_exec_counter[4026]++;
  tiny_mce_js_exec_counter[4028]++;
  var f = this;
  tiny_mce_js_exec_counter[4030]++;
  a(f, function(g) {
  tiny_mce_js_exec_counter[4031]++;
  if (g.removeAll) 
  {
    tiny_mce_js_exec_counter[4033]++;
    g.removeAll();
  } else {
    tiny_mce_js_exec_counter[4034]++;
    g.remove();
  }
  tiny_mce_js_exec_counter[4035]++;
  g.destroy();
  tiny_mce_js_exec_counter[4032]++;
}, "items", f);
  tiny_mce_js_exec_counter[4036]++;
  f.items = {};
  tiny_mce_js_exec_counter[4027]++;
}, createMenu: function(g) {
  tiny_mce_js_exec_counter[4037]++;
  tiny_mce_js_exec_counter[4038]++;
  var f = new d.ui.Menu(g.id || b.uniqueId(), g);
  tiny_mce_js_exec_counter[4040]++;
  f.onAddItem.add(this.onAddItem.dispatch, this.onAddItem);
  tiny_mce_js_exec_counter[4041]++;
  return f;
}});
  tiny_mce_js_exec_counter[3978]++;
})(tinymce);
tiny_mce_js_exec_counter[4042]++;
(function(e) {
  tiny_mce_js_exec_counter[4043]++;
  tiny_mce_js_exec_counter[4045]++;
  var d = e.is, c = e.DOM, f = e.each, a = e.dom.Event, b = e.dom.Element;
  tiny_mce_js_exec_counter[4047]++;
  e.create("tinymce.ui.DropMenu:tinymce.ui.Menu", {DropMenu: function(h, g) {
  tiny_mce_js_exec_counter[4048]++;
  tiny_mce_js_exec_counter[4050]++;
  g = g || {};
  tiny_mce_js_exec_counter[4051]++;
  g.container = g.container || c.doc.body;
  tiny_mce_js_exec_counter[4052]++;
  g.offset_x = g.offset_x || 0;
  tiny_mce_js_exec_counter[4053]++;
  g.offset_y = g.offset_y || 0;
  tiny_mce_js_exec_counter[4054]++;
  g.vp_offset_x = g.vp_offset_x || 0;
  tiny_mce_js_exec_counter[4055]++;
  g.vp_offset_y = g.vp_offset_y || 0;
  if (d(g.icons) && !g.icons) 
  {
    tiny_mce_js_exec_counter[4056]++;
    g["class"] += " mceNoIcons";
  }
  tiny_mce_js_exec_counter[4057]++;
  this.parent(h, g);
  tiny_mce_js_exec_counter[4058]++;
  this.onShowMenu = new e.util.Dispatcher(this);
  tiny_mce_js_exec_counter[4059]++;
  this.onHideMenu = new e.util.Dispatcher(this);
  tiny_mce_js_exec_counter[4060]++;
  this.classPrefix = "mceMenu";
  tiny_mce_js_exec_counter[4049]++;
}, createMenu: function(j) {
  tiny_mce_js_exec_counter[4061]++;
  tiny_mce_js_exec_counter[4062]++;
  var h = this, i = h.settings, g;
  tiny_mce_js_exec_counter[4064]++;
  j.container = j.container || i.container;
  tiny_mce_js_exec_counter[4065]++;
  j.parent = h;
  tiny_mce_js_exec_counter[4066]++;
  j.constrain = j.constrain || i.constrain;
  tiny_mce_js_exec_counter[4067]++;
  j["class"] = j["class"] || i["class"];
  tiny_mce_js_exec_counter[4068]++;
  j.vp_offset_x = j.vp_offset_x || i.vp_offset_x;
  tiny_mce_js_exec_counter[4069]++;
  j.vp_offset_y = j.vp_offset_y || i.vp_offset_y;
  tiny_mce_js_exec_counter[4070]++;
  j.keyboard_focus = i.keyboard_focus;
  tiny_mce_js_exec_counter[4071]++;
  g = new e.ui.DropMenu(j.id || c.uniqueId(), j);
  tiny_mce_js_exec_counter[4072]++;
  g.onAddItem.add(h.onAddItem.dispatch, h.onAddItem);
  tiny_mce_js_exec_counter[4073]++;
  return g;
}, focus: function() {
  tiny_mce_js_exec_counter[4074]++;
  tiny_mce_js_exec_counter[4076]++;
  var g = this;
  if (g.keyboardNav) 
  {
    tiny_mce_js_exec_counter[4078]++;
    g.keyboardNav.focus();
  }
  tiny_mce_js_exec_counter[4075]++;
}, update: function() {
  tiny_mce_js_exec_counter[4079]++;
  tiny_mce_js_exec_counter[4081]++;
  var i = this, j = i.settings, g = c.get("menu_" + i.id + "_tbl"), l = c.get("menu_" + i.id + "_co"), h, k;
  tiny_mce_js_exec_counter[4083]++;
  h = j.max_width ? Math.min(g.clientWidth, j.max_width) : g.clientWidth;
  tiny_mce_js_exec_counter[4084]++;
  k = j.max_height ? Math.min(g.clientHeight, j.max_height) : g.clientHeight;
  if (!c.boxModel) 
  {
    tiny_mce_js_exec_counter[4085]++;
    i.element.setStyles({width: h + 2, height: k + 2});
  } else {
    tiny_mce_js_exec_counter[4086]++;
    i.element.setStyles({width: h, height: k});
  }
  if (j.max_width) 
  {
    tiny_mce_js_exec_counter[4087]++;
    c.setStyle(l, "width", h);
  }
  if (j.max_height) 
  {
    tiny_mce_js_exec_counter[4088]++;
    c.setStyle(l, "height", k);
    if (g.clientHeight < j.max_height) 
    {
      tiny_mce_js_exec_counter[4089]++;
      c.setStyle(l, "overflow", "hidden");
    }
  }
  tiny_mce_js_exec_counter[4080]++;
}, showMenu: function(p, n, r) {
  tiny_mce_js_exec_counter[4090]++;
  tiny_mce_js_exec_counter[4092]++;
  var z = this, A = z.settings, o, g = c.getViewPort(), u, l, v, q, i = 2, k, j, m = z.classPrefix;
  tiny_mce_js_exec_counter[4094]++;
  z.collapse(1);
  if (z.isMenuVisible) 
  {
    tiny_mce_js_exec_counter[4095]++;
    return;
  }
  if (!z.rendered) 
  {
    tiny_mce_js_exec_counter[4096]++;
    o = c.add(z.settings.container, z.renderNode());
    tiny_mce_js_exec_counter[4097]++;
    f(z.items, function(h) {
  tiny_mce_js_exec_counter[4098]++;
  tiny_mce_js_exec_counter[4100]++;
  h.postRender();
  tiny_mce_js_exec_counter[4099]++;
});
    tiny_mce_js_exec_counter[4101]++;
    z.element = new b("menu_" + z.id, {blocker: 1, container: A.container});
  } else {
    tiny_mce_js_exec_counter[4102]++;
    o = c.get("menu_" + z.id);
  }
  if (!e.isOpera) 
  {
    tiny_mce_js_exec_counter[4103]++;
    c.setStyles(o, {left: -65535, top: -65535});
  }
  tiny_mce_js_exec_counter[4104]++;
  c.show(o);
  tiny_mce_js_exec_counter[4105]++;
  z.update();
  tiny_mce_js_exec_counter[4106]++;
  p += A.offset_x || 0;
  tiny_mce_js_exec_counter[4107]++;
  n += A.offset_y || 0;
  tiny_mce_js_exec_counter[4108]++;
  g.w -= 4;
  tiny_mce_js_exec_counter[4109]++;
  g.h -= 4;
  if (A.constrain) 
  {
    tiny_mce_js_exec_counter[4110]++;
    u = o.clientWidth - i;
    tiny_mce_js_exec_counter[4111]++;
    l = o.clientHeight - i;
    tiny_mce_js_exec_counter[4112]++;
    v = g.x + g.w;
    tiny_mce_js_exec_counter[4113]++;
    q = g.y + g.h;
    if ((p + A.vp_offset_x + u) > v) 
    {
      tiny_mce_js_exec_counter[4114]++;
      p = r ? r - u : Math.max(0, (v - A.vp_offset_x) - u);
    }
    if ((n + A.vp_offset_y + l) > q) 
    {
      tiny_mce_js_exec_counter[4115]++;
      n = Math.max(0, (q - A.vp_offset_y) - l);
    }
  }
  tiny_mce_js_exec_counter[4116]++;
  c.setStyles(o, {left: p, top: n});
  tiny_mce_js_exec_counter[4117]++;
  z.element.update();
  tiny_mce_js_exec_counter[4118]++;
  z.isMenuVisible = 1;
  tiny_mce_js_exec_counter[4119]++;
  z.mouseClickFunc = a.add(o, "click", function(s) {
  tiny_mce_js_exec_counter[4120]++;
  tiny_mce_js_exec_counter[4122]++;
  var h;
  tiny_mce_js_exec_counter[4124]++;
  s = s.target;
  if (s && (s = c.getParent(s, "tr")) && !c.hasClass(s, m + "ItemSub")) 
  {
    tiny_mce_js_exec_counter[4125]++;
    h = z.items[s.id];
    if (h.isDisabled()) 
    {
      tiny_mce_js_exec_counter[4126]++;
      return;
    }
    tiny_mce_js_exec_counter[4127]++;
    k = z;
    while (k) 
      {
        if (k.hideMenu) 
        {
          tiny_mce_js_exec_counter[4128]++;
          k.hideMenu();
        }
        tiny_mce_js_exec_counter[4129]++;
        k = k.settings.parent;
      }
    if (h.settings.onclick) 
    {
      tiny_mce_js_exec_counter[4130]++;
      h.settings.onclick(s);
    }
    tiny_mce_js_exec_counter[4131]++;
    return a.cancel(s);
  }
  tiny_mce_js_exec_counter[4121]++;
});
  if (z.hasMenus()) 
  {
    tiny_mce_js_exec_counter[4132]++;
    z.mouseOverFunc = a.add(o, "mouseover", function(x) {
  tiny_mce_js_exec_counter[4133]++;
  tiny_mce_js_exec_counter[4135]++;
  var h, t, s;
  tiny_mce_js_exec_counter[4137]++;
  x = x.target;
  if (x && (x = c.getParent(x, "tr"))) 
  {
    tiny_mce_js_exec_counter[4138]++;
    h = z.items[x.id];
    if (z.lastMenu) 
    {
      tiny_mce_js_exec_counter[4139]++;
      z.lastMenu.collapse(1);
    }
    if (h.isDisabled()) 
    {
      tiny_mce_js_exec_counter[4140]++;
      return;
    }
    if (x && c.hasClass(x, m + "ItemSub")) 
    {
      tiny_mce_js_exec_counter[4141]++;
      t = c.getRect(x);
      tiny_mce_js_exec_counter[4142]++;
      h.showMenu((t.x + t.w - i), t.y - i, t.x);
      tiny_mce_js_exec_counter[4143]++;
      z.lastMenu = h;
      tiny_mce_js_exec_counter[4144]++;
      c.addClass(c.get(h.id).firstChild, m + "ItemActive");
    }
  }
  tiny_mce_js_exec_counter[4134]++;
});
  }
  tiny_mce_js_exec_counter[4145]++;
  a.add(o, "keydown", z._keyHandler, z);
  tiny_mce_js_exec_counter[4146]++;
  z.onShowMenu.dispatch(z);
  if (A.keyboard_focus) 
  {
    tiny_mce_js_exec_counter[4147]++;
    z._setupKeyboardNav();
  }
  tiny_mce_js_exec_counter[4091]++;
}, hideMenu: function(j) {
  tiny_mce_js_exec_counter[4148]++;
  tiny_mce_js_exec_counter[4150]++;
  var g = this, i = c.get("menu_" + g.id), h;
  if (!g.isMenuVisible) 
  {
    tiny_mce_js_exec_counter[4152]++;
    return;
  }
  if (g.keyboardNav) 
  {
    tiny_mce_js_exec_counter[4153]++;
    g.keyboardNav.destroy();
  }
  tiny_mce_js_exec_counter[4154]++;
  a.remove(i, "mouseover", g.mouseOverFunc);
  tiny_mce_js_exec_counter[4155]++;
  a.remove(i, "click", g.mouseClickFunc);
  tiny_mce_js_exec_counter[4156]++;
  a.remove(i, "keydown", g._keyHandler);
  tiny_mce_js_exec_counter[4157]++;
  c.hide(i);
  tiny_mce_js_exec_counter[4158]++;
  g.isMenuVisible = 0;
  if (!j) 
  {
    tiny_mce_js_exec_counter[4159]++;
    g.collapse(1);
  }
  if (g.element) 
  {
    tiny_mce_js_exec_counter[4160]++;
    g.element.hide();
  }
  if (h = c.get(g.id)) 
  {
    tiny_mce_js_exec_counter[4161]++;
    c.removeClass(h.firstChild, g.classPrefix + "ItemActive");
  }
  tiny_mce_js_exec_counter[4162]++;
  g.onHideMenu.dispatch(g);
  tiny_mce_js_exec_counter[4149]++;
}, add: function(i) {
  tiny_mce_js_exec_counter[4163]++;
  tiny_mce_js_exec_counter[4164]++;
  var g = this, h;
  tiny_mce_js_exec_counter[4166]++;
  i = g.parent(i);
  if (g.isRendered && (h = c.get("menu_" + g.id))) 
  {
    tiny_mce_js_exec_counter[4167]++;
    g._add(c.select("tbody", h)[0], i);
  }
  tiny_mce_js_exec_counter[4168]++;
  return i;
}, collapse: function(g) {
  tiny_mce_js_exec_counter[4169]++;
  tiny_mce_js_exec_counter[4171]++;
  this.parent(g);
  tiny_mce_js_exec_counter[4172]++;
  this.hideMenu(1);
  tiny_mce_js_exec_counter[4170]++;
}, remove: function(g) {
  tiny_mce_js_exec_counter[4173]++;
  tiny_mce_js_exec_counter[4174]++;
  c.remove(g.id);
  tiny_mce_js_exec_counter[4175]++;
  this.destroy();
  tiny_mce_js_exec_counter[4176]++;
  return this.parent(g);
}, destroy: function() {
  tiny_mce_js_exec_counter[4177]++;
  tiny_mce_js_exec_counter[4179]++;
  var g = this, h = c.get("menu_" + g.id);
  if (g.keyboardNav) 
  {
    tiny_mce_js_exec_counter[4181]++;
    g.keyboardNav.destroy();
  }
  tiny_mce_js_exec_counter[4182]++;
  a.remove(h, "mouseover", g.mouseOverFunc);
  tiny_mce_js_exec_counter[4183]++;
  a.remove(c.select("a", h), "focus", g.mouseOverFunc);
  tiny_mce_js_exec_counter[4184]++;
  a.remove(h, "click", g.mouseClickFunc);
  tiny_mce_js_exec_counter[4185]++;
  a.remove(h, "keydown", g._keyHandler);
  if (g.element) 
  {
    tiny_mce_js_exec_counter[4186]++;
    g.element.remove();
  }
  tiny_mce_js_exec_counter[4187]++;
  c.remove(h);
  tiny_mce_js_exec_counter[4178]++;
}, renderNode: function() {
  tiny_mce_js_exec_counter[4188]++;
  tiny_mce_js_exec_counter[4189]++;
  var i = this, j = i.settings, l, h, k, g;
  tiny_mce_js_exec_counter[4191]++;
  g = c.create("div", {role: "listbox", id: "menu_" + i.id, "class": j["class"], style: "position:absolute;left:0;top:0;z-index:200000;outline:0"});
  if (i.settings.parent) 
  {
    tiny_mce_js_exec_counter[4192]++;
    c.setAttrib(g, "aria-parent", "menu_" + i.settings.parent.id);
  }
  tiny_mce_js_exec_counter[4193]++;
  k = c.add(g, "div", {role: "presentation", id: "menu_" + i.id + "_co", "class": i.classPrefix + (j["class"] ? " " + j["class"] : "")});
  tiny_mce_js_exec_counter[4194]++;
  i.element = new b("menu_" + i.id, {blocker: 1, container: j.container});
  if (j.menu_line) 
  {
    tiny_mce_js_exec_counter[4195]++;
    c.add(k, "span", {"class": i.classPrefix + "Line"});
  }
  tiny_mce_js_exec_counter[4196]++;
  l = c.add(k, "table", {role: "presentation", id: "menu_" + i.id + "_tbl", border: 0, cellPadding: 0, cellSpacing: 0});
  tiny_mce_js_exec_counter[4197]++;
  h = c.add(l, "tbody");
  tiny_mce_js_exec_counter[4198]++;
  f(i.items, function(m) {
  tiny_mce_js_exec_counter[4199]++;
  tiny_mce_js_exec_counter[4201]++;
  i._add(h, m);
  tiny_mce_js_exec_counter[4200]++;
});
  tiny_mce_js_exec_counter[4202]++;
  i.rendered = true;
  tiny_mce_js_exec_counter[4203]++;
  return g;
}, _setupKeyboardNav: function() {
  tiny_mce_js_exec_counter[4204]++;
  tiny_mce_js_exec_counter[4206]++;
  var i, h, g = this;
  tiny_mce_js_exec_counter[4208]++;
  i = c.select("#menu_" + g.id)[0];
  tiny_mce_js_exec_counter[4209]++;
  h = c.select("a[role=option]", "menu_" + g.id);
  tiny_mce_js_exec_counter[4210]++;
  h.splice(0, 0, i);
  tiny_mce_js_exec_counter[4211]++;
  g.keyboardNav = new e.ui.KeyboardNavigation({root: "menu_" + g.id, items: h, onCancel: function() {
  tiny_mce_js_exec_counter[4212]++;
  tiny_mce_js_exec_counter[4214]++;
  g.hideMenu();
  tiny_mce_js_exec_counter[4213]++;
}, enableUpDown: true});
  tiny_mce_js_exec_counter[4215]++;
  i.focus();
  tiny_mce_js_exec_counter[4205]++;
}, _keyHandler: function(g) {
  tiny_mce_js_exec_counter[4216]++;
  tiny_mce_js_exec_counter[4218]++;
  var h = this, i;
  switch (g.keyCode) {
    case 37:
      {
        if (h.settings.parent) 
        {
          tiny_mce_js_exec_counter[4220]++;
          h.hideMenu();
          tiny_mce_js_exec_counter[4221]++;
          h.settings.parent.focus();
          tiny_mce_js_exec_counter[4222]++;
          a.cancel(g);
        }
        tiny_mce_js_exec_counter[4223]++;
        break;
      }
    case 39:
      {
        if (h.mouseOverFunc) 
        {
          tiny_mce_js_exec_counter[4224]++;
          h.mouseOverFunc(g);
        }
        tiny_mce_js_exec_counter[4225]++;
        break;
      }
  }
  tiny_mce_js_exec_counter[4217]++;
}, _add: function(j, h) {
  tiny_mce_js_exec_counter[4226]++;
  tiny_mce_js_exec_counter[4228]++;
  var i, q = h.settings, p, l, k, m = this.classPrefix, g;
  if (q.separator) 
  {
    tiny_mce_js_exec_counter[4230]++;
    l = c.add(j, "tr", {id: h.id, "class": m + "ItemSeparator"});
    tiny_mce_js_exec_counter[4231]++;
    c.add(l, "td", {"class": m + "ItemSeparator"});
    if (i = l.previousSibling) 
    {
      tiny_mce_js_exec_counter[4232]++;
      c.addClass(i, "mceLast");
    }
    tiny_mce_js_exec_counter[4233]++;
    return;
  }
  tiny_mce_js_exec_counter[4234]++;
  i = l = c.add(j, "tr", {id: h.id, "class": m + "Item " + m + "ItemEnabled"});
  tiny_mce_js_exec_counter[4235]++;
  i = k = c.add(i, q.titleItem ? "th" : "td");
  tiny_mce_js_exec_counter[4236]++;
  i = p = c.add(i, "a", {id: h.id + "_aria", role: q.titleItem ? "presentation" : "option", href: "javascript:;", onclick: "return false;", onmousedown: "return false;"});
  if (q.parent) 
  {
    tiny_mce_js_exec_counter[4237]++;
    c.setAttrib(p, "aria-haspopup", "true");
    tiny_mce_js_exec_counter[4238]++;
    c.setAttrib(p, "aria-owns", "menu_" + h.id);
  }
  tiny_mce_js_exec_counter[4239]++;
  c.addClass(k, q["class"]);
  tiny_mce_js_exec_counter[4240]++;
  g = c.add(i, "span", {"class": "mceIcon" + (q.icon ? " mce_" + q.icon : "")});
  if (q.icon_src) 
  {
    tiny_mce_js_exec_counter[4241]++;
    c.add(g, "img", {src: q.icon_src});
  }
  tiny_mce_js_exec_counter[4242]++;
  i = c.add(i, q.element || "span", {"class": "mceText", title: h.settings.title}, h.settings.title);
  if (h.settings.style) 
  {
    tiny_mce_js_exec_counter[4243]++;
    c.setAttrib(i, "style", h.settings.style);
  }
  if (j.childNodes.length == 1) 
  {
    tiny_mce_js_exec_counter[4244]++;
    c.addClass(l, "mceFirst");
  }
  if ((i = l.previousSibling) && c.hasClass(i, m + "ItemSeparator")) 
  {
    tiny_mce_js_exec_counter[4245]++;
    c.addClass(l, "mceFirst");
  }
  if (h.collapse) 
  {
    tiny_mce_js_exec_counter[4246]++;
    c.addClass(l, m + "ItemSub");
  }
  if (i = l.previousSibling) 
  {
    tiny_mce_js_exec_counter[4247]++;
    c.removeClass(i, "mceLast");
  }
  tiny_mce_js_exec_counter[4248]++;
  c.addClass(l, "mceLast");
  tiny_mce_js_exec_counter[4227]++;
}});
  tiny_mce_js_exec_counter[4044]++;
})(tinymce);
tiny_mce_js_exec_counter[4249]++;
(function(b) {
  tiny_mce_js_exec_counter[4250]++;
  tiny_mce_js_exec_counter[4252]++;
  var a = b.DOM;
  tiny_mce_js_exec_counter[4254]++;
  b.create("tinymce.ui.Button:tinymce.ui.Control", {Button: function(e, d, c) {
  tiny_mce_js_exec_counter[4255]++;
  tiny_mce_js_exec_counter[4257]++;
  this.parent(e, d, c);
  tiny_mce_js_exec_counter[4258]++;
  this.classPrefix = "mceButton";
  tiny_mce_js_exec_counter[4256]++;
}, renderHTML: function() {
  tiny_mce_js_exec_counter[4259]++;
  tiny_mce_js_exec_counter[4260]++;
  var f = this.classPrefix, e = this.settings, d, c;
  tiny_mce_js_exec_counter[4262]++;
  c = a.encode(e.label || "");
  tiny_mce_js_exec_counter[4263]++;
  d = '<a role="button" id="' + this.id + '" href="javascript:;" class="' + f + " " + f + "Enabled " + e["class"] + (c ? " " + f + "Labeled" : "") + '" onmousedown="return false;" onclick="return false;" aria-labelledby="' + this.id + '_voice" title="' + a.encode(e.title) + '">';
  if (e.image) 
  {
    tiny_mce_js_exec_counter[4264]++;
    d += '<img class="mceIcon" src="' + e.image + '" alt="' + a.encode(e.title) + '" />' + c;
  } else {
    tiny_mce_js_exec_counter[4265]++;
    d += '<span class="mceIcon ' + e["class"] + '"></span>' + (c ? '<span class="' + f + 'Label">' + c + "</span>" : "");
  }
  tiny_mce_js_exec_counter[4266]++;
  d += '<span class="mceVoiceLabel mceIconOnly" style="display: none;" id="' + this.id + '_voice">' + e.title + "</span>";
  tiny_mce_js_exec_counter[4267]++;
  d += "</a>";
  tiny_mce_js_exec_counter[4268]++;
  return d;
}, postRender: function() {
  tiny_mce_js_exec_counter[4269]++;
  tiny_mce_js_exec_counter[4271]++;
  var c = this, d = c.settings;
  tiny_mce_js_exec_counter[4273]++;
  b.dom.Event.add(c.id, "click", function(f) {
  tiny_mce_js_exec_counter[4274]++;
  if (!c.isDisabled()) 
  {
    tiny_mce_js_exec_counter[4276]++;
    return d.onclick.call(d.scope, f);
  }
  tiny_mce_js_exec_counter[4275]++;
});
  tiny_mce_js_exec_counter[4270]++;
}});
  tiny_mce_js_exec_counter[4251]++;
})(tinymce);
tiny_mce_js_exec_counter[4277]++;
(function(d) {
  tiny_mce_js_exec_counter[4278]++;
  tiny_mce_js_exec_counter[4280]++;
  var c = d.DOM, b = d.dom.Event, e = d.each, a = d.util.Dispatcher;
  tiny_mce_js_exec_counter[4282]++;
  d.create("tinymce.ui.ListBox:tinymce.ui.Control", {ListBox: function(i, h, f) {
  tiny_mce_js_exec_counter[4283]++;
  tiny_mce_js_exec_counter[4285]++;
  var g = this;
  tiny_mce_js_exec_counter[4287]++;
  g.parent(i, h, f);
  tiny_mce_js_exec_counter[4288]++;
  g.items = [];
  tiny_mce_js_exec_counter[4289]++;
  g.onChange = new a(g);
  tiny_mce_js_exec_counter[4290]++;
  g.onPostRender = new a(g);
  tiny_mce_js_exec_counter[4291]++;
  g.onAdd = new a(g);
  tiny_mce_js_exec_counter[4292]++;
  g.onRenderMenu = new d.util.Dispatcher(this);
  tiny_mce_js_exec_counter[4293]++;
  g.classPrefix = "mceListBox";
  tiny_mce_js_exec_counter[4284]++;
}, select: function(h) {
  tiny_mce_js_exec_counter[4294]++;
  tiny_mce_js_exec_counter[4296]++;
  var g = this, j, i;
  if (h == undefined) 
  {
    tiny_mce_js_exec_counter[4298]++;
    return g.selectByIndex(-1);
  }
  if (h && h.call) 
  {
    tiny_mce_js_exec_counter[4299]++;
    i = h;
  } else {
    tiny_mce_js_exec_counter[4300]++;
    i = function(f) {
  tiny_mce_js_exec_counter[4301]++;
  tiny_mce_js_exec_counter[4302]++;
  return f == h;
};
  }
  if (h != g.selectedValue) 
  {
    tiny_mce_js_exec_counter[4303]++;
    e(g.items, function(k, f) {
  tiny_mce_js_exec_counter[4304]++;
  if (i(k.value)) 
  {
    tiny_mce_js_exec_counter[4306]++;
    j = 1;
    tiny_mce_js_exec_counter[4307]++;
    g.selectByIndex(f);
    tiny_mce_js_exec_counter[4308]++;
    return false;
  }
  tiny_mce_js_exec_counter[4305]++;
});
    if (!j) 
    {
      tiny_mce_js_exec_counter[4309]++;
      g.selectByIndex(-1);
    }
  }
  tiny_mce_js_exec_counter[4295]++;
}, selectByIndex: function(f) {
  tiny_mce_js_exec_counter[4310]++;
  tiny_mce_js_exec_counter[4312]++;
  var g = this, h, i;
  if (f != g.selectedIndex) 
  {
    tiny_mce_js_exec_counter[4314]++;
    h = c.get(g.id + "_text");
    tiny_mce_js_exec_counter[4315]++;
    i = g.items[f];
    if (i) 
    {
      tiny_mce_js_exec_counter[4316]++;
      g.selectedValue = i.value;
      tiny_mce_js_exec_counter[4317]++;
      g.selectedIndex = f;
      tiny_mce_js_exec_counter[4318]++;
      c.setHTML(h, c.encode(i.title));
      tiny_mce_js_exec_counter[4319]++;
      c.removeClass(h, "mceTitle");
      tiny_mce_js_exec_counter[4320]++;
      c.setAttrib(g.id, "aria-valuenow", i.title);
    } else {
      tiny_mce_js_exec_counter[4321]++;
      c.setHTML(h, c.encode(g.settings.title));
      tiny_mce_js_exec_counter[4322]++;
      c.addClass(h, "mceTitle");
      tiny_mce_js_exec_counter[4323]++;
      g.selectedValue = g.selectedIndex = null;
      tiny_mce_js_exec_counter[4324]++;
      c.setAttrib(g.id, "aria-valuenow", g.settings.title);
    }
    tiny_mce_js_exec_counter[4325]++;
    h = 0;
  }
  tiny_mce_js_exec_counter[4311]++;
}, add: function(i, f, h) {
  tiny_mce_js_exec_counter[4326]++;
  tiny_mce_js_exec_counter[4328]++;
  var g = this;
  tiny_mce_js_exec_counter[4330]++;
  h = h || {};
  tiny_mce_js_exec_counter[4331]++;
  h = d.extend(h, {title: i, value: f});
  tiny_mce_js_exec_counter[4332]++;
  g.items.push(h);
  tiny_mce_js_exec_counter[4333]++;
  g.onAdd.dispatch(g, h);
  tiny_mce_js_exec_counter[4327]++;
}, getLength: function() {
  tiny_mce_js_exec_counter[4334]++;
  tiny_mce_js_exec_counter[4335]++;
  return this.items.length;
}, renderHTML: function() {
  tiny_mce_js_exec_counter[4336]++;
  tiny_mce_js_exec_counter[4337]++;
  var i = "", f = this, g = f.settings, j = f.classPrefix;
  tiny_mce_js_exec_counter[4339]++;
  i = '<span role="button" aria-haspopup="true" aria-labelledby="' + f.id + '_text" aria-describedby="' + f.id + '_voiceDesc"><table role="presentation" tabindex="0" id="' + f.id + '" cellpadding="0" cellspacing="0" class="' + j + " " + j + "Enabled" + (g["class"] ? (" " + g["class"]) : "") + '"><tbody><tr>';
  tiny_mce_js_exec_counter[4340]++;
  i += "<td>" + c.createHTML("span", {id: f.id + "_voiceDesc", "class": "voiceLabel", style: "display:none;"}, f.settings.title);
  tiny_mce_js_exec_counter[4341]++;
  i += c.createHTML("a", {id: f.id + "_text", tabindex: -1, href: "javascript:;", "class": "mceText", onclick: "return false;", onmousedown: "return false;"}, c.encode(f.settings.title)) + "</td>";
  tiny_mce_js_exec_counter[4342]++;
  i += "<td>" + c.createHTML("a", {id: f.id + "_open", tabindex: -1, href: "javascript:;", "class": "mceOpen", onclick: "return false;", onmousedown: "return false;"}, '<span><span style="display:none;" class="mceIconOnly" aria-hidden="true">\u25bc</span></span>') + "</td>";
  tiny_mce_js_exec_counter[4343]++;
  i += "</tr></tbody></table></span>";
  tiny_mce_js_exec_counter[4344]++;
  return i;
}, showMenu: function() {
  tiny_mce_js_exec_counter[4345]++;
  tiny_mce_js_exec_counter[4347]++;
  var g = this, j, i, h = c.get(this.id), f;
  if (g.isDisabled() || g.items.length == 0) 
  {
    tiny_mce_js_exec_counter[4349]++;
    return;
  }
  if (g.menu && g.menu.isMenuVisible) 
  {
    tiny_mce_js_exec_counter[4350]++;
    return g.hideMenu();
  }
  if (!g.isMenuRendered) 
  {
    tiny_mce_js_exec_counter[4351]++;
    g.renderMenu();
    tiny_mce_js_exec_counter[4352]++;
    g.isMenuRendered = true;
  }
  tiny_mce_js_exec_counter[4353]++;
  j = c.getPos(this.settings.menu_container);
  tiny_mce_js_exec_counter[4354]++;
  i = c.getPos(h);
  tiny_mce_js_exec_counter[4355]++;
  f = g.menu;
  tiny_mce_js_exec_counter[4356]++;
  f.settings.offset_x = i.x;
  tiny_mce_js_exec_counter[4357]++;
  f.settings.offset_y = i.y;
  tiny_mce_js_exec_counter[4358]++;
  f.settings.keyboard_focus = !d.isOpera;
  if (g.oldID) 
  {
    tiny_mce_js_exec_counter[4359]++;
    f.items[g.oldID].setSelected(0);
  }
  tiny_mce_js_exec_counter[4360]++;
  e(g.items, function(k) {
  tiny_mce_js_exec_counter[4361]++;
  if (k.value === g.selectedValue) 
  {
    tiny_mce_js_exec_counter[4363]++;
    f.items[k.id].setSelected(1);
    tiny_mce_js_exec_counter[4364]++;
    g.oldID = k.id;
  }
  tiny_mce_js_exec_counter[4362]++;
});
  tiny_mce_js_exec_counter[4365]++;
  f.showMenu(0, h.clientHeight);
  tiny_mce_js_exec_counter[4366]++;
  b.add(c.doc, "mousedown", g.hideMenu, g);
  tiny_mce_js_exec_counter[4367]++;
  c.addClass(g.id, g.classPrefix + "Selected");
  tiny_mce_js_exec_counter[4346]++;
}, hideMenu: function(g) {
  tiny_mce_js_exec_counter[4368]++;
  tiny_mce_js_exec_counter[4370]++;
  var f = this;
  if (f.menu && f.menu.isMenuVisible) 
  {
    tiny_mce_js_exec_counter[4372]++;
    c.removeClass(f.id, f.classPrefix + "Selected");
    if (g && g.type == "mousedown" && (g.target.id == f.id + "_text" || g.target.id == f.id + "_open")) 
    {
      tiny_mce_js_exec_counter[4373]++;
      return;
    }
    if (!g || !c.getParent(g.target, ".mceMenu")) 
    {
      tiny_mce_js_exec_counter[4374]++;
      c.removeClass(f.id, f.classPrefix + "Selected");
      tiny_mce_js_exec_counter[4375]++;
      b.remove(c.doc, "mousedown", f.hideMenu, f);
      tiny_mce_js_exec_counter[4376]++;
      f.menu.hideMenu();
    }
  }
  tiny_mce_js_exec_counter[4369]++;
}, renderMenu: function() {
  tiny_mce_js_exec_counter[4377]++;
  tiny_mce_js_exec_counter[4379]++;
  var g = this, f;
  tiny_mce_js_exec_counter[4381]++;
  f = g.settings.control_manager.createDropMenu(g.id + "_menu", {menu_line: 1, "class": g.classPrefix + "Menu mceNoIcons", max_width: 150, max_height: 150});
  tiny_mce_js_exec_counter[4382]++;
  f.onHideMenu.add(function() {
  tiny_mce_js_exec_counter[4383]++;
  tiny_mce_js_exec_counter[4385]++;
  g.hideMenu();
  tiny_mce_js_exec_counter[4386]++;
  g.focus();
  tiny_mce_js_exec_counter[4384]++;
});
  tiny_mce_js_exec_counter[4387]++;
  f.add({title: g.settings.title, "class": "mceMenuItemTitle", onclick: function() {
  tiny_mce_js_exec_counter[4388]++;
  if (g.settings.onselect("") !== false) 
  {
    tiny_mce_js_exec_counter[4390]++;
    g.select("");
  }
  tiny_mce_js_exec_counter[4389]++;
}});
  tiny_mce_js_exec_counter[4391]++;
  e(g.items, function(h) {
  tiny_mce_js_exec_counter[4392]++;
  if (h.value === undefined) 
  {
    tiny_mce_js_exec_counter[4394]++;
    f.add({title: h.title, "class": "mceMenuItemTitle", onclick: function() {
  tiny_mce_js_exec_counter[4395]++;
  if (g.settings.onselect("") !== false) 
  {
    tiny_mce_js_exec_counter[4397]++;
    g.select("");
  }
  tiny_mce_js_exec_counter[4396]++;
}});
  } else {
    tiny_mce_js_exec_counter[4398]++;
    h.id = c.uniqueId();
    tiny_mce_js_exec_counter[4399]++;
    h.onclick = function() {
  tiny_mce_js_exec_counter[4400]++;
  if (g.settings.onselect(h.value) !== false) 
  {
    tiny_mce_js_exec_counter[4402]++;
    g.select(h.value);
  }
  tiny_mce_js_exec_counter[4401]++;
};
    tiny_mce_js_exec_counter[4403]++;
    f.add(h);
  }
  tiny_mce_js_exec_counter[4393]++;
});
  tiny_mce_js_exec_counter[4404]++;
  g.onRenderMenu.dispatch(g, f);
  tiny_mce_js_exec_counter[4405]++;
  g.menu = f;
  tiny_mce_js_exec_counter[4378]++;
}, postRender: function() {
  tiny_mce_js_exec_counter[4406]++;
  tiny_mce_js_exec_counter[4408]++;
  var f = this, g = f.classPrefix;
  tiny_mce_js_exec_counter[4410]++;
  b.add(f.id, "click", f.showMenu, f);
  tiny_mce_js_exec_counter[4411]++;
  b.add(f.id, "keydown", function(h) {
  tiny_mce_js_exec_counter[4412]++;
  if (h.keyCode == 32) 
  {
    tiny_mce_js_exec_counter[4414]++;
    f.showMenu(h);
    tiny_mce_js_exec_counter[4415]++;
    b.cancel(h);
  }
  tiny_mce_js_exec_counter[4413]++;
});
  tiny_mce_js_exec_counter[4416]++;
  b.add(f.id, "focus", function() {
  tiny_mce_js_exec_counter[4417]++;
  if (!f._focused) 
  {
    tiny_mce_js_exec_counter[4419]++;
    f.keyDownHandler = b.add(f.id, "keydown", function(h) {
  tiny_mce_js_exec_counter[4420]++;
  if (h.keyCode == 40) 
  {
    tiny_mce_js_exec_counter[4422]++;
    f.showMenu();
    tiny_mce_js_exec_counter[4423]++;
    b.cancel(h);
  }
  tiny_mce_js_exec_counter[4421]++;
});
    tiny_mce_js_exec_counter[4424]++;
    f.keyPressHandler = b.add(f.id, "keypress", function(i) {
  tiny_mce_js_exec_counter[4425]++;
  tiny_mce_js_exec_counter[4427]++;
  var h;
  if (i.keyCode == 13) 
  {
    tiny_mce_js_exec_counter[4429]++;
    h = f.selectedValue;
    tiny_mce_js_exec_counter[4430]++;
    f.selectedValue = null;
    tiny_mce_js_exec_counter[4431]++;
    b.cancel(i);
    tiny_mce_js_exec_counter[4432]++;
    f.settings.onselect(h);
  }
  tiny_mce_js_exec_counter[4426]++;
});
  }
  tiny_mce_js_exec_counter[4433]++;
  f._focused = 1;
  tiny_mce_js_exec_counter[4418]++;
});
  tiny_mce_js_exec_counter[4434]++;
  b.add(f.id, "blur", function() {
  tiny_mce_js_exec_counter[4435]++;
  tiny_mce_js_exec_counter[4437]++;
  b.remove(f.id, "keydown", f.keyDownHandler);
  tiny_mce_js_exec_counter[4438]++;
  b.remove(f.id, "keypress", f.keyPressHandler);
  tiny_mce_js_exec_counter[4439]++;
  f._focused = 0;
  tiny_mce_js_exec_counter[4436]++;
});
  if (d.isIE6 || !c.boxModel) 
  {
    tiny_mce_js_exec_counter[4440]++;
    b.add(f.id, "mouseover", function() {
  tiny_mce_js_exec_counter[4441]++;
  if (!c.hasClass(f.id, g + "Disabled")) 
  {
    tiny_mce_js_exec_counter[4443]++;
    c.addClass(f.id, g + "Hover");
  }
  tiny_mce_js_exec_counter[4442]++;
});
    tiny_mce_js_exec_counter[4444]++;
    b.add(f.id, "mouseout", function() {
  tiny_mce_js_exec_counter[4445]++;
  if (!c.hasClass(f.id, g + "Disabled")) 
  {
    tiny_mce_js_exec_counter[4447]++;
    c.removeClass(f.id, g + "Hover");
  }
  tiny_mce_js_exec_counter[4446]++;
});
  }
  tiny_mce_js_exec_counter[4448]++;
  f.onPostRender.dispatch(f, c.get(f.id));
  tiny_mce_js_exec_counter[4407]++;
}, destroy: function() {
  tiny_mce_js_exec_counter[4449]++;
  tiny_mce_js_exec_counter[4451]++;
  this.parent();
  tiny_mce_js_exec_counter[4452]++;
  b.clear(this.id + "_text");
  tiny_mce_js_exec_counter[4453]++;
  b.clear(this.id + "_open");
  tiny_mce_js_exec_counter[4450]++;
}});
  tiny_mce_js_exec_counter[4279]++;
})(tinymce);
tiny_mce_js_exec_counter[4454]++;
(function(d) {
  tiny_mce_js_exec_counter[4455]++;
  tiny_mce_js_exec_counter[4457]++;
  var c = d.DOM, b = d.dom.Event, e = d.each, a = d.util.Dispatcher;
  tiny_mce_js_exec_counter[4459]++;
  d.create("tinymce.ui.NativeListBox:tinymce.ui.ListBox", {NativeListBox: function(g, f) {
  tiny_mce_js_exec_counter[4460]++;
  tiny_mce_js_exec_counter[4462]++;
  this.parent(g, f);
  tiny_mce_js_exec_counter[4463]++;
  this.classPrefix = "mceNativeListBox";
  tiny_mce_js_exec_counter[4461]++;
}, setDisabled: function(f) {
  tiny_mce_js_exec_counter[4464]++;
  tiny_mce_js_exec_counter[4466]++;
  c.get(this.id).disabled = f;
  tiny_mce_js_exec_counter[4467]++;
  this.setAriaProperty("disabled", f);
  tiny_mce_js_exec_counter[4465]++;
}, isDisabled: function() {
  tiny_mce_js_exec_counter[4468]++;
  tiny_mce_js_exec_counter[4469]++;
  return c.get(this.id).disabled;
}, select: function(h) {
  tiny_mce_js_exec_counter[4470]++;
  tiny_mce_js_exec_counter[4472]++;
  var g = this, j, i;
  if (h == undefined) 
  {
    tiny_mce_js_exec_counter[4474]++;
    return g.selectByIndex(-1);
  }
  if (h && h.call) 
  {
    tiny_mce_js_exec_counter[4475]++;
    i = h;
  } else {
    tiny_mce_js_exec_counter[4476]++;
    i = function(f) {
  tiny_mce_js_exec_counter[4477]++;
  tiny_mce_js_exec_counter[4478]++;
  return f == h;
};
  }
  if (h != g.selectedValue) 
  {
    tiny_mce_js_exec_counter[4479]++;
    e(g.items, function(k, f) {
  tiny_mce_js_exec_counter[4480]++;
  if (i(k.value)) 
  {
    tiny_mce_js_exec_counter[4482]++;
    j = 1;
    tiny_mce_js_exec_counter[4483]++;
    g.selectByIndex(f);
    tiny_mce_js_exec_counter[4484]++;
    return false;
  }
  tiny_mce_js_exec_counter[4481]++;
});
    if (!j) 
    {
      tiny_mce_js_exec_counter[4485]++;
      g.selectByIndex(-1);
    }
  }
  tiny_mce_js_exec_counter[4471]++;
}, selectByIndex: function(f) {
  tiny_mce_js_exec_counter[4486]++;
  tiny_mce_js_exec_counter[4488]++;
  c.get(this.id).selectedIndex = f + 1;
  tiny_mce_js_exec_counter[4489]++;
  this.selectedValue = this.items[f] ? this.items[f].value : null;
  tiny_mce_js_exec_counter[4487]++;
}, add: function(j, g, f) {
  tiny_mce_js_exec_counter[4490]++;
  tiny_mce_js_exec_counter[4492]++;
  var i, h = this;
  tiny_mce_js_exec_counter[4494]++;
  f = f || {};
  tiny_mce_js_exec_counter[4495]++;
  f.value = g;
  if (h.isRendered()) 
  {
    tiny_mce_js_exec_counter[4496]++;
    c.add(c.get(this.id), "option", f, j);
  }
  tiny_mce_js_exec_counter[4497]++;
  i = {title: j, value: g, attribs: f};
  tiny_mce_js_exec_counter[4498]++;
  h.items.push(i);
  tiny_mce_js_exec_counter[4499]++;
  h.onAdd.dispatch(h, i);
  tiny_mce_js_exec_counter[4491]++;
}, getLength: function() {
  tiny_mce_js_exec_counter[4500]++;
  tiny_mce_js_exec_counter[4501]++;
  return this.items.length;
}, renderHTML: function() {
  tiny_mce_js_exec_counter[4502]++;
  tiny_mce_js_exec_counter[4503]++;
  var g, f = this;
  tiny_mce_js_exec_counter[4505]++;
  g = c.createHTML("option", {value: ""}, "-- " + f.settings.title + " --");
  tiny_mce_js_exec_counter[4506]++;
  e(f.items, function(h) {
  tiny_mce_js_exec_counter[4507]++;
  tiny_mce_js_exec_counter[4509]++;
  g += c.createHTML("option", {value: h.value}, h.title);
  tiny_mce_js_exec_counter[4508]++;
});
  tiny_mce_js_exec_counter[4510]++;
  g = c.createHTML("select", {id: f.id, "class": "mceNativeListBox", "aria-labelledby": f.id + "_aria"}, g);
  tiny_mce_js_exec_counter[4511]++;
  g += c.createHTML("span", {id: f.id + "_aria", style: "display: none"}, f.settings.title);
  tiny_mce_js_exec_counter[4512]++;
  return g;
}, postRender: function() {
  tiny_mce_js_exec_counter[4513]++;
  tiny_mce_js_exec_counter[4515]++;
  var g = this, h, i = true;
  tiny_mce_js_exec_counter[4517]++;
  g.rendered = true;
  function f(k) {
    tiny_mce_js_exec_counter[4518]++;
    tiny_mce_js_exec_counter[4520]++;
    var j = g.items[k.target.selectedIndex - 1];
    if (j && (j = j.value)) 
    {
      tiny_mce_js_exec_counter[4522]++;
      g.onChange.dispatch(g, j);
      if (g.settings.onselect) 
      {
        tiny_mce_js_exec_counter[4523]++;
        g.settings.onselect(j);
      }
    }
    tiny_mce_js_exec_counter[4519]++;
  }
  tiny_mce_js_exec_counter[4524]++;
  b.add(g.id, "change", f);
  tiny_mce_js_exec_counter[4525]++;
  b.add(g.id, "keydown", function(k) {
  tiny_mce_js_exec_counter[4526]++;
  tiny_mce_js_exec_counter[4528]++;
  var j;
  tiny_mce_js_exec_counter[4530]++;
  b.remove(g.id, "change", h);
  tiny_mce_js_exec_counter[4531]++;
  i = false;
  tiny_mce_js_exec_counter[4532]++;
  j = b.add(g.id, "blur", function() {
  tiny_mce_js_exec_counter[4533]++;
  if (i) 
  {
    tiny_mce_js_exec_counter[4535]++;
    return;
  }
  tiny_mce_js_exec_counter[4536]++;
  i = true;
  tiny_mce_js_exec_counter[4537]++;
  b.add(g.id, "change", f);
  tiny_mce_js_exec_counter[4538]++;
  b.remove(g.id, "blur", j);
  tiny_mce_js_exec_counter[4534]++;
});
  if (k.keyCode == 13 || k.keyCode == 32) 
  {
    tiny_mce_js_exec_counter[4539]++;
    f(k);
    tiny_mce_js_exec_counter[4540]++;
    return b.cancel(k);
  }
  tiny_mce_js_exec_counter[4527]++;
});
  tiny_mce_js_exec_counter[4541]++;
  g.onPostRender.dispatch(g, c.get(g.id));
  tiny_mce_js_exec_counter[4514]++;
}});
  tiny_mce_js_exec_counter[4456]++;
})(tinymce);
tiny_mce_js_exec_counter[4542]++;
(function(c) {
  tiny_mce_js_exec_counter[4543]++;
  tiny_mce_js_exec_counter[4545]++;
  var b = c.DOM, a = c.dom.Event, d = c.each;
  tiny_mce_js_exec_counter[4547]++;
  c.create("tinymce.ui.MenuButton:tinymce.ui.Button", {MenuButton: function(g, f, e) {
  tiny_mce_js_exec_counter[4548]++;
  tiny_mce_js_exec_counter[4550]++;
  this.parent(g, f, e);
  tiny_mce_js_exec_counter[4551]++;
  this.onRenderMenu = new c.util.Dispatcher(this);
  tiny_mce_js_exec_counter[4552]++;
  f.menu_container = f.menu_container || b.doc.body;
  tiny_mce_js_exec_counter[4549]++;
}, showMenu: function() {
  tiny_mce_js_exec_counter[4553]++;
  tiny_mce_js_exec_counter[4555]++;
  var g = this, j, i, h = b.get(g.id), f;
  if (g.isDisabled()) 
  {
    tiny_mce_js_exec_counter[4557]++;
    return;
  }
  if (!g.isMenuRendered) 
  {
    tiny_mce_js_exec_counter[4558]++;
    g.renderMenu();
    tiny_mce_js_exec_counter[4559]++;
    g.isMenuRendered = true;
  }
  if (g.isMenuVisible) 
  {
    tiny_mce_js_exec_counter[4560]++;
    return g.hideMenu();
  }
  tiny_mce_js_exec_counter[4561]++;
  j = b.getPos(g.settings.menu_container);
  tiny_mce_js_exec_counter[4562]++;
  i = b.getPos(h);
  tiny_mce_js_exec_counter[4563]++;
  f = g.menu;
  tiny_mce_js_exec_counter[4564]++;
  f.settings.offset_x = i.x;
  tiny_mce_js_exec_counter[4565]++;
  f.settings.offset_y = i.y;
  tiny_mce_js_exec_counter[4566]++;
  f.settings.vp_offset_x = i.x;
  tiny_mce_js_exec_counter[4567]++;
  f.settings.vp_offset_y = i.y;
  tiny_mce_js_exec_counter[4568]++;
  f.settings.keyboard_focus = g._focused;
  tiny_mce_js_exec_counter[4569]++;
  f.showMenu(0, h.clientHeight);
  tiny_mce_js_exec_counter[4570]++;
  a.add(b.doc, "mousedown", g.hideMenu, g);
  tiny_mce_js_exec_counter[4571]++;
  g.setState("Selected", 1);
  tiny_mce_js_exec_counter[4572]++;
  g.isMenuVisible = 1;
  tiny_mce_js_exec_counter[4554]++;
}, renderMenu: function() {
  tiny_mce_js_exec_counter[4573]++;
  tiny_mce_js_exec_counter[4575]++;
  var f = this, e;
  tiny_mce_js_exec_counter[4577]++;
  e = f.settings.control_manager.createDropMenu(f.id + "_menu", {menu_line: 1, "class": this.classPrefix + "Menu", icons: f.settings.icons});
  tiny_mce_js_exec_counter[4578]++;
  e.onHideMenu.add(function() {
  tiny_mce_js_exec_counter[4579]++;
  tiny_mce_js_exec_counter[4581]++;
  f.hideMenu();
  tiny_mce_js_exec_counter[4582]++;
  f.focus();
  tiny_mce_js_exec_counter[4580]++;
});
  tiny_mce_js_exec_counter[4583]++;
  f.onRenderMenu.dispatch(f, e);
  tiny_mce_js_exec_counter[4584]++;
  f.menu = e;
  tiny_mce_js_exec_counter[4574]++;
}, hideMenu: function(g) {
  tiny_mce_js_exec_counter[4585]++;
  tiny_mce_js_exec_counter[4587]++;
  var f = this;
  if (g && g.type == "mousedown" && b.getParent(g.target, function(h) {
  tiny_mce_js_exec_counter[4589]++;
  tiny_mce_js_exec_counter[4590]++;
  return h.id === f.id || h.id === f.id + "_open";
})) 
  {
    tiny_mce_js_exec_counter[4591]++;
    return;
  }
  if (!g || !b.getParent(g.target, ".mceMenu")) 
  {
    tiny_mce_js_exec_counter[4592]++;
    f.setState("Selected", 0);
    tiny_mce_js_exec_counter[4593]++;
    a.remove(b.doc, "mousedown", f.hideMenu, f);
    if (f.menu) 
    {
      tiny_mce_js_exec_counter[4594]++;
      f.menu.hideMenu();
    }
  }
  tiny_mce_js_exec_counter[4595]++;
  f.isMenuVisible = 0;
  tiny_mce_js_exec_counter[4586]++;
}, postRender: function() {
  tiny_mce_js_exec_counter[4596]++;
  tiny_mce_js_exec_counter[4598]++;
  var e = this, f = e.settings;
  tiny_mce_js_exec_counter[4600]++;
  a.add(e.id, "click", function() {
  tiny_mce_js_exec_counter[4601]++;
  if (!e.isDisabled()) 
  {
    if (f.onclick) 
    {
      tiny_mce_js_exec_counter[4603]++;
      f.onclick(e.value);
    }
    tiny_mce_js_exec_counter[4604]++;
    e.showMenu();
  }
  tiny_mce_js_exec_counter[4602]++;
});
  tiny_mce_js_exec_counter[4597]++;
}});
  tiny_mce_js_exec_counter[4544]++;
})(tinymce);
tiny_mce_js_exec_counter[4605]++;
(function(c) {
  tiny_mce_js_exec_counter[4606]++;
  tiny_mce_js_exec_counter[4608]++;
  var b = c.DOM, a = c.dom.Event, d = c.each;
  tiny_mce_js_exec_counter[4610]++;
  c.create("tinymce.ui.SplitButton:tinymce.ui.MenuButton", {SplitButton: function(g, f, e) {
  tiny_mce_js_exec_counter[4611]++;
  tiny_mce_js_exec_counter[4613]++;
  this.parent(g, f, e);
  tiny_mce_js_exec_counter[4614]++;
  this.classPrefix = "mceSplitButton";
  tiny_mce_js_exec_counter[4612]++;
}, renderHTML: function() {
  tiny_mce_js_exec_counter[4615]++;
  tiny_mce_js_exec_counter[4616]++;
  var i, f = this, g = f.settings, e;
  tiny_mce_js_exec_counter[4618]++;
  i = "<tbody><tr>";
  if (g.image) 
  {
    tiny_mce_js_exec_counter[4619]++;
    e = b.createHTML("img ", {src: g.image, role: "presentation", "class": "mceAction " + g["class"]});
  } else {
    tiny_mce_js_exec_counter[4620]++;
    e = b.createHTML("span", {"class": "mceAction " + g["class"]}, "");
  }
  tiny_mce_js_exec_counter[4621]++;
  e += b.createHTML("span", {"class": "mceVoiceLabel mceIconOnly", id: f.id + "_voice", style: "display:none;"}, g.title);
  tiny_mce_js_exec_counter[4622]++;
  i += "<td >" + b.createHTML("a", {role: "button", id: f.id + "_action", tabindex: "-1", href: "javascript:;", "class": "mceAction " + g["class"], onclick: "return false;", onmousedown: "return false;", title: g.title}, e) + "</td>";
  tiny_mce_js_exec_counter[4623]++;
  e = b.createHTML("span", {"class": "mceOpen " + g["class"]}, '<span style="display:none;" class="mceIconOnly" aria-hidden="true">\u25bc</span>');
  tiny_mce_js_exec_counter[4624]++;
  i += "<td >" + b.createHTML("a", {role: "button", id: f.id + "_open", tabindex: "-1", href: "javascript:;", "class": "mceOpen " + g["class"], onclick: "return false;", onmousedown: "return false;", title: g.title}, e) + "</td>";
  tiny_mce_js_exec_counter[4625]++;
  i += "</tr></tbody>";
  tiny_mce_js_exec_counter[4626]++;
  i = b.createHTML("table", {id: f.id, role: "presentation", tabindex: "0", "class": "mceSplitButton mceSplitButtonEnabled " + g["class"], cellpadding: "0", cellspacing: "0", title: g.title}, i);
  tiny_mce_js_exec_counter[4627]++;
  return b.createHTML("span", {role: "button", "aria-labelledby": f.id + "_voice", "aria-haspopup": "true"}, i);
}, postRender: function() {
  tiny_mce_js_exec_counter[4628]++;
  tiny_mce_js_exec_counter[4630]++;
  var e = this, g = e.settings, f;
  if (g.onclick) 
  {
    tiny_mce_js_exec_counter[4632]++;
    f = function(h) {
  tiny_mce_js_exec_counter[4633]++;
  if (!e.isDisabled()) 
  {
    tiny_mce_js_exec_counter[4635]++;
    g.onclick(e.value);
    tiny_mce_js_exec_counter[4636]++;
    a.cancel(h);
  }
  tiny_mce_js_exec_counter[4634]++;
};
    tiny_mce_js_exec_counter[4637]++;
    a.add(e.id + "_action", "click", f);
    tiny_mce_js_exec_counter[4638]++;
    a.add(e.id, ["click", "keydown"], function(h) {
  tiny_mce_js_exec_counter[4639]++;
  tiny_mce_js_exec_counter[4641]++;
  var k = 32, m = 14, i = 13, j = 38, l = 40;
  if ((h.keyCode === 32 || h.keyCode === 13 || h.keyCode === 14) && !h.altKey && !h.ctrlKey && !h.metaKey) 
  {
    tiny_mce_js_exec_counter[4643]++;
    f();
    tiny_mce_js_exec_counter[4644]++;
    a.cancel(h);
  } else {
    if (h.type === "click" || h.keyCode === l) 
    {
      tiny_mce_js_exec_counter[4645]++;
      e.showMenu();
      tiny_mce_js_exec_counter[4646]++;
      a.cancel(h);
    }
  }
  tiny_mce_js_exec_counter[4640]++;
});
  }
  tiny_mce_js_exec_counter[4647]++;
  a.add(e.id + "_open", "click", function(h) {
  tiny_mce_js_exec_counter[4648]++;
  tiny_mce_js_exec_counter[4650]++;
  e.showMenu();
  tiny_mce_js_exec_counter[4651]++;
  a.cancel(h);
  tiny_mce_js_exec_counter[4649]++;
});
  tiny_mce_js_exec_counter[4652]++;
  a.add([e.id, e.id + "_open"], "focus", function() {
  tiny_mce_js_exec_counter[4653]++;
  tiny_mce_js_exec_counter[4655]++;
  e._focused = 1;
  tiny_mce_js_exec_counter[4654]++;
});
  tiny_mce_js_exec_counter[4656]++;
  a.add([e.id, e.id + "_open"], "blur", function() {
  tiny_mce_js_exec_counter[4657]++;
  tiny_mce_js_exec_counter[4659]++;
  e._focused = 0;
  tiny_mce_js_exec_counter[4658]++;
});
  if (c.isIE6 || !b.boxModel) 
  {
    tiny_mce_js_exec_counter[4660]++;
    a.add(e.id, "mouseover", function() {
  tiny_mce_js_exec_counter[4661]++;
  if (!b.hasClass(e.id, "mceSplitButtonDisabled")) 
  {
    tiny_mce_js_exec_counter[4663]++;
    b.addClass(e.id, "mceSplitButtonHover");
  }
  tiny_mce_js_exec_counter[4662]++;
});
    tiny_mce_js_exec_counter[4664]++;
    a.add(e.id, "mouseout", function() {
  tiny_mce_js_exec_counter[4665]++;
  if (!b.hasClass(e.id, "mceSplitButtonDisabled")) 
  {
    tiny_mce_js_exec_counter[4667]++;
    b.removeClass(e.id, "mceSplitButtonHover");
  }
  tiny_mce_js_exec_counter[4666]++;
});
  }
  tiny_mce_js_exec_counter[4629]++;
}, destroy: function() {
  tiny_mce_js_exec_counter[4668]++;
  tiny_mce_js_exec_counter[4670]++;
  this.parent();
  tiny_mce_js_exec_counter[4671]++;
  a.clear(this.id + "_action");
  tiny_mce_js_exec_counter[4672]++;
  a.clear(this.id + "_open");
  tiny_mce_js_exec_counter[4673]++;
  a.clear(this.id);
  tiny_mce_js_exec_counter[4669]++;
}});
  tiny_mce_js_exec_counter[4607]++;
})(tinymce);
tiny_mce_js_exec_counter[4674]++;
(function(d) {
  tiny_mce_js_exec_counter[4675]++;
  tiny_mce_js_exec_counter[4677]++;
  var c = d.DOM, a = d.dom.Event, b = d.is, e = d.each;
  tiny_mce_js_exec_counter[4679]++;
  d.create("tinymce.ui.ColorSplitButton:tinymce.ui.SplitButton", {ColorSplitButton: function(i, h, f) {
  tiny_mce_js_exec_counter[4680]++;
  tiny_mce_js_exec_counter[4682]++;
  var g = this;
  tiny_mce_js_exec_counter[4684]++;
  g.parent(i, h, f);
  tiny_mce_js_exec_counter[4685]++;
  g.settings = h = d.extend({colors: "000000,993300,333300,003300,003366,000080,333399,333333,800000,FF6600,808000,008000,008080,0000FF,666699,808080,FF0000,FF9900,99CC00,339966,33CCCC,3366FF,800080,999999,FF00FF,FFCC00,FFFF00,00FF00,00FFFF,00CCFF,993366,C0C0C0,FF99CC,FFCC99,FFFF99,CCFFCC,CCFFFF,99CCFF,CC99FF,FFFFFF", grid_width: 8, default_color: "#888888"}, g.settings);
  tiny_mce_js_exec_counter[4686]++;
  g.onShowMenu = new d.util.Dispatcher(g);
  tiny_mce_js_exec_counter[4687]++;
  g.onHideMenu = new d.util.Dispatcher(g);
  tiny_mce_js_exec_counter[4688]++;
  g.value = h.default_color;
  tiny_mce_js_exec_counter[4681]++;
}, showMenu: function() {
  tiny_mce_js_exec_counter[4689]++;
  tiny_mce_js_exec_counter[4691]++;
  var f = this, g, j, i, h;
  if (f.isDisabled()) 
  {
    tiny_mce_js_exec_counter[4693]++;
    return;
  }
  if (!f.isMenuRendered) 
  {
    tiny_mce_js_exec_counter[4694]++;
    f.renderMenu();
    tiny_mce_js_exec_counter[4695]++;
    f.isMenuRendered = true;
  }
  if (f.isMenuVisible) 
  {
    tiny_mce_js_exec_counter[4696]++;
    return f.hideMenu();
  }
  tiny_mce_js_exec_counter[4697]++;
  i = c.get(f.id);
  tiny_mce_js_exec_counter[4698]++;
  c.show(f.id + "_menu");
  tiny_mce_js_exec_counter[4699]++;
  c.addClass(i, "mceSplitButtonSelected");
  tiny_mce_js_exec_counter[4700]++;
  h = c.getPos(i);
  tiny_mce_js_exec_counter[4701]++;
  c.setStyles(f.id + "_menu", {left: h.x, top: h.y + i.clientHeight, zIndex: 200000});
  tiny_mce_js_exec_counter[4702]++;
  i = 0;
  tiny_mce_js_exec_counter[4703]++;
  a.add(c.doc, "mousedown", f.hideMenu, f);
  tiny_mce_js_exec_counter[4704]++;
  f.onShowMenu.dispatch(f);
  if (f._focused) 
  {
    tiny_mce_js_exec_counter[4705]++;
    f._keyHandler = a.add(f.id + "_menu", "keydown", function(k) {
  tiny_mce_js_exec_counter[4706]++;
  if (k.keyCode == 27) 
  {
    tiny_mce_js_exec_counter[4708]++;
    f.hideMenu();
  }
  tiny_mce_js_exec_counter[4707]++;
});
    tiny_mce_js_exec_counter[4709]++;
    c.select("a", f.id + "_menu")[0].focus();
  }
  tiny_mce_js_exec_counter[4710]++;
  f.isMenuVisible = 1;
  tiny_mce_js_exec_counter[4690]++;
}, hideMenu: function(g) {
  tiny_mce_js_exec_counter[4711]++;
  tiny_mce_js_exec_counter[4713]++;
  var f = this;
  if (g && g.type == "mousedown" && c.getParent(g.target, function(h) {
  tiny_mce_js_exec_counter[4715]++;
  tiny_mce_js_exec_counter[4716]++;
  return h.id === f.id + "_open";
})) 
  {
    tiny_mce_js_exec_counter[4717]++;
    return;
  }
  if (!g || !c.getParent(g.target, ".mceSplitButtonMenu")) 
  {
    tiny_mce_js_exec_counter[4718]++;
    c.removeClass(f.id, "mceSplitButtonSelected");
    tiny_mce_js_exec_counter[4719]++;
    a.remove(c.doc, "mousedown", f.hideMenu, f);
    tiny_mce_js_exec_counter[4720]++;
    a.remove(f.id + "_menu", "keydown", f._keyHandler);
    tiny_mce_js_exec_counter[4721]++;
    c.hide(f.id + "_menu");
  }
  tiny_mce_js_exec_counter[4722]++;
  f.onHideMenu.dispatch(f);
  tiny_mce_js_exec_counter[4723]++;
  f.isMenuVisible = 0;
  tiny_mce_js_exec_counter[4724]++;
  f.editor.focus();
  tiny_mce_js_exec_counter[4712]++;
}, renderMenu: function() {
  tiny_mce_js_exec_counter[4725]++;
  tiny_mce_js_exec_counter[4726]++;
  var p = this, h, k = 0, q = p.settings, g, j, l, o, f;
  tiny_mce_js_exec_counter[4728]++;
  o = c.add(q.menu_container, "div", {role: "listbox", id: p.id + "_menu", "class": q.menu_class + " " + q["class"], style: "position:absolute;left:0;top:-1000px;"});
  tiny_mce_js_exec_counter[4729]++;
  h = c.add(o, "div", {"class": q["class"] + " mceSplitButtonMenu"});
  tiny_mce_js_exec_counter[4730]++;
  c.add(h, "span", {"class": "mceMenuLine"});
  tiny_mce_js_exec_counter[4731]++;
  g = c.add(h, "table", {role: "presentation", "class": "mceColorSplitMenu"});
  tiny_mce_js_exec_counter[4732]++;
  j = c.add(g, "tbody");
  tiny_mce_js_exec_counter[4733]++;
  k = 0;
  tiny_mce_js_exec_counter[4734]++;
  e(b(q.colors, "array") ? q.colors : q.colors.split(","), function(i) {
  tiny_mce_js_exec_counter[4735]++;
  tiny_mce_js_exec_counter[4737]++;
  i = i.replace(/^#/, "");
  if (!k--) 
  {
    tiny_mce_js_exec_counter[4738]++;
    l = c.add(j, "tr");
    tiny_mce_js_exec_counter[4739]++;
    k = q.grid_width - 1;
  }
  tiny_mce_js_exec_counter[4740]++;
  g = c.add(l, "td");
  tiny_mce_js_exec_counter[4741]++;
  g = c.add(g, "a", {role: "option", href: "javascript:;", style: {backgroundColor: "#" + i}, title: p.editor.getLang("colors." + i, i), "data-mce-color": "#" + i});
  if (p.editor.forcedHighContrastMode) 
  {
    tiny_mce_js_exec_counter[4742]++;
    g = c.add(g, "canvas", {width: 16, height: 16, "aria-hidden": "true"});
    if (g.getContext && (f = g.getContext("2d"))) 
    {
      tiny_mce_js_exec_counter[4743]++;
      f.fillStyle = "#" + i;
      tiny_mce_js_exec_counter[4744]++;
      f.fillRect(0, 0, 16, 16);
    } else {
      tiny_mce_js_exec_counter[4745]++;
      c.remove(g);
    }
  }
  tiny_mce_js_exec_counter[4736]++;
});
  if (q.more_colors_func) 
  {
    tiny_mce_js_exec_counter[4746]++;
    g = c.add(j, "tr");
    tiny_mce_js_exec_counter[4747]++;
    g = c.add(g, "td", {colspan: q.grid_width, "class": "mceMoreColors"});
    tiny_mce_js_exec_counter[4748]++;
    g = c.add(g, "a", {role: "option", id: p.id + "_more", href: "javascript:;", onclick: "return false;", "class": "mceMoreColors"}, q.more_colors_title);
    tiny_mce_js_exec_counter[4749]++;
    a.add(g, "click", function(i) {
  tiny_mce_js_exec_counter[4750]++;
  tiny_mce_js_exec_counter[4751]++;
  q.more_colors_func.call(q.more_colors_scope || this);
  tiny_mce_js_exec_counter[4752]++;
  return a.cancel(i);
});
  }
  tiny_mce_js_exec_counter[4753]++;
  c.addClass(h, "mceColorSplitMenu");
  tiny_mce_js_exec_counter[4754]++;
  new d.ui.KeyboardNavigation({root: p.id + "_menu", items: c.select("a", p.id + "_menu"), onCancel: function() {
  tiny_mce_js_exec_counter[4755]++;
  tiny_mce_js_exec_counter[4757]++;
  p.hideMenu();
  tiny_mce_js_exec_counter[4758]++;
  p.focus();
  tiny_mce_js_exec_counter[4756]++;
}});
  tiny_mce_js_exec_counter[4759]++;
  a.add(p.id + "_menu", "mousedown", function(i) {
  tiny_mce_js_exec_counter[4760]++;
  tiny_mce_js_exec_counter[4761]++;
  return a.cancel(i);
});
  tiny_mce_js_exec_counter[4762]++;
  a.add(p.id + "_menu", "click", function(i) {
  tiny_mce_js_exec_counter[4763]++;
  tiny_mce_js_exec_counter[4764]++;
  var m;
  tiny_mce_js_exec_counter[4766]++;
  i = c.getParent(i.target, "a", j);
  if (i && i.nodeName.toLowerCase() == "a" && (m = i.getAttribute("data-mce-color"))) 
  {
    tiny_mce_js_exec_counter[4767]++;
    p.setColor(m);
  }
  tiny_mce_js_exec_counter[4768]++;
  return a.cancel(i);
});
  tiny_mce_js_exec_counter[4769]++;
  return o;
}, setColor: function(f) {
  tiny_mce_js_exec_counter[4770]++;
  tiny_mce_js_exec_counter[4772]++;
  this.displayColor(f);
  tiny_mce_js_exec_counter[4773]++;
  this.hideMenu();
  tiny_mce_js_exec_counter[4774]++;
  this.settings.onselect(f);
  tiny_mce_js_exec_counter[4771]++;
}, displayColor: function(g) {
  tiny_mce_js_exec_counter[4775]++;
  tiny_mce_js_exec_counter[4777]++;
  var f = this;
  tiny_mce_js_exec_counter[4779]++;
  c.setStyle(f.id + "_preview", "backgroundColor", g);
  tiny_mce_js_exec_counter[4780]++;
  f.value = g;
  tiny_mce_js_exec_counter[4776]++;
}, postRender: function() {
  tiny_mce_js_exec_counter[4781]++;
  tiny_mce_js_exec_counter[4783]++;
  var f = this, g = f.id;
  tiny_mce_js_exec_counter[4785]++;
  f.parent();
  tiny_mce_js_exec_counter[4786]++;
  c.add(g + "_action", "div", {id: g + "_preview", "class": "mceColorPreview"});
  tiny_mce_js_exec_counter[4787]++;
  c.setStyle(f.id + "_preview", "backgroundColor", f.value);
  tiny_mce_js_exec_counter[4782]++;
}, destroy: function() {
  tiny_mce_js_exec_counter[4788]++;
  tiny_mce_js_exec_counter[4790]++;
  this.parent();
  tiny_mce_js_exec_counter[4791]++;
  a.clear(this.id + "_menu");
  tiny_mce_js_exec_counter[4792]++;
  a.clear(this.id + "_more");
  tiny_mce_js_exec_counter[4793]++;
  c.remove(this.id + "_menu");
  tiny_mce_js_exec_counter[4789]++;
}});
  tiny_mce_js_exec_counter[4676]++;
})(tinymce);
tiny_mce_js_exec_counter[4794]++;
(function(b) {
  tiny_mce_js_exec_counter[4795]++;
  tiny_mce_js_exec_counter[4797]++;
  var d = b.DOM, c = b.each, a = b.dom.Event;
  tiny_mce_js_exec_counter[4799]++;
  b.create("tinymce.ui.ToolbarGroup:tinymce.ui.Container", {renderHTML: function() {
  tiny_mce_js_exec_counter[4800]++;
  tiny_mce_js_exec_counter[4801]++;
  var f = this, i = [], e = f.controls, j = b.each, g = f.settings;
  tiny_mce_js_exec_counter[4803]++;
  i.push('<div id="' + f.id + '" role="group" aria-labelledby="' + f.id + '_voice">');
  tiny_mce_js_exec_counter[4804]++;
  i.push("<span role='application'>");
  tiny_mce_js_exec_counter[4805]++;
  i.push('<span id="' + f.id + '_voice" class="mceVoiceLabel" style="display:none;">' + d.encode(g.name) + "</span>");
  tiny_mce_js_exec_counter[4806]++;
  j(e, function(h) {
  tiny_mce_js_exec_counter[4807]++;
  tiny_mce_js_exec_counter[4809]++;
  i.push(h.renderHTML());
  tiny_mce_js_exec_counter[4808]++;
});
  tiny_mce_js_exec_counter[4810]++;
  i.push("</span>");
  tiny_mce_js_exec_counter[4811]++;
  i.push("</div>");
  tiny_mce_js_exec_counter[4812]++;
  return i.join("");
}, focus: function() {
  tiny_mce_js_exec_counter[4813]++;
  tiny_mce_js_exec_counter[4815]++;
  this.keyNav.focus();
  tiny_mce_js_exec_counter[4814]++;
}, postRender: function() {
  tiny_mce_js_exec_counter[4816]++;
  tiny_mce_js_exec_counter[4818]++;
  var f = this, e = [];
  tiny_mce_js_exec_counter[4820]++;
  c(f.controls, function(g) {
  tiny_mce_js_exec_counter[4821]++;
  tiny_mce_js_exec_counter[4823]++;
  c(g.controls, function(h) {
  tiny_mce_js_exec_counter[4824]++;
  if (h.id) 
  {
    tiny_mce_js_exec_counter[4826]++;
    e.push(h);
  }
  tiny_mce_js_exec_counter[4825]++;
});
  tiny_mce_js_exec_counter[4822]++;
});
  tiny_mce_js_exec_counter[4827]++;
  f.keyNav = new b.ui.KeyboardNavigation({root: f.id, items: e, onCancel: function() {
  tiny_mce_js_exec_counter[4828]++;
  tiny_mce_js_exec_counter[4830]++;
  f.editor.focus();
  tiny_mce_js_exec_counter[4829]++;
}, excludeFromTabOrder: !f.settings.tab_focus_toolbar});
  tiny_mce_js_exec_counter[4817]++;
}, destroy: function() {
  tiny_mce_js_exec_counter[4831]++;
  tiny_mce_js_exec_counter[4833]++;
  var e = this;
  tiny_mce_js_exec_counter[4835]++;
  e.parent();
  tiny_mce_js_exec_counter[4836]++;
  e.keyNav.destroy();
  tiny_mce_js_exec_counter[4837]++;
  a.clear(e.id);
  tiny_mce_js_exec_counter[4832]++;
}});
  tiny_mce_js_exec_counter[4796]++;
})(tinymce);
tiny_mce_js_exec_counter[4838]++;
(function(a) {
  tiny_mce_js_exec_counter[4839]++;
  tiny_mce_js_exec_counter[4841]++;
  var c = a.DOM, b = a.each;
  tiny_mce_js_exec_counter[4843]++;
  a.create("tinymce.ui.Toolbar:tinymce.ui.Container", {renderHTML: function() {
  tiny_mce_js_exec_counter[4844]++;
  tiny_mce_js_exec_counter[4845]++;
  var m = this, f = "", j, k, n = m.settings, e, d, g, l;
  tiny_mce_js_exec_counter[4847]++;
  l = m.controls;
  for (e = 0; e < l.length; e++) 
    {
      tiny_mce_js_exec_counter[4848]++;
      k = l[e];
      tiny_mce_js_exec_counter[4849]++;
      d = l[e - 1];
      tiny_mce_js_exec_counter[4850]++;
      g = l[e + 1];
      if (e === 0) 
      {
        tiny_mce_js_exec_counter[4851]++;
        j = "mceToolbarStart";
        if (k.Button) 
        {
          tiny_mce_js_exec_counter[4852]++;
          j += " mceToolbarStartButton";
        } else {
          if (k.SplitButton) 
          {
            tiny_mce_js_exec_counter[4853]++;
            j += " mceToolbarStartSplitButton";
          } else {
            if (k.ListBox) 
            {
              tiny_mce_js_exec_counter[4854]++;
              j += " mceToolbarStartListBox";
            }
          }
        }
        tiny_mce_js_exec_counter[4855]++;
        f += c.createHTML("td", {"class": j}, c.createHTML("span", null, "<!-- IE -->"));
      }
      if (d && k.ListBox) 
      {
        if (d.Button || d.SplitButton) 
        {
          tiny_mce_js_exec_counter[4856]++;
          f += c.createHTML("td", {"class": "mceToolbarEnd"}, c.createHTML("span", null, "<!-- IE -->"));
        }
      }
      if (c.stdMode) 
      {
        tiny_mce_js_exec_counter[4857]++;
        f += '<td style="position: relative">' + k.renderHTML() + "</td>";
      } else {
        tiny_mce_js_exec_counter[4858]++;
        f += "<td>" + k.renderHTML() + "</td>";
      }
      if (g && k.ListBox) 
      {
        if (g.Button || g.SplitButton) 
        {
          tiny_mce_js_exec_counter[4859]++;
          f += c.createHTML("td", {"class": "mceToolbarStart"}, c.createHTML("span", null, "<!-- IE -->"));
        }
      }
    }
  tiny_mce_js_exec_counter[4860]++;
  j = "mceToolbarEnd";
  if (k.Button) 
  {
    tiny_mce_js_exec_counter[4861]++;
    j += " mceToolbarEndButton";
  } else {
    if (k.SplitButton) 
    {
      tiny_mce_js_exec_counter[4862]++;
      j += " mceToolbarEndSplitButton";
    } else {
      if (k.ListBox) 
      {
        tiny_mce_js_exec_counter[4863]++;
        j += " mceToolbarEndListBox";
      }
    }
  }
  tiny_mce_js_exec_counter[4864]++;
  f += c.createHTML("td", {"class": j}, c.createHTML("span", null, "<!-- IE -->"));
  tiny_mce_js_exec_counter[4865]++;
  return c.createHTML("table", {id: m.id, "class": "mceToolbar" + (n["class"] ? " " + n["class"] : ""), cellpadding: "0", cellspacing: "0", align: m.settings.align || "", role: "presentation", tabindex: "-1"}, "<tbody><tr>" + f + "</tr></tbody>");
}});
  tiny_mce_js_exec_counter[4840]++;
})(tinymce);
tiny_mce_js_exec_counter[4866]++;
(function(b) {
  tiny_mce_js_exec_counter[4867]++;
  tiny_mce_js_exec_counter[4869]++;
  var a = b.util.Dispatcher, c = b.each;
  tiny_mce_js_exec_counter[4871]++;
  b.create("tinymce.AddOnManager", {AddOnManager: function() {
  tiny_mce_js_exec_counter[4872]++;
  tiny_mce_js_exec_counter[4874]++;
  var d = this;
  tiny_mce_js_exec_counter[4876]++;
  d.items = [];
  tiny_mce_js_exec_counter[4877]++;
  d.urls = {};
  tiny_mce_js_exec_counter[4878]++;
  d.lookup = {};
  tiny_mce_js_exec_counter[4879]++;
  d.onAdd = new a(d);
  tiny_mce_js_exec_counter[4873]++;
}, get: function(d) {
  tiny_mce_js_exec_counter[4880]++;
  tiny_mce_js_exec_counter[4881]++;
  return this.lookup[d];
}, requireLangPack: function(e) {
  tiny_mce_js_exec_counter[4882]++;
  tiny_mce_js_exec_counter[4884]++;
  var d = b.settings;
  if (d && d.language && d.language_load !== false) 
  {
    tiny_mce_js_exec_counter[4886]++;
    b.ScriptLoader.add(this.urls[e] + "/langs/" + d.language + ".js");
  }
  tiny_mce_js_exec_counter[4883]++;
}, add: function(e, d) {
  tiny_mce_js_exec_counter[4887]++;
  tiny_mce_js_exec_counter[4888]++;
  this.items.push(d);
  tiny_mce_js_exec_counter[4889]++;
  this.lookup[e] = d;
  tiny_mce_js_exec_counter[4890]++;
  this.onAdd.dispatch(this, e, d);
  tiny_mce_js_exec_counter[4891]++;
  return d;
}, load: function(h, e, d, g) {
  tiny_mce_js_exec_counter[4892]++;
  tiny_mce_js_exec_counter[4894]++;
  var f = this;
  if (f.urls[h]) 
  {
    tiny_mce_js_exec_counter[4896]++;
    return;
  }
  if (e.indexOf("/") != 0 && e.indexOf("://") == -1) 
  {
    tiny_mce_js_exec_counter[4897]++;
    e = b.baseURL + "/" + e;
  }
  tiny_mce_js_exec_counter[4898]++;
  f.urls[h] = e.substring(0, e.lastIndexOf("/"));
  if (!f.lookup[h]) 
  {
    tiny_mce_js_exec_counter[4899]++;
    b.ScriptLoader.add(e, d, g);
  }
  tiny_mce_js_exec_counter[4893]++;
}});
  tiny_mce_js_exec_counter[4900]++;
  b.PluginManager = new b.AddOnManager();
  tiny_mce_js_exec_counter[4901]++;
  b.ThemeManager = new b.AddOnManager();
  tiny_mce_js_exec_counter[4868]++;
}(tinymce));
tiny_mce_js_exec_counter[4902]++;
(function(j) {
  tiny_mce_js_exec_counter[4903]++;
  tiny_mce_js_exec_counter[4905]++;
  var g = j.each, d = j.extend, k = j.DOM, i = j.dom.Event, f = j.ThemeManager, b = j.PluginManager, e = j.explode, h = j.util.Dispatcher, a, c = 0;
  tiny_mce_js_exec_counter[4907]++;
  j.documentBaseURL = window.location.href.replace(/[\?#].*$/, "").replace(/[\/\\][^\/]+$/, "");
  if (!/[\/\\]$/.test(j.documentBaseURL)) 
  {
    tiny_mce_js_exec_counter[4908]++;
    j.documentBaseURL += "/";
  }
  tiny_mce_js_exec_counter[4909]++;
  j.baseURL = new j.util.URI(j.documentBaseURL).toAbsolute(j.baseURL);
  tiny_mce_js_exec_counter[4910]++;
  j.baseURI = new j.util.URI(j.baseURL);
  tiny_mce_js_exec_counter[4911]++;
  j.onBeforeUnload = new h(j);
  tiny_mce_js_exec_counter[4912]++;
  i.add(window, "beforeunload", function(l) {
  tiny_mce_js_exec_counter[4913]++;
  tiny_mce_js_exec_counter[4915]++;
  j.onBeforeUnload.dispatch(j, l);
  tiny_mce_js_exec_counter[4914]++;
});
  tiny_mce_js_exec_counter[4916]++;
  j.onAddEditor = new h(j);
  tiny_mce_js_exec_counter[4917]++;
  j.onRemoveEditor = new h(j);
  tiny_mce_js_exec_counter[4918]++;
  j.EditorManager = d(j, {editors: [], i18n: {}, activeEditor: null, init: function(q) {
  tiny_mce_js_exec_counter[4919]++;
  tiny_mce_js_exec_counter[4921]++;
  var n = this, p, l = j.ScriptLoader, u, o = [], m;
  function r(x, y, t) {
    tiny_mce_js_exec_counter[4923]++;
    tiny_mce_js_exec_counter[4924]++;
    var v = x[y];
    if (!v) 
    {
      tiny_mce_js_exec_counter[4926]++;
      return;
    }
    if (j.is(v, "string")) 
    {
      tiny_mce_js_exec_counter[4927]++;
      t = v.replace(/\.\w+$/, "");
      tiny_mce_js_exec_counter[4928]++;
      t = t ? j.resolve(t) : 0;
      tiny_mce_js_exec_counter[4929]++;
      v = j.resolve(v);
    }
    tiny_mce_js_exec_counter[4930]++;
    return v.apply(t || this, Array.prototype.slice.call(arguments, 2));
  }
  tiny_mce_js_exec_counter[4931]++;
  q = d({theme: "simple", language: "en"}, q);
  tiny_mce_js_exec_counter[4932]++;
  n.settings = q;
  tiny_mce_js_exec_counter[4933]++;
  i.add(document, "init", function() {
  tiny_mce_js_exec_counter[4934]++;
  tiny_mce_js_exec_counter[4936]++;
  var s, v;
  tiny_mce_js_exec_counter[4938]++;
  r(q, "onpageload");
  switch (q.mode) {
    case "exact":
      {
        tiny_mce_js_exec_counter[4939]++;
        s = q.elements || "";
        if (s.length > 0) 
        {
          tiny_mce_js_exec_counter[4940]++;
          g(e(s), function(x) {
  tiny_mce_js_exec_counter[4941]++;
  if (k.get(x)) 
  {
    tiny_mce_js_exec_counter[4943]++;
    m = new j.Editor(x, q);
    tiny_mce_js_exec_counter[4944]++;
    o.push(m);
    tiny_mce_js_exec_counter[4945]++;
    m.render(1);
  } else {
    tiny_mce_js_exec_counter[4946]++;
    g(document.forms, function(y) {
  tiny_mce_js_exec_counter[4947]++;
  tiny_mce_js_exec_counter[4949]++;
  g(y.elements, function(z) {
  tiny_mce_js_exec_counter[4950]++;
  if (z.name === x) 
  {
    tiny_mce_js_exec_counter[4952]++;
    x = "mce_editor_" + c++;
    tiny_mce_js_exec_counter[4953]++;
    k.setAttrib(z, "id", x);
    tiny_mce_js_exec_counter[4954]++;
    m = new j.Editor(x, q);
    tiny_mce_js_exec_counter[4955]++;
    o.push(m);
    tiny_mce_js_exec_counter[4956]++;
    m.render(1);
  }
  tiny_mce_js_exec_counter[4951]++;
});
  tiny_mce_js_exec_counter[4948]++;
});
  }
  tiny_mce_js_exec_counter[4942]++;
});
        }
        tiny_mce_js_exec_counter[4957]++;
        break;
      }
    case "textareas":
    case "specific_textareas":
      {
        function t(y, x) {
          tiny_mce_js_exec_counter[4958]++;
          tiny_mce_js_exec_counter[4959]++;
          return x.constructor === RegExp ? x.test(y.className) : k.hasClass(y, x);
        }        tiny_mce_js_exec_counter[4960]++;
        g(k.select("textarea"), function(x) {
  tiny_mce_js_exec_counter[4961]++;
  if (q.editor_deselector && t(x, q.editor_deselector)) 
  {
    tiny_mce_js_exec_counter[4963]++;
    return;
  }
  if (!q.editor_selector || t(x, q.editor_selector)) 
  {
    tiny_mce_js_exec_counter[4964]++;
    u = k.get(x.name);
    if (!x.id && !u) 
    {
      tiny_mce_js_exec_counter[4965]++;
      x.id = x.name;
    }
    if (!x.id || n.get(x.id)) 
    {
      tiny_mce_js_exec_counter[4966]++;
      x.id = k.uniqueId();
    }
    tiny_mce_js_exec_counter[4967]++;
    m = new j.Editor(x.id, q);
    tiny_mce_js_exec_counter[4968]++;
    o.push(m);
    tiny_mce_js_exec_counter[4969]++;
    m.render(1);
  }
  tiny_mce_js_exec_counter[4962]++;
});
        tiny_mce_js_exec_counter[4970]++;
        break;
      }
  }
  if (q.oninit) 
  {
    tiny_mce_js_exec_counter[4971]++;
    s = v = 0;
    tiny_mce_js_exec_counter[4972]++;
    g(o, function(x) {
  tiny_mce_js_exec_counter[4973]++;
  tiny_mce_js_exec_counter[4975]++;
  v++;
  if (!x.initialized) 
  {
    tiny_mce_js_exec_counter[4976]++;
    x.onInit.add(function() {
  tiny_mce_js_exec_counter[4977]++;
  tiny_mce_js_exec_counter[4979]++;
  s++;
  if (s == v) 
  {
    tiny_mce_js_exec_counter[4980]++;
    r(q, "oninit");
  }
  tiny_mce_js_exec_counter[4978]++;
});
  } else {
    tiny_mce_js_exec_counter[4981]++;
    s++;
  }
  if (s == v) 
  {
    tiny_mce_js_exec_counter[4982]++;
    r(q, "oninit");
  }
  tiny_mce_js_exec_counter[4974]++;
});
  }
  tiny_mce_js_exec_counter[4935]++;
});
  tiny_mce_js_exec_counter[4920]++;
}, get: function(l) {
  tiny_mce_js_exec_counter[4983]++;
  if (l === a) 
  {
    tiny_mce_js_exec_counter[4984]++;
    return this.editors;
  }
  tiny_mce_js_exec_counter[4985]++;
  return this.editors[l];
}, getInstanceById: function(l) {
  tiny_mce_js_exec_counter[4986]++;
  tiny_mce_js_exec_counter[4987]++;
  return this.get(l);
}, add: function(m) {
  tiny_mce_js_exec_counter[4988]++;
  tiny_mce_js_exec_counter[4989]++;
  var l = this, n = l.editors;
  tiny_mce_js_exec_counter[4991]++;
  n[m.id] = m;
  tiny_mce_js_exec_counter[4992]++;
  n.push(m);
  tiny_mce_js_exec_counter[4993]++;
  l._setActive(m);
  tiny_mce_js_exec_counter[4994]++;
  l.onAddEditor.dispatch(l, m);
  tiny_mce_js_exec_counter[4995]++;
  return m;
}, remove: function(n) {
  tiny_mce_js_exec_counter[4996]++;
  tiny_mce_js_exec_counter[4997]++;
  var m = this, l, o = m.editors;
  if (!o[n.id]) 
  {
    tiny_mce_js_exec_counter[4999]++;
    return null;
  }
  tiny_mce_js_exec_counter[5000]++;
  delete o[n.id];
  for (l = 0; l < o.length; l++) 
    {
      if (o[l] == n) 
      {
        tiny_mce_js_exec_counter[5001]++;
        o.splice(l, 1);
        tiny_mce_js_exec_counter[5002]++;
        break;
      }
    }
  if (m.activeEditor == n) 
  {
    tiny_mce_js_exec_counter[5003]++;
    m._setActive(o[0]);
  }
  tiny_mce_js_exec_counter[5004]++;
  n.destroy();
  tiny_mce_js_exec_counter[5005]++;
  m.onRemoveEditor.dispatch(m, n);
  tiny_mce_js_exec_counter[5006]++;
  return n;
}, execCommand: function(r, p, o) {
  tiny_mce_js_exec_counter[5007]++;
  tiny_mce_js_exec_counter[5008]++;
  var q = this, n = q.get(o), l;
  switch (r) {
    case "mceFocus":
      {
        tiny_mce_js_exec_counter[5010]++;
        n.focus();
        tiny_mce_js_exec_counter[5011]++;
        return true;
      }
    case "mceAddEditor":
    case "mceAddControl":
      {
        if (!q.get(o)) 
        {
          tiny_mce_js_exec_counter[5012]++;
          new j.Editor(o, q.settings).render();
        }
        tiny_mce_js_exec_counter[5013]++;
        return true;
      }
    case "mceAddFrameControl":
      {
        tiny_mce_js_exec_counter[5014]++;
        l = o.window;
        tiny_mce_js_exec_counter[5015]++;
        l.tinyMCE = tinyMCE;
        tiny_mce_js_exec_counter[5016]++;
        l.tinymce = j;
        tiny_mce_js_exec_counter[5017]++;
        j.DOM.doc = l.document;
        tiny_mce_js_exec_counter[5018]++;
        j.DOM.win = l;
        tiny_mce_js_exec_counter[5019]++;
        n = new j.Editor(o.element_id, o);
        tiny_mce_js_exec_counter[5020]++;
        n.render();
        if (j.isIE) 
        {
          function m() {
            tiny_mce_js_exec_counter[5021]++;
            tiny_mce_js_exec_counter[5023]++;
            n.destroy();
            tiny_mce_js_exec_counter[5024]++;
            l.detachEvent("onunload", m);
            tiny_mce_js_exec_counter[5025]++;
            l = l.tinyMCE = l.tinymce = null;
            tiny_mce_js_exec_counter[5022]++;
          }          tiny_mce_js_exec_counter[5026]++;
          l.attachEvent("onunload", m);
        }
        tiny_mce_js_exec_counter[5027]++;
        o.page_window = null;
        tiny_mce_js_exec_counter[5028]++;
        return true;
      }
    case "mceRemoveEditor":
    case "mceRemoveControl":
      {
        if (n) 
        {
          tiny_mce_js_exec_counter[5029]++;
          n.remove();
        }
        tiny_mce_js_exec_counter[5030]++;
        return true;
      }
    case "mceToggleEditor":
      {
        if (!n) 
        {
          tiny_mce_js_exec_counter[5031]++;
          q.execCommand("mceAddControl", 0, o);
          tiny_mce_js_exec_counter[5032]++;
          return true;
        }
        if (n.isHidden()) 
        {
          tiny_mce_js_exec_counter[5033]++;
          n.show();
        } else {
          tiny_mce_js_exec_counter[5034]++;
          n.hide();
        }
        tiny_mce_js_exec_counter[5035]++;
        return true;
      }
  }
  if (q.activeEditor) 
  {
    tiny_mce_js_exec_counter[5036]++;
    return q.activeEditor.execCommand(r, p, o);
  }
  tiny_mce_js_exec_counter[5037]++;
  return false;
}, execInstanceCommand: function(p, o, n, m) {
  tiny_mce_js_exec_counter[5038]++;
  tiny_mce_js_exec_counter[5039]++;
  var l = this.get(p);
  if (l) 
  {
    tiny_mce_js_exec_counter[5041]++;
    return l.execCommand(o, n, m);
  }
  tiny_mce_js_exec_counter[5042]++;
  return false;
}, triggerSave: function() {
  tiny_mce_js_exec_counter[5043]++;
  tiny_mce_js_exec_counter[5045]++;
  g(this.editors, function(l) {
  tiny_mce_js_exec_counter[5046]++;
  tiny_mce_js_exec_counter[5048]++;
  l.save();
  tiny_mce_js_exec_counter[5047]++;
});
  tiny_mce_js_exec_counter[5044]++;
}, addI18n: function(n, q) {
  tiny_mce_js_exec_counter[5049]++;
  tiny_mce_js_exec_counter[5051]++;
  var l, m = this.i18n;
  if (!j.is(n, "string")) 
  {
    tiny_mce_js_exec_counter[5053]++;
    g(n, function(r, p) {
  tiny_mce_js_exec_counter[5054]++;
  tiny_mce_js_exec_counter[5056]++;
  g(r, function(t, s) {
  tiny_mce_js_exec_counter[5057]++;
  tiny_mce_js_exec_counter[5059]++;
  g(t, function(v, u) {
  tiny_mce_js_exec_counter[5060]++;
  if (s === "common") 
  {
    tiny_mce_js_exec_counter[5062]++;
    m[p + "." + u] = v;
  } else {
    tiny_mce_js_exec_counter[5063]++;
    m[p + "." + s + "." + u] = v;
  }
  tiny_mce_js_exec_counter[5061]++;
});
  tiny_mce_js_exec_counter[5058]++;
});
  tiny_mce_js_exec_counter[5055]++;
});
  } else {
    tiny_mce_js_exec_counter[5064]++;
    g(q, function(r, p) {
  tiny_mce_js_exec_counter[5065]++;
  tiny_mce_js_exec_counter[5067]++;
  m[n + "." + p] = r;
  tiny_mce_js_exec_counter[5066]++;
});
  }
  tiny_mce_js_exec_counter[5050]++;
}, _setActive: function(l) {
  tiny_mce_js_exec_counter[5068]++;
  tiny_mce_js_exec_counter[5070]++;
  this.selectedInstance = this.activeEditor = l;
  tiny_mce_js_exec_counter[5069]++;
}});
  tiny_mce_js_exec_counter[4904]++;
})(tinymce);
tiny_mce_js_exec_counter[5071]++;
(function(m) {
  tiny_mce_js_exec_counter[5072]++;
  tiny_mce_js_exec_counter[5074]++;
  var n = m.DOM, j = m.dom.Event, f = m.extend, k = m.util.Dispatcher, i = m.each, a = m.isGecko, b = m.isIE, e = m.isWebKit, d = m.is, h = m.ThemeManager, c = m.PluginManager, o = m.inArray, l = m.grep, g = m.explode;
  tiny_mce_js_exec_counter[5076]++;
  m.create("tinymce.Editor", {Editor: function(r, q) {
  tiny_mce_js_exec_counter[5077]++;
  tiny_mce_js_exec_counter[5079]++;
  var p = this;
  tiny_mce_js_exec_counter[5081]++;
  p.id = p.editorId = r;
  tiny_mce_js_exec_counter[5082]++;
  p.execCommands = {};
  tiny_mce_js_exec_counter[5083]++;
  p.queryStateCommands = {};
  tiny_mce_js_exec_counter[5084]++;
  p.queryValueCommands = {};
  tiny_mce_js_exec_counter[5085]++;
  p.isNotDirty = false;
  tiny_mce_js_exec_counter[5086]++;
  p.plugins = {};
  tiny_mce_js_exec_counter[5087]++;
  i(["onPreInit", "onBeforeRenderUI", "onPostRender", "onInit", "onRemove", "onActivate", "onDeactivate", "onClick", "onEvent", "onMouseUp", "onMouseDown", "onDblClick", "onKeyDown", "onKeyUp", "onKeyPress", "onContextMenu", "onSubmit", "onReset", "onPaste", "onPreProcess", "onPostProcess", "onBeforeSetContent", "onBeforeGetContent", "onSetContent", "onGetContent", "onLoadContent", "onSaveContent", "onNodeChange", "onChange", "onBeforeExecCommand", "onExecCommand", "onUndo", "onRedo", "onVisualAid", "onSetProgressState"], function(s) {
  tiny_mce_js_exec_counter[5088]++;
  tiny_mce_js_exec_counter[5090]++;
  p[s] = new k(p);
  tiny_mce_js_exec_counter[5089]++;
});
  tiny_mce_js_exec_counter[5091]++;
  p.settings = q = f({id: r, language: "en", docs_language: "en", theme: "simple", skin: "default", delta_width: 0, delta_height: 0, popup_css: "", plugins: "", document_base_url: m.documentBaseURL, add_form_submit_trigger: 1, submit_patch: 1, add_unload_trigger: 1, convert_urls: 1, relative_urls: 1, remove_script_host: 1, table_inline_editing: 0, object_resizing: 1, cleanup: 1, accessibility_focus: 1, custom_shortcuts: 1, custom_undo_redo_keyboard_shortcuts: 1, custom_undo_redo_restore_selection: 1, custom_undo_redo: 1, doctype: m.isIE6 ? '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">' : "<!DOCTYPE>", visual_table_class: "mceItemTable", visual: 1, font_size_style_values: "xx-small,x-small,small,medium,large,x-large,xx-large", apply_source_formatting: 1, directionality: "ltr", forced_root_block: "p", hidden_input: 1, padd_empty_editor: 1, render_ui: 1, init_theme: 1, force_p_newlines: 1, indentation: "30px", keep_styles: 1, fix_table_elements: 1, inline_styles: 1, convert_fonts_to_spans: true, indent: "simple", indent_before: "p,h1,h2,h3,h4,h5,h6,blockquote,div,title,style,pre,script,td,ul,li,area,table,thead,tfoot,tbody,tr", indent_after: "p,h1,h2,h3,h4,h5,h6,blockquote,div,title,style,pre,script,td,ul,li,area,table,thead,tfoot,tbody,tr", validate: true, entity_encoding: "named", url_converter: p.convertURL, url_converter_scope: p, ie7_compat: true}, q);
  tiny_mce_js_exec_counter[5092]++;
  p.documentBaseURI = new m.util.URI(q.document_base_url || m.documentBaseURL, {base_uri: tinyMCE.baseURI});
  tiny_mce_js_exec_counter[5093]++;
  p.baseURI = m.baseURI;
  tiny_mce_js_exec_counter[5094]++;
  p.contentCSS = [];
  tiny_mce_js_exec_counter[5095]++;
  p.execCallback("setup", p);
  tiny_mce_js_exec_counter[5078]++;
}, render: function(r) {
  tiny_mce_js_exec_counter[5096]++;
  tiny_mce_js_exec_counter[5098]++;
  var u = this, v = u.settings, x = u.id, p = m.ScriptLoader;
  if (!j.domLoaded) 
  {
    tiny_mce_js_exec_counter[5100]++;
    j.add(document, "init", function() {
  tiny_mce_js_exec_counter[5101]++;
  tiny_mce_js_exec_counter[5103]++;
  u.render();
  tiny_mce_js_exec_counter[5102]++;
});
    tiny_mce_js_exec_counter[5104]++;
    return;
  }
  tiny_mce_js_exec_counter[5105]++;
  tinyMCE.settings = v;
  if (!u.getElement()) 
  {
    tiny_mce_js_exec_counter[5106]++;
    return;
  }
  if (m.isIDevice) 
  {
    tiny_mce_js_exec_counter[5107]++;
    return;
  }
  if (!/TEXTAREA|INPUT/i.test(u.getElement().nodeName) && v.hidden_input && n.getParent(x, "form")) 
  {
    tiny_mce_js_exec_counter[5108]++;
    n.insertAfter(n.create("input", {type: "hidden", name: x}), x);
  }
  if (m.WindowManager) 
  {
    tiny_mce_js_exec_counter[5109]++;
    u.windowManager = new m.WindowManager(u);
  }
  if (v.encoding == "xml") 
  {
    tiny_mce_js_exec_counter[5110]++;
    u.onGetContent.add(function(s, t) {
  tiny_mce_js_exec_counter[5111]++;
  if (t.save) 
  {
    tiny_mce_js_exec_counter[5113]++;
    t.content = n.encode(t.content);
  }
  tiny_mce_js_exec_counter[5112]++;
});
  }
  if (v.add_form_submit_trigger) 
  {
    tiny_mce_js_exec_counter[5114]++;
    u.onSubmit.addToTop(function() {
  tiny_mce_js_exec_counter[5115]++;
  if (u.initialized) 
  {
    tiny_mce_js_exec_counter[5117]++;
    u.save();
    tiny_mce_js_exec_counter[5118]++;
    u.isNotDirty = 1;
  }
  tiny_mce_js_exec_counter[5116]++;
});
  }
  if (v.add_unload_trigger) 
  {
    tiny_mce_js_exec_counter[5119]++;
    u._beforeUnload = tinyMCE.onBeforeUnload.add(function() {
  tiny_mce_js_exec_counter[5120]++;
  if (u.initialized && !u.destroyed && !u.isHidden()) 
  {
    tiny_mce_js_exec_counter[5122]++;
    u.save({format: "raw", no_events: true});
  }
  tiny_mce_js_exec_counter[5121]++;
});
  }
  tiny_mce_js_exec_counter[5123]++;
  m.addUnload(u.destroy, u);
  if (v.submit_patch) 
  {
    tiny_mce_js_exec_counter[5124]++;
    u.onBeforeRenderUI.add(function() {
  tiny_mce_js_exec_counter[5125]++;
  tiny_mce_js_exec_counter[5127]++;
  var s = u.getElement().form;
  if (!s) 
  {
    tiny_mce_js_exec_counter[5129]++;
    return;
  }
  if (s._mceOldSubmit) 
  {
    tiny_mce_js_exec_counter[5130]++;
    return;
  }
  if (!s.submit.nodeType && !s.submit.length) 
  {
    tiny_mce_js_exec_counter[5131]++;
    u.formElement = s;
    tiny_mce_js_exec_counter[5132]++;
    s._mceOldSubmit = s.submit;
    tiny_mce_js_exec_counter[5133]++;
    s.submit = function() {
  tiny_mce_js_exec_counter[5134]++;
  tiny_mce_js_exec_counter[5135]++;
  m.triggerSave();
  tiny_mce_js_exec_counter[5136]++;
  u.isNotDirty = 1;
  tiny_mce_js_exec_counter[5137]++;
  return u.formElement._mceOldSubmit(u.formElement);
};
  }
  tiny_mce_js_exec_counter[5138]++;
  s = null;
  tiny_mce_js_exec_counter[5126]++;
});
  }
  function q() {
    tiny_mce_js_exec_counter[5139]++;
    if (v.language && v.language_load !== false) 
    {
      tiny_mce_js_exec_counter[5141]++;
      p.add(m.baseURL + "/langs/" + v.language + ".js");
    }
    if (v.theme && v.theme.charAt(0) != "-" && !h.urls[v.theme]) 
    {
      tiny_mce_js_exec_counter[5142]++;
      h.load(v.theme, "themes/" + v.theme + "/editor_template" + m.suffix + ".js");
    }
    tiny_mce_js_exec_counter[5143]++;
    i(g(v.plugins), function(s) {
  tiny_mce_js_exec_counter[5144]++;
  if (s && s.charAt(0) != "-" && !c.urls[s]) 
  {
    if (s == "safari") 
    {
      tiny_mce_js_exec_counter[5146]++;
      return;
    }
    tiny_mce_js_exec_counter[5147]++;
    c.load(s, "plugins/" + s + "/editor_plugin" + m.suffix + ".js");
  }
  tiny_mce_js_exec_counter[5145]++;
});
    tiny_mce_js_exec_counter[5148]++;
    p.loadQueue(function() {
  tiny_mce_js_exec_counter[5149]++;
  if (!u.removed) 
  {
    tiny_mce_js_exec_counter[5151]++;
    u.init();
  }
  tiny_mce_js_exec_counter[5150]++;
});
    tiny_mce_js_exec_counter[5140]++;
  }
  tiny_mce_js_exec_counter[5152]++;
  q();
  tiny_mce_js_exec_counter[5097]++;
}, init: function() {
  tiny_mce_js_exec_counter[5153]++;
  tiny_mce_js_exec_counter[5155]++;
  var r, F = this, G = F.settings, C, z, B = F.getElement(), q, p, D, x, A, E, y;
  tiny_mce_js_exec_counter[5157]++;
  m.add(F);
  tiny_mce_js_exec_counter[5158]++;
  G.aria_label = G.aria_label || n.getAttrib(B, "aria-label", F.getLang("aria.rich_text_area"));
  if (G.theme) 
  {
    tiny_mce_js_exec_counter[5159]++;
    G.theme = G.theme.replace(/-/, "");
    tiny_mce_js_exec_counter[5160]++;
    q = h.get(G.theme);
    tiny_mce_js_exec_counter[5161]++;
    F.theme = new q();
    if (F.theme.init && G.init_theme) 
    {
      tiny_mce_js_exec_counter[5162]++;
      F.theme.init(F, h.urls[G.theme] || m.documentBaseURL.replace(/\/$/, ""));
    }
  }
  tiny_mce_js_exec_counter[5163]++;
  i(g(G.plugins.replace(/\-/g, "")), function(H) {
  tiny_mce_js_exec_counter[5164]++;
  tiny_mce_js_exec_counter[5166]++;
  var I = c.get(H), t = c.urls[H] || m.documentBaseURL.replace(/\/$/, ""), s;
  if (I) 
  {
    tiny_mce_js_exec_counter[5168]++;
    s = new I(F, t);
    tiny_mce_js_exec_counter[5169]++;
    F.plugins[H] = s;
    if (s.init) 
    {
      tiny_mce_js_exec_counter[5170]++;
      s.init(F, t);
    }
  }
  tiny_mce_js_exec_counter[5165]++;
});
  if (G.popup_css !== false) 
  {
    if (G.popup_css) 
    {
      tiny_mce_js_exec_counter[5171]++;
      G.popup_css = F.documentBaseURI.toAbsolute(G.popup_css);
    } else {
      tiny_mce_js_exec_counter[5172]++;
      G.popup_css = F.baseURI.toAbsolute("themes/" + G.theme + "/skins/" + G.skin + "/dialog.css");
    }
  }
  if (G.popup_css_add) 
  {
    tiny_mce_js_exec_counter[5173]++;
    G.popup_css += "," + F.documentBaseURI.toAbsolute(G.popup_css_add);
  }
  tiny_mce_js_exec_counter[5174]++;
  F.controlManager = new m.ControlManager(F);
  if (G.custom_undo_redo) 
  {
    tiny_mce_js_exec_counter[5175]++;
    F.onExecCommand.add(function(t, H, u, I, s) {
  tiny_mce_js_exec_counter[5176]++;
  if (H != "Undo" && H != "Redo" && H != "mceRepaint" && (!s || !s.skip_undo)) 
  {
    tiny_mce_js_exec_counter[5178]++;
    F.undoManager.add();
  }
  tiny_mce_js_exec_counter[5177]++;
});
  }
  tiny_mce_js_exec_counter[5179]++;
  F.onExecCommand.add(function(s, t) {
  tiny_mce_js_exec_counter[5180]++;
  if (!/^(FontName|FontSize)$/.test(t)) 
  {
    tiny_mce_js_exec_counter[5182]++;
    F.nodeChanged();
  }
  tiny_mce_js_exec_counter[5181]++;
});
  if (a) 
  {
    function v(s, t) {
      tiny_mce_js_exec_counter[5183]++;
      if (!t || !t.initial) 
      {
        tiny_mce_js_exec_counter[5185]++;
        F.execCommand("mceRepaint");
      }
      tiny_mce_js_exec_counter[5184]++;
    }    tiny_mce_js_exec_counter[5186]++;
    F.onUndo.add(v);
    tiny_mce_js_exec_counter[5187]++;
    F.onRedo.add(v);
    tiny_mce_js_exec_counter[5188]++;
    F.onSetContent.add(v);
  }
  tiny_mce_js_exec_counter[5189]++;
  F.onBeforeRenderUI.dispatch(F, F.controlManager);
  if (G.render_ui) 
  {
    tiny_mce_js_exec_counter[5190]++;
    C = G.width || B.style.width || B.offsetWidth;
    tiny_mce_js_exec_counter[5191]++;
    z = G.height || B.style.height || B.offsetHeight;
    tiny_mce_js_exec_counter[5192]++;
    F.orgDisplay = B.style.display;
    tiny_mce_js_exec_counter[5193]++;
    E = /^[0-9\.]+(|px)$/i;
    if (E.test("" + C)) 
    {
      tiny_mce_js_exec_counter[5194]++;
      C = Math.max(parseInt(C) + (q.deltaWidth || 0), 100);
    }
    if (E.test("" + z)) 
    {
      tiny_mce_js_exec_counter[5195]++;
      z = Math.max(parseInt(z) + (q.deltaHeight || 0), 100);
    }
    tiny_mce_js_exec_counter[5196]++;
    q = F.theme.renderUI({targetNode: B, width: C, height: z, deltaWidth: G.delta_width, deltaHeight: G.delta_height});
    tiny_mce_js_exec_counter[5197]++;
    F.editorContainer = q.editorContainer;
  }
  if (document.domain && location.hostname != document.domain) 
  {
    tiny_mce_js_exec_counter[5198]++;
    m.relaxedDomain = document.domain;
  }
  tiny_mce_js_exec_counter[5199]++;
  n.setStyles(q.sizeContainer || q.editorContainer, {width: C, height: z});
  if (G.content_css) 
  {
    tiny_mce_js_exec_counter[5200]++;
    m.each(g(G.content_css), function(s) {
  tiny_mce_js_exec_counter[5201]++;
  tiny_mce_js_exec_counter[5203]++;
  F.contentCSS.push(F.documentBaseURI.toAbsolute(s));
  tiny_mce_js_exec_counter[5202]++;
});
  }
  tiny_mce_js_exec_counter[5204]++;
  z = (q.iframeHeight || z) + (typeof (z) == "number" ? (q.deltaHeight || 0) : "");
  if (z < 100) 
  {
    tiny_mce_js_exec_counter[5205]++;
    z = 100;
  }
  tiny_mce_js_exec_counter[5206]++;
  F.iframeHTML = G.doctype + '<html><head xmlns="http://www.w3.org/1999/xhtml">';
  if (G.document_base_url != m.documentBaseURL) 
  {
    tiny_mce_js_exec_counter[5207]++;
    F.iframeHTML += '<base href="' + F.documentBaseURI.getURI() + '" />';
  }
  if (G.ie7_compat) 
  {
    tiny_mce_js_exec_counter[5208]++;
    F.iframeHTML += '<meta http-equiv="X-UA-Compatible" content="IE=7" />';
  } else {
    tiny_mce_js_exec_counter[5209]++;
    F.iframeHTML += '<meta http-equiv="X-UA-Compatible" content="IE=edge" />';
  }
  tiny_mce_js_exec_counter[5210]++;
  F.iframeHTML += '<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />';
  if (!a || !/Firefox\/2/.test(navigator.userAgent)) 
  {
    for (y = 0; y < F.contentCSS.length; y++) 
      {
        tiny_mce_js_exec_counter[5211]++;
        F.iframeHTML += '<link type="text/css" rel="stylesheet" href="' + F.contentCSS[y] + '" />';
      }
    tiny_mce_js_exec_counter[5212]++;
    F.contentCSS = [];
  }
  tiny_mce_js_exec_counter[5213]++;
  x = G.body_id || "tinymce";
  if (x.indexOf("=") != -1) 
  {
    tiny_mce_js_exec_counter[5214]++;
    x = F.getParam("body_id", "", "hash");
    tiny_mce_js_exec_counter[5215]++;
    x = x[F.id] || x;
  }
  tiny_mce_js_exec_counter[5216]++;
  A = G.body_class || "";
  if (A.indexOf("=") != -1) 
  {
    tiny_mce_js_exec_counter[5217]++;
    A = F.getParam("body_class", "", "hash");
    tiny_mce_js_exec_counter[5218]++;
    A = A[F.id] || "";
  }
  tiny_mce_js_exec_counter[5219]++;
  F.iframeHTML += '</head><body id="' + x + '" class="mceContentBody ' + A + '"></body></html>';
  if (m.relaxedDomain && (b || (m.isOpera && parseFloat(opera.version()) < 11))) 
  {
    tiny_mce_js_exec_counter[5220]++;
    D = 'javascript:(function(){document.open();document.domain="' + document.domain + '";var ed = window.parent.tinyMCE.get("' + F.id + '");document.write(ed.iframeHTML);document.close();ed.setupIframe();})()';
  }
  tiny_mce_js_exec_counter[5221]++;
  r = n.add(q.iframeContainer, "iframe", {id: F.id + "_ifr", src: D || 'javascript:""', frameBorder: "0", title: G.aria_label, style: {width: "100%", height: z}});
  tiny_mce_js_exec_counter[5222]++;
  F.contentAreaContainer = q.iframeContainer;
  tiny_mce_js_exec_counter[5223]++;
  n.get(q.editorContainer).style.display = F.orgDisplay;
  tiny_mce_js_exec_counter[5224]++;
  n.get(F.id).style.display = "none";
  tiny_mce_js_exec_counter[5225]++;
  n.setAttrib(F.id, "aria-hidden", true);
  if (!m.relaxedDomain || !D) 
  {
    tiny_mce_js_exec_counter[5226]++;
    F.setupIframe();
  }
  tiny_mce_js_exec_counter[5227]++;
  B = r = q = null;
  tiny_mce_js_exec_counter[5154]++;
}, setupIframe: function() {
  tiny_mce_js_exec_counter[5228]++;
  tiny_mce_js_exec_counter[5230]++;
  var r = this, x = r.settings, y = n.get(r.id), z = r.getDoc(), v, p;
  if (!b || !m.relaxedDomain) 
  {
    tiny_mce_js_exec_counter[5232]++;
    z.open();
    tiny_mce_js_exec_counter[5233]++;
    z.write(r.iframeHTML);
    tiny_mce_js_exec_counter[5234]++;
    z.close();
    if (m.relaxedDomain) 
    {
      tiny_mce_js_exec_counter[5235]++;
      z.domain = m.relaxedDomain;
    }
  }
  if (!b) 
  {
    try {
      if (!x.readonly) 
      {
        tiny_mce_js_exec_counter[5236]++;
        z.designMode = "On";
      }
    }    catch (q) {
}
  }
  if (b) 
  {
    tiny_mce_js_exec_counter[5237]++;
    p = r.getBody();
    tiny_mce_js_exec_counter[5238]++;
    n.hide(p);
    if (!x.readonly) 
    {
      tiny_mce_js_exec_counter[5239]++;
      p.contentEditable = true;
    }
    tiny_mce_js_exec_counter[5240]++;
    n.show(p);
  }
  tiny_mce_js_exec_counter[5241]++;
  r.schema = new m.html.Schema(x);
  tiny_mce_js_exec_counter[5242]++;
  r.dom = new m.dom.DOMUtils(r.getDoc(), {keep_values: true, url_converter: r.convertURL, url_converter_scope: r, hex_colors: x.force_hex_style_colors, class_filter: x.class_filter, update_styles: 1, fix_ie_paragraphs: 1, schema: r.schema});
  tiny_mce_js_exec_counter[5243]++;
  r.parser = new m.html.DomParser(x, r.schema);
  tiny_mce_js_exec_counter[5244]++;
  r.parser.addAttributeFilter("name", function(s, t) {
  tiny_mce_js_exec_counter[5245]++;
  tiny_mce_js_exec_counter[5247]++;
  var B = s.length, D, A, C, E;
  while (B--) 
    {
      tiny_mce_js_exec_counter[5249]++;
      E = s[B];
      if (E.name === "a" && E.firstChild) 
      {
        tiny_mce_js_exec_counter[5250]++;
        C = E.parent;
        tiny_mce_js_exec_counter[5251]++;
        D = E.lastChild;
do {
          tiny_mce_js_exec_counter[5252]++;
          A = D.prev;
          tiny_mce_js_exec_counter[5253]++;
          C.insert(D, E);
          tiny_mce_js_exec_counter[5254]++;
          D = A;
        } while (D);
      }
    }
  tiny_mce_js_exec_counter[5246]++;
});
  tiny_mce_js_exec_counter[5255]++;
  r.parser.addAttributeFilter("src,href,style", function(s, t) {
  tiny_mce_js_exec_counter[5256]++;
  tiny_mce_js_exec_counter[5258]++;
  var A = s.length, B, D = r.dom, C;
  while (A--) 
    {
      tiny_mce_js_exec_counter[5260]++;
      B = s[A];
      tiny_mce_js_exec_counter[5261]++;
      C = B.attr(t);
      if (t === "style") 
      {
        tiny_mce_js_exec_counter[5262]++;
        B.attr("data-mce-style", D.serializeStyle(D.parseStyle(C), B.name));
      } else {
        tiny_mce_js_exec_counter[5263]++;
        B.attr("data-mce-" + t, r.convertURL(C, t, B.name));
      }
    }
  tiny_mce_js_exec_counter[5257]++;
});
  tiny_mce_js_exec_counter[5264]++;
  r.parser.addNodeFilter("script", function(s, t) {
  tiny_mce_js_exec_counter[5265]++;
  tiny_mce_js_exec_counter[5267]++;
  var A = s.length;
  while (A--) 
    {
      tiny_mce_js_exec_counter[5269]++;
      s[A].attr("type", "mce-text/javascript");
    }
  tiny_mce_js_exec_counter[5266]++;
});
  tiny_mce_js_exec_counter[5270]++;
  r.parser.addNodeFilter("#cdata", function(s, t) {
  tiny_mce_js_exec_counter[5271]++;
  tiny_mce_js_exec_counter[5273]++;
  var A = s.length, B;
  while (A--) 
    {
      tiny_mce_js_exec_counter[5275]++;
      B = s[A];
      tiny_mce_js_exec_counter[5276]++;
      B.type = 8;
      tiny_mce_js_exec_counter[5277]++;
      B.name = "#comment";
      tiny_mce_js_exec_counter[5278]++;
      B.value = "[CDATA[" + B.value + "]]";
    }
  tiny_mce_js_exec_counter[5272]++;
});
  tiny_mce_js_exec_counter[5279]++;
  r.parser.addNodeFilter("p,h1,h2,h3,h4,h5,h6,div", function(t, A) {
  tiny_mce_js_exec_counter[5280]++;
  tiny_mce_js_exec_counter[5282]++;
  var B = t.length, C, s = r.schema.getNonEmptyElements();
  while (B--) 
    {
      tiny_mce_js_exec_counter[5284]++;
      C = t[B];
      if (C.isEmpty(s)) 
      {
        tiny_mce_js_exec_counter[5285]++;
        C.empty().append(new m.html.Node("br", 1)).shortEnded = true;
      }
    }
  tiny_mce_js_exec_counter[5281]++;
});
  tiny_mce_js_exec_counter[5286]++;
  r.serializer = new m.dom.Serializer(x, r.dom, r.schema);
  tiny_mce_js_exec_counter[5287]++;
  r.selection = new m.dom.Selection(r.dom, r.getWin(), r.serializer);
  tiny_mce_js_exec_counter[5288]++;
  r.formatter = new m.Formatter(this);
  tiny_mce_js_exec_counter[5289]++;
  r.formatter.register({alignleft: [{selector: "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li", styles: {textAlign: "left"}}, {selector: "img,table", collapsed: false, styles: {"float": "left"}}], aligncenter: [{selector: "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li", styles: {textAlign: "center"}}, {selector: "img", collapsed: false, styles: {display: "block", marginLeft: "auto", marginRight: "auto"}}, {selector: "table", collapsed: false, styles: {marginLeft: "auto", marginRight: "auto"}}], alignright: [{selector: "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li", styles: {textAlign: "right"}}, {selector: "img,table", collapsed: false, styles: {"float": "right"}}], alignfull: [{selector: "p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li", styles: {textAlign: "justify"}}], bold: [{inline: "strong", remove: "all"}, {inline: "span", styles: {fontWeight: "bold"}}, {inline: "b", remove: "all"}], italic: [{inline: "em", remove: "all"}, {inline: "span", styles: {fontStyle: "italic"}}, {inline: "i", remove: "all"}], underline: [{inline: "span", styles: {textDecoration: "underline"}, exact: true}, {inline: "u", remove: "all"}], strikethrough: [{inline: "span", styles: {textDecoration: "line-through"}, exact: true}, {inline: "strike", remove: "all"}], forecolor: {inline: "span", styles: {color: "%value"}, wrap_links: false}, hilitecolor: {inline: "span", styles: {backgroundColor: "%value"}, wrap_links: false}, fontname: {inline: "span", styles: {fontFamily: "%value"}}, fontsize: {inline: "span", styles: {fontSize: "%value"}}, fontsize_class: {inline: "span", attributes: {"class": "%value"}}, blockquote: {block: "blockquote", wrapper: 1, remove: "all"}, removeformat: [{selector: "b,strong,em,i,font,u,strike", remove: "all", split: true, expand: false, block_expand: true, deep: true}, {selector: "span", attributes: ["style", "class"], remove: "empty", split: true, expand: false, deep: true}, {selector: "*", attributes: ["style", "class"], split: false, expand: false, deep: true}]});
  tiny_mce_js_exec_counter[5290]++;
  i("p h1 h2 h3 h4 h5 h6 div address pre div code dt dd samp".split(/\s/), function(s) {
  tiny_mce_js_exec_counter[5291]++;
  tiny_mce_js_exec_counter[5293]++;
  r.formatter.register(s, {block: s, remove: "all"});
  tiny_mce_js_exec_counter[5292]++;
});
  tiny_mce_js_exec_counter[5294]++;
  r.formatter.register(r.settings.formats);
  tiny_mce_js_exec_counter[5295]++;
  r.undoManager = new m.UndoManager(r);
  tiny_mce_js_exec_counter[5296]++;
  r.undoManager.onAdd.add(function(t, s) {
  tiny_mce_js_exec_counter[5297]++;
  if (!s.initial) 
  {
    tiny_mce_js_exec_counter[5299]++;
    return r.onChange.dispatch(r, s, t);
  }
  tiny_mce_js_exec_counter[5298]++;
});
  tiny_mce_js_exec_counter[5300]++;
  r.undoManager.onUndo.add(function(t, s) {
  tiny_mce_js_exec_counter[5301]++;
  tiny_mce_js_exec_counter[5302]++;
  return r.onUndo.dispatch(r, s, t);
});
  tiny_mce_js_exec_counter[5303]++;
  r.undoManager.onRedo.add(function(t, s) {
  tiny_mce_js_exec_counter[5304]++;
  tiny_mce_js_exec_counter[5305]++;
  return r.onRedo.dispatch(r, s, t);
});
  tiny_mce_js_exec_counter[5306]++;
  r.forceBlocks = new m.ForceBlocks(r, {forced_root_block: x.forced_root_block});
  tiny_mce_js_exec_counter[5307]++;
  r.editorCommands = new m.EditorCommands(r);
  tiny_mce_js_exec_counter[5308]++;
  r.serializer.onPreProcess.add(function(s, t) {
  tiny_mce_js_exec_counter[5309]++;
  tiny_mce_js_exec_counter[5310]++;
  return r.onPreProcess.dispatch(r, t, s);
});
  tiny_mce_js_exec_counter[5311]++;
  r.serializer.onPostProcess.add(function(s, t) {
  tiny_mce_js_exec_counter[5312]++;
  tiny_mce_js_exec_counter[5313]++;
  return r.onPostProcess.dispatch(r, t, s);
});
  tiny_mce_js_exec_counter[5314]++;
  r.onPreInit.dispatch(r);
  if (!x.gecko_spellcheck) 
  {
    tiny_mce_js_exec_counter[5315]++;
    r.getBody().spellcheck = 0;
  }
  if (!x.readonly) 
  {
    tiny_mce_js_exec_counter[5316]++;
    r._addEvents();
  }
  tiny_mce_js_exec_counter[5317]++;
  r.controlManager.onPostRender.dispatch(r, r.controlManager);
  tiny_mce_js_exec_counter[5318]++;
  r.onPostRender.dispatch(r);
  if (x.directionality) 
  {
    tiny_mce_js_exec_counter[5319]++;
    r.getBody().dir = x.directionality;
  }
  if (x.nowrap) 
  {
    tiny_mce_js_exec_counter[5320]++;
    r.getBody().style.whiteSpace = "nowrap";
  }
  if (x.handle_node_change_callback) 
  {
    tiny_mce_js_exec_counter[5321]++;
    r.onNodeChange.add(function(t, s, A) {
  tiny_mce_js_exec_counter[5322]++;
  tiny_mce_js_exec_counter[5324]++;
  r.execCallback("handle_node_change_callback", r.id, A, -1, -1, true, r.selection.isCollapsed());
  tiny_mce_js_exec_counter[5323]++;
});
  }
  if (x.save_callback) 
  {
    tiny_mce_js_exec_counter[5325]++;
    r.onSaveContent.add(function(s, A) {
  tiny_mce_js_exec_counter[5326]++;
  tiny_mce_js_exec_counter[5328]++;
  var t = r.execCallback("save_callback", r.id, A.content, r.getBody());
  if (t) 
  {
    tiny_mce_js_exec_counter[5330]++;
    A.content = t;
  }
  tiny_mce_js_exec_counter[5327]++;
});
  }
  if (x.onchange_callback) 
  {
    tiny_mce_js_exec_counter[5331]++;
    r.onChange.add(function(t, s) {
  tiny_mce_js_exec_counter[5332]++;
  tiny_mce_js_exec_counter[5334]++;
  r.execCallback("onchange_callback", r, s);
  tiny_mce_js_exec_counter[5333]++;
});
  }
  if (x.protect) 
  {
    tiny_mce_js_exec_counter[5335]++;
    r.onBeforeSetContent.add(function(s, t) {
  tiny_mce_js_exec_counter[5336]++;
  if (x.protect) 
  {
    tiny_mce_js_exec_counter[5338]++;
    i(x.protect, function(A) {
  tiny_mce_js_exec_counter[5339]++;
  tiny_mce_js_exec_counter[5341]++;
  t.content = t.content.replace(A, function(B) {
  tiny_mce_js_exec_counter[5342]++;
  tiny_mce_js_exec_counter[5343]++;
  return "<!--mce:protected " + escape(B) + "-->";
});
  tiny_mce_js_exec_counter[5340]++;
});
  }
  tiny_mce_js_exec_counter[5337]++;
});
  }
  if (x.convert_newlines_to_brs) 
  {
    tiny_mce_js_exec_counter[5344]++;
    r.onBeforeSetContent.add(function(s, t) {
  tiny_mce_js_exec_counter[5345]++;
  if (t.initial) 
  {
    tiny_mce_js_exec_counter[5347]++;
    t.content = t.content.replace(/\r?\n/g, "<br />");
  }
  tiny_mce_js_exec_counter[5346]++;
});
  }
  if (x.preformatted) 
  {
    tiny_mce_js_exec_counter[5348]++;
    r.onPostProcess.add(function(s, t) {
  tiny_mce_js_exec_counter[5349]++;
  tiny_mce_js_exec_counter[5351]++;
  t.content = t.content.replace(/^\s*<pre.*?>/, "");
  tiny_mce_js_exec_counter[5352]++;
  t.content = t.content.replace(/<\/pre>\s*$/, "");
  if (t.set) 
  {
    tiny_mce_js_exec_counter[5353]++;
    t.content = '<pre class="mceItemHidden">' + t.content + "</pre>";
  }
  tiny_mce_js_exec_counter[5350]++;
});
  }
  if (x.verify_css_classes) 
  {
    tiny_mce_js_exec_counter[5354]++;
    r.serializer.attribValueFilter = function(C, A) {
  tiny_mce_js_exec_counter[5355]++;
  tiny_mce_js_exec_counter[5356]++;
  var B, t;
  if (C == "class") 
  {
    if (!r.classesRE) 
    {
      tiny_mce_js_exec_counter[5358]++;
      t = r.dom.getClasses();
      if (t.length > 0) 
      {
        tiny_mce_js_exec_counter[5359]++;
        B = "";
        tiny_mce_js_exec_counter[5360]++;
        i(t, function(s) {
  tiny_mce_js_exec_counter[5361]++;
  tiny_mce_js_exec_counter[5363]++;
  B += (B ? "|" : "") + s["class"];
  tiny_mce_js_exec_counter[5362]++;
});
        tiny_mce_js_exec_counter[5364]++;
        r.classesRE = new RegExp("(" + B + ")", "gi");
      }
    }
    tiny_mce_js_exec_counter[5365]++;
    return !r.classesRE || /(\bmceItem\w+\b|\bmceTemp\w+\b)/g.test(A) || r.classesRE.test(A) ? A : "";
  }
  tiny_mce_js_exec_counter[5366]++;
  return A;
};
  }
  if (x.cleanup_callback) 
  {
    tiny_mce_js_exec_counter[5367]++;
    r.onBeforeSetContent.add(function(s, t) {
  tiny_mce_js_exec_counter[5368]++;
  tiny_mce_js_exec_counter[5370]++;
  t.content = r.execCallback("cleanup_callback", "insert_to_editor", t.content, t);
  tiny_mce_js_exec_counter[5369]++;
});
    tiny_mce_js_exec_counter[5371]++;
    r.onPreProcess.add(function(s, t) {
  tiny_mce_js_exec_counter[5372]++;
  if (t.set) 
  {
    tiny_mce_js_exec_counter[5374]++;
    r.execCallback("cleanup_callback", "insert_to_editor_dom", t.node, t);
  }
  if (t.get) 
  {
    tiny_mce_js_exec_counter[5375]++;
    r.execCallback("cleanup_callback", "get_from_editor_dom", t.node, t);
  }
  tiny_mce_js_exec_counter[5373]++;
});
    tiny_mce_js_exec_counter[5376]++;
    r.onPostProcess.add(function(s, t) {
  tiny_mce_js_exec_counter[5377]++;
  if (t.set) 
  {
    tiny_mce_js_exec_counter[5379]++;
    t.content = r.execCallback("cleanup_callback", "insert_to_editor", t.content, t);
  }
  if (t.get) 
  {
    tiny_mce_js_exec_counter[5380]++;
    t.content = r.execCallback("cleanup_callback", "get_from_editor", t.content, t);
  }
  tiny_mce_js_exec_counter[5378]++;
});
  }
  if (x.save_callback) 
  {
    tiny_mce_js_exec_counter[5381]++;
    r.onGetContent.add(function(s, t) {
  tiny_mce_js_exec_counter[5382]++;
  if (t.save) 
  {
    tiny_mce_js_exec_counter[5384]++;
    t.content = r.execCallback("save_callback", r.id, t.content, r.getBody());
  }
  tiny_mce_js_exec_counter[5383]++;
});
  }
  if (x.handle_event_callback) 
  {
    tiny_mce_js_exec_counter[5385]++;
    r.onEvent.add(function(s, t, A) {
  tiny_mce_js_exec_counter[5386]++;
  if (r.execCallback("handle_event_callback", t, s, A) === false) 
  {
    tiny_mce_js_exec_counter[5388]++;
    j.cancel(t);
  }
  tiny_mce_js_exec_counter[5387]++;
});
  }
  tiny_mce_js_exec_counter[5389]++;
  r.onSetContent.add(function() {
  tiny_mce_js_exec_counter[5390]++;
  tiny_mce_js_exec_counter[5392]++;
  r.addVisual(r.getBody());
  tiny_mce_js_exec_counter[5391]++;
});
  if (x.padd_empty_editor) 
  {
    tiny_mce_js_exec_counter[5393]++;
    r.onPostProcess.add(function(s, t) {
  tiny_mce_js_exec_counter[5394]++;
  tiny_mce_js_exec_counter[5396]++;
  t.content = t.content.replace(/^(<p[^>]*>(&nbsp;|&#160;|\s|\u00a0|)<\/p>[\r\n]*|<br \/>[\r\n]*)$/, "");
  tiny_mce_js_exec_counter[5395]++;
});
  }
  if (a) 
  {
    function u(s, t) {
      tiny_mce_js_exec_counter[5397]++;
      tiny_mce_js_exec_counter[5399]++;
      i(s.dom.select("a"), function(B) {
  tiny_mce_js_exec_counter[5400]++;
  tiny_mce_js_exec_counter[5402]++;
  var A = B.parentNode;
  if (s.dom.isBlock(A) && A.lastChild === B) 
  {
    tiny_mce_js_exec_counter[5404]++;
    s.dom.add(A, "br", {"data-mce-bogus": 1});
  }
  tiny_mce_js_exec_counter[5401]++;
});
      tiny_mce_js_exec_counter[5398]++;
    }    tiny_mce_js_exec_counter[5405]++;
    r.onExecCommand.add(function(s, t) {
  tiny_mce_js_exec_counter[5406]++;
  if (t === "CreateLink") 
  {
    tiny_mce_js_exec_counter[5408]++;
    u(s);
  }
  tiny_mce_js_exec_counter[5407]++;
});
    tiny_mce_js_exec_counter[5409]++;
    r.onSetContent.add(r.selection.onSetContent.add(u));
    if (!x.readonly) 
    {
      try {
        tiny_mce_js_exec_counter[5410]++;
        z.designMode = "Off";
        tiny_mce_js_exec_counter[5411]++;
        z.designMode = "On";
      }      catch (q) {
}
    }
  }
  tiny_mce_js_exec_counter[5412]++;
  setTimeout(function() {
  tiny_mce_js_exec_counter[5413]++;
  if (r.removed) 
  {
    tiny_mce_js_exec_counter[5415]++;
    return;
  }
  tiny_mce_js_exec_counter[5416]++;
  r.load({initial: true, format: "html"});
  tiny_mce_js_exec_counter[5417]++;
  r.startContent = r.getContent({format: "raw"});
  tiny_mce_js_exec_counter[5418]++;
  r.undoManager.add();
  tiny_mce_js_exec_counter[5419]++;
  r.initialized = true;
  tiny_mce_js_exec_counter[5420]++;
  r.onInit.dispatch(r);
  tiny_mce_js_exec_counter[5421]++;
  r.execCallback("setupcontent_callback", r.id, r.getBody(), r.getDoc());
  tiny_mce_js_exec_counter[5422]++;
  r.execCallback("init_instance_callback", r);
  tiny_mce_js_exec_counter[5423]++;
  r.focus(true);
  tiny_mce_js_exec_counter[5424]++;
  r.nodeChanged({initial: 1});
  tiny_mce_js_exec_counter[5425]++;
  i(r.contentCSS, function(s) {
  tiny_mce_js_exec_counter[5426]++;
  tiny_mce_js_exec_counter[5428]++;
  r.dom.loadCSS(s);
  tiny_mce_js_exec_counter[5427]++;
});
  if (x.auto_focus) 
  {
    tiny_mce_js_exec_counter[5429]++;
    setTimeout(function() {
  tiny_mce_js_exec_counter[5430]++;
  tiny_mce_js_exec_counter[5432]++;
  var s = m.get(x.auto_focus);
  tiny_mce_js_exec_counter[5434]++;
  s.selection.select(s.getBody(), 1);
  tiny_mce_js_exec_counter[5435]++;
  s.selection.collapse(1);
  tiny_mce_js_exec_counter[5436]++;
  s.getWin().focus();
  tiny_mce_js_exec_counter[5431]++;
}, 100);
  }
  tiny_mce_js_exec_counter[5414]++;
}, 1);
  tiny_mce_js_exec_counter[5437]++;
  y = null;
  tiny_mce_js_exec_counter[5229]++;
}, focus: function(s) {
  tiny_mce_js_exec_counter[5438]++;
  tiny_mce_js_exec_counter[5440]++;
  var x, q = this, v = q.settings.content_editable, r, p, u = q.getDoc();
  if (!s) 
  {
    tiny_mce_js_exec_counter[5442]++;
    r = q.selection.getRng();
    if (r.item) 
    {
      tiny_mce_js_exec_counter[5443]++;
      p = r.item(0);
    }
    if (!v) 
    {
      tiny_mce_js_exec_counter[5444]++;
      q.getWin().focus();
    }
    if (p && p.ownerDocument == u) 
    {
      tiny_mce_js_exec_counter[5445]++;
      r = u.body.createControlRange();
      tiny_mce_js_exec_counter[5446]++;
      r.addElement(p);
      tiny_mce_js_exec_counter[5447]++;
      r.select();
    }
  }
  if (m.activeEditor != q) 
  {
    if ((x = m.activeEditor) != null) 
    {
      tiny_mce_js_exec_counter[5448]++;
      x.onDeactivate.dispatch(x, q);
    }
    tiny_mce_js_exec_counter[5449]++;
    q.onActivate.dispatch(q, x);
  }
  tiny_mce_js_exec_counter[5450]++;
  m._setActive(q);
  tiny_mce_js_exec_counter[5439]++;
}, execCallback: function(u) {
  tiny_mce_js_exec_counter[5451]++;
  tiny_mce_js_exec_counter[5452]++;
  var p = this, r = p.settings[u], q;
  if (!r) 
  {
    tiny_mce_js_exec_counter[5454]++;
    return;
  }
  if (p.callbackLookup && (q = p.callbackLookup[u])) 
  {
    tiny_mce_js_exec_counter[5455]++;
    r = q.func;
    tiny_mce_js_exec_counter[5456]++;
    q = q.scope;
  }
  if (d(r, "string")) 
  {
    tiny_mce_js_exec_counter[5457]++;
    q = r.replace(/\.\w+$/, "");
    tiny_mce_js_exec_counter[5458]++;
    q = q ? m.resolve(q) : 0;
    tiny_mce_js_exec_counter[5459]++;
    r = m.resolve(r);
    tiny_mce_js_exec_counter[5460]++;
    p.callbackLookup = p.callbackLookup || {};
    tiny_mce_js_exec_counter[5461]++;
    p.callbackLookup[u] = {func: r, scope: q};
  }
  tiny_mce_js_exec_counter[5462]++;
  return r.apply(q || p, Array.prototype.slice.call(arguments, 1));
}, translate: function(p) {
  tiny_mce_js_exec_counter[5463]++;
  tiny_mce_js_exec_counter[5464]++;
  var r = this.settings.language || "en", q = m.i18n;
  if (!p) 
  {
    tiny_mce_js_exec_counter[5466]++;
    return "";
  }
  tiny_mce_js_exec_counter[5467]++;
  return q[r + "." + p] || p.replace(/{\#([^}]+)\}/g, function(t, s) {
  tiny_mce_js_exec_counter[5468]++;
  tiny_mce_js_exec_counter[5469]++;
  return q[r + "." + s] || "{#" + s + "}";
});
}, getLang: function(q, p) {
  tiny_mce_js_exec_counter[5470]++;
  tiny_mce_js_exec_counter[5471]++;
  return m.i18n[(this.settings.language || "en") + "." + q] || (d(p) ? p : "{#" + q + "}");
}, getParam: function(u, r, p) {
  tiny_mce_js_exec_counter[5472]++;
  tiny_mce_js_exec_counter[5473]++;
  var s = m.trim, q = d(this.settings[u]) ? this.settings[u] : r, t;
  if (p === "hash") 
  {
    tiny_mce_js_exec_counter[5475]++;
    t = {};
    if (d(q, "string")) 
    {
      tiny_mce_js_exec_counter[5476]++;
      i(q.indexOf("=") > 0 ? q.split(/[;,](?![^=;,]*(?:[;,]|$))/) : q.split(","), function(x) {
  tiny_mce_js_exec_counter[5477]++;
  tiny_mce_js_exec_counter[5479]++;
  x = x.split("=");
  if (x.length > 1) 
  {
    tiny_mce_js_exec_counter[5480]++;
    t[s(x[0])] = s(x[1]);
  } else {
    tiny_mce_js_exec_counter[5481]++;
    t[s(x[0])] = s(x);
  }
  tiny_mce_js_exec_counter[5478]++;
});
    } else {
      tiny_mce_js_exec_counter[5482]++;
      t = q;
    }
    tiny_mce_js_exec_counter[5483]++;
    return t;
  }
  tiny_mce_js_exec_counter[5484]++;
  return q;
}, nodeChanged: function(r) {
  tiny_mce_js_exec_counter[5485]++;
  tiny_mce_js_exec_counter[5487]++;
  var p = this, q = p.selection, u = (b ? q.getNode() : q.getStart()) || p.getBody();
  if (p.initialized) 
  {
    tiny_mce_js_exec_counter[5489]++;
    r = r || {};
    tiny_mce_js_exec_counter[5490]++;
    u = b && u.ownerDocument != p.getDoc() ? p.getBody() : u;
    tiny_mce_js_exec_counter[5491]++;
    r.parents = [];
    tiny_mce_js_exec_counter[5492]++;
    p.dom.getParent(u, function(s) {
  tiny_mce_js_exec_counter[5493]++;
  if (s.nodeName == "BODY") 
  {
    tiny_mce_js_exec_counter[5495]++;
    return true;
  }
  tiny_mce_js_exec_counter[5496]++;
  r.parents.push(s);
  tiny_mce_js_exec_counter[5494]++;
});
    tiny_mce_js_exec_counter[5497]++;
    p.onNodeChange.dispatch(p, r ? r.controlManager || p.controlManager : p.controlManager, u, q.isCollapsed(), r);
  }
  tiny_mce_js_exec_counter[5486]++;
}, addButton: function(r, q) {
  tiny_mce_js_exec_counter[5498]++;
  tiny_mce_js_exec_counter[5500]++;
  var p = this;
  tiny_mce_js_exec_counter[5502]++;
  p.buttons = p.buttons || {};
  tiny_mce_js_exec_counter[5503]++;
  p.buttons[r] = q;
  tiny_mce_js_exec_counter[5499]++;
}, addCommand: function(p, r, q) {
  tiny_mce_js_exec_counter[5504]++;
  tiny_mce_js_exec_counter[5506]++;
  this.execCommands[p] = {func: r, scope: q || this};
  tiny_mce_js_exec_counter[5505]++;
}, addQueryStateHandler: function(p, r, q) {
  tiny_mce_js_exec_counter[5507]++;
  tiny_mce_js_exec_counter[5509]++;
  this.queryStateCommands[p] = {func: r, scope: q || this};
  tiny_mce_js_exec_counter[5508]++;
}, addQueryValueHandler: function(p, r, q) {
  tiny_mce_js_exec_counter[5510]++;
  tiny_mce_js_exec_counter[5512]++;
  this.queryValueCommands[p] = {func: r, scope: q || this};
  tiny_mce_js_exec_counter[5511]++;
}, addShortcut: function(r, u, p, s) {
  tiny_mce_js_exec_counter[5513]++;
  tiny_mce_js_exec_counter[5514]++;
  var q = this, v;
  if (!q.settings.custom_shortcuts) 
  {
    tiny_mce_js_exec_counter[5516]++;
    return false;
  }
  tiny_mce_js_exec_counter[5517]++;
  q.shortcuts = q.shortcuts || {};
  if (d(p, "string")) 
  {
    tiny_mce_js_exec_counter[5518]++;
    v = p;
    tiny_mce_js_exec_counter[5519]++;
    p = function() {
  tiny_mce_js_exec_counter[5520]++;
  tiny_mce_js_exec_counter[5522]++;
  q.execCommand(v, false, null);
  tiny_mce_js_exec_counter[5521]++;
};
  }
  if (d(p, "object")) 
  {
    tiny_mce_js_exec_counter[5523]++;
    v = p;
    tiny_mce_js_exec_counter[5524]++;
    p = function() {
  tiny_mce_js_exec_counter[5525]++;
  tiny_mce_js_exec_counter[5527]++;
  q.execCommand(v[0], v[1], v[2]);
  tiny_mce_js_exec_counter[5526]++;
};
  }
  tiny_mce_js_exec_counter[5528]++;
  i(g(r), function(t) {
  tiny_mce_js_exec_counter[5529]++;
  tiny_mce_js_exec_counter[5531]++;
  var x = {func: p, scope: s || this, desc: u, alt: false, ctrl: false, shift: false};
  tiny_mce_js_exec_counter[5533]++;
  i(g(t, "+"), function(y) {
  tiny_mce_js_exec_counter[5534]++;
  switch (y) {
    case "alt":
    case "ctrl":
    case "shift":
      {
        tiny_mce_js_exec_counter[5536]++;
        x[y] = true;
        tiny_mce_js_exec_counter[5537]++;
        break;
      }
    default:
      {
        tiny_mce_js_exec_counter[5538]++;
        x.charCode = y.charCodeAt(0);
        tiny_mce_js_exec_counter[5539]++;
        x.keyCode = y.toUpperCase().charCodeAt(0);
      }
  }
  tiny_mce_js_exec_counter[5535]++;
});
  tiny_mce_js_exec_counter[5540]++;
  q.shortcuts[(x.ctrl ? "ctrl" : "") + "," + (x.alt ? "alt" : "") + "," + (x.shift ? "shift" : "") + "," + x.keyCode] = x;
  tiny_mce_js_exec_counter[5530]++;
});
  tiny_mce_js_exec_counter[5541]++;
  return true;
}, execCommand: function(x, v, z, p) {
  tiny_mce_js_exec_counter[5542]++;
  tiny_mce_js_exec_counter[5544]++;
  var r = this, u = 0, y, q;
  if (!/^(mceAddUndoLevel|mceEndUndoLevel|mceBeginUndoLevel|mceRepaint|SelectAll)$/.test(x) && (!p || !p.skip_focus)) 
  {
    tiny_mce_js_exec_counter[5546]++;
    r.focus();
  }
  tiny_mce_js_exec_counter[5547]++;
  y = {};
  tiny_mce_js_exec_counter[5548]++;
  r.onBeforeExecCommand.dispatch(r, x, v, z, y);
  if (y.terminate) 
  {
    tiny_mce_js_exec_counter[5549]++;
    return false;
  }
  if (r.execCallback("execcommand_callback", r.id, r.selection.getNode(), x, v, z)) 
  {
    tiny_mce_js_exec_counter[5550]++;
    r.onExecCommand.dispatch(r, x, v, z, p);
    tiny_mce_js_exec_counter[5551]++;
    return true;
  }
  if (y = r.execCommands[x]) 
  {
    tiny_mce_js_exec_counter[5552]++;
    q = y.func.call(y.scope, v, z);
    if (q !== true) 
    {
      tiny_mce_js_exec_counter[5553]++;
      r.onExecCommand.dispatch(r, x, v, z, p);
      tiny_mce_js_exec_counter[5554]++;
      return q;
    }
  }
  tiny_mce_js_exec_counter[5555]++;
  i(r.plugins, function(s) {
  tiny_mce_js_exec_counter[5556]++;
  if (s.execCommand && s.execCommand(x, v, z)) 
  {
    tiny_mce_js_exec_counter[5558]++;
    r.onExecCommand.dispatch(r, x, v, z, p);
    tiny_mce_js_exec_counter[5559]++;
    u = 1;
    tiny_mce_js_exec_counter[5560]++;
    return false;
  }
  tiny_mce_js_exec_counter[5557]++;
});
  if (u) 
  {
    tiny_mce_js_exec_counter[5561]++;
    return true;
  }
  if (r.theme && r.theme.execCommand && r.theme.execCommand(x, v, z)) 
  {
    tiny_mce_js_exec_counter[5562]++;
    r.onExecCommand.dispatch(r, x, v, z, p);
    tiny_mce_js_exec_counter[5563]++;
    return true;
  }
  if (r.editorCommands.execCommand(x, v, z)) 
  {
    tiny_mce_js_exec_counter[5564]++;
    r.onExecCommand.dispatch(r, x, v, z, p);
    tiny_mce_js_exec_counter[5565]++;
    return true;
  }
  tiny_mce_js_exec_counter[5566]++;
  r.getDoc().execCommand(x, v, z);
  tiny_mce_js_exec_counter[5567]++;
  r.onExecCommand.dispatch(r, x, v, z, p);
  tiny_mce_js_exec_counter[5543]++;
}, queryCommandState: function(u) {
  tiny_mce_js_exec_counter[5568]++;
  tiny_mce_js_exec_counter[5570]++;
  var q = this, v, r;
  if (q._isHidden()) 
  {
    tiny_mce_js_exec_counter[5572]++;
    return;
  }
  if (v = q.queryStateCommands[u]) 
  {
    tiny_mce_js_exec_counter[5573]++;
    r = v.func.call(v.scope);
    if (r !== true) 
    {
      tiny_mce_js_exec_counter[5574]++;
      return r;
    }
  }
  tiny_mce_js_exec_counter[5575]++;
  v = q.editorCommands.queryCommandState(u);
  if (v !== -1) 
  {
    tiny_mce_js_exec_counter[5576]++;
    return v;
  }
  try {
    tiny_mce_js_exec_counter[5577]++;
    return this.getDoc().queryCommandState(u);
  }  catch (p) {
}
  tiny_mce_js_exec_counter[5569]++;
}, queryCommandValue: function(v) {
  tiny_mce_js_exec_counter[5578]++;
  tiny_mce_js_exec_counter[5580]++;
  var q = this, u, r;
  if (q._isHidden()) 
  {
    tiny_mce_js_exec_counter[5582]++;
    return;
  }
  if (u = q.queryValueCommands[v]) 
  {
    tiny_mce_js_exec_counter[5583]++;
    r = u.func.call(u.scope);
    if (r !== true) 
    {
      tiny_mce_js_exec_counter[5584]++;
      return r;
    }
  }
  tiny_mce_js_exec_counter[5585]++;
  u = q.editorCommands.queryCommandValue(v);
  if (d(u)) 
  {
    tiny_mce_js_exec_counter[5586]++;
    return u;
  }
  try {
    tiny_mce_js_exec_counter[5587]++;
    return this.getDoc().queryCommandValue(v);
  }  catch (p) {
}
  tiny_mce_js_exec_counter[5579]++;
}, show: function() {
  tiny_mce_js_exec_counter[5588]++;
  tiny_mce_js_exec_counter[5590]++;
  var p = this;
  tiny_mce_js_exec_counter[5592]++;
  n.show(p.getContainer());
  tiny_mce_js_exec_counter[5593]++;
  n.hide(p.id);
  tiny_mce_js_exec_counter[5594]++;
  p.load();
  tiny_mce_js_exec_counter[5589]++;
}, hide: function() {
  tiny_mce_js_exec_counter[5595]++;
  tiny_mce_js_exec_counter[5597]++;
  var p = this, q = p.getDoc();
  if (b && q) 
  {
    tiny_mce_js_exec_counter[5599]++;
    q.execCommand("SelectAll");
  }
  tiny_mce_js_exec_counter[5600]++;
  p.save();
  tiny_mce_js_exec_counter[5601]++;
  n.hide(p.getContainer());
  tiny_mce_js_exec_counter[5602]++;
  n.setStyle(p.id, "display", p.orgDisplay);
  tiny_mce_js_exec_counter[5596]++;
}, isHidden: function() {
  tiny_mce_js_exec_counter[5603]++;
  tiny_mce_js_exec_counter[5604]++;
  return !n.isHidden(this.id);
}, setProgressState: function(p, q, r) {
  tiny_mce_js_exec_counter[5605]++;
  tiny_mce_js_exec_counter[5606]++;
  this.onSetProgressState.dispatch(this, p, q, r);
  tiny_mce_js_exec_counter[5607]++;
  return p;
}, load: function(s) {
  tiny_mce_js_exec_counter[5608]++;
  tiny_mce_js_exec_counter[5610]++;
  var p = this, r = p.getElement(), q;
  if (r) 
  {
    tiny_mce_js_exec_counter[5612]++;
    s = s || {};
    tiny_mce_js_exec_counter[5613]++;
    s.load = true;
    tiny_mce_js_exec_counter[5614]++;
    q = p.setContent(d(r.value) ? r.value : r.innerHTML, s);
    tiny_mce_js_exec_counter[5615]++;
    s.element = r;
    if (!s.no_events) 
    {
      tiny_mce_js_exec_counter[5616]++;
      p.onLoadContent.dispatch(p, s);
    }
    tiny_mce_js_exec_counter[5617]++;
    s.element = r = null;
    tiny_mce_js_exec_counter[5618]++;
    return q;
  }
  tiny_mce_js_exec_counter[5609]++;
}, save: function(u) {
  tiny_mce_js_exec_counter[5619]++;
  tiny_mce_js_exec_counter[5620]++;
  var p = this, s = p.getElement(), q, r;
  if (!s || !p.initialized) 
  {
    tiny_mce_js_exec_counter[5622]++;
    return;
  }
  tiny_mce_js_exec_counter[5623]++;
  u = u || {};
  tiny_mce_js_exec_counter[5624]++;
  u.save = true;
  if (!u.no_events) 
  {
    tiny_mce_js_exec_counter[5625]++;
    p.undoManager.typing = false;
    tiny_mce_js_exec_counter[5626]++;
    p.undoManager.add();
  }
  tiny_mce_js_exec_counter[5627]++;
  u.element = s;
  tiny_mce_js_exec_counter[5628]++;
  q = u.content = p.getContent(u);
  if (!u.no_events) 
  {
    tiny_mce_js_exec_counter[5629]++;
    p.onSaveContent.dispatch(p, u);
  }
  tiny_mce_js_exec_counter[5630]++;
  q = u.content;
  if (!/TEXTAREA|INPUT/i.test(s.nodeName)) 
  {
    tiny_mce_js_exec_counter[5631]++;
    s.innerHTML = q;
    if (r = n.getParent(p.id, "form")) 
    {
      tiny_mce_js_exec_counter[5632]++;
      i(r.elements, function(t) {
  tiny_mce_js_exec_counter[5633]++;
  if (t.name == p.id) 
  {
    tiny_mce_js_exec_counter[5635]++;
    t.value = q;
    tiny_mce_js_exec_counter[5636]++;
    return false;
  }
  tiny_mce_js_exec_counter[5634]++;
});
    }
  } else {
    tiny_mce_js_exec_counter[5637]++;
    s.value = q;
  }
  tiny_mce_js_exec_counter[5638]++;
  u.element = s = null;
  tiny_mce_js_exec_counter[5639]++;
  return q;
}, setContent: function(t, s) {
  tiny_mce_js_exec_counter[5640]++;
  tiny_mce_js_exec_counter[5641]++;
  var r = this, q, p = r.getBody();
  tiny_mce_js_exec_counter[5643]++;
  s = s || {};
  tiny_mce_js_exec_counter[5644]++;
  s.format = s.format || "html";
  tiny_mce_js_exec_counter[5645]++;
  s.set = true;
  tiny_mce_js_exec_counter[5646]++;
  s.content = t;
  if (!s.no_events) 
  {
    tiny_mce_js_exec_counter[5647]++;
    r.onBeforeSetContent.dispatch(r, s);
  }
  if (!m.isIE && (t.length === 0 || /^\s+$/.test(t))) 
  {
    tiny_mce_js_exec_counter[5648]++;
    p.innerHTML = '<br data-mce-bogus="1" />';
    tiny_mce_js_exec_counter[5649]++;
    return;
  }
  if (s.format !== "raw") 
  {
    tiny_mce_js_exec_counter[5650]++;
    s.content = new m.html.Serializer({}, r.schema).serialize(r.parser.parse(s.content));
  }
  tiny_mce_js_exec_counter[5651]++;
  p.innerHTML = m.trim(s.content);
  if (!s.no_events) 
  {
    tiny_mce_js_exec_counter[5652]++;
    r.onSetContent.dispatch(r, s);
  }
  tiny_mce_js_exec_counter[5653]++;
  return s.content;
}, getContent: function(q) {
  tiny_mce_js_exec_counter[5654]++;
  tiny_mce_js_exec_counter[5655]++;
  var p = this, r;
  tiny_mce_js_exec_counter[5657]++;
  q = q || {};
  tiny_mce_js_exec_counter[5658]++;
  q.format = q.format || "html";
  tiny_mce_js_exec_counter[5659]++;
  q.get = true;
  if (!q.no_events) 
  {
    tiny_mce_js_exec_counter[5660]++;
    p.onBeforeGetContent.dispatch(p, q);
  }
  if (q.format == "raw") 
  {
    tiny_mce_js_exec_counter[5661]++;
    r = p.getBody().innerHTML;
  } else {
    tiny_mce_js_exec_counter[5662]++;
    r = p.serializer.serialize(p.getBody(), q);
  }
  tiny_mce_js_exec_counter[5663]++;
  q.content = m.trim(r);
  if (!q.no_events) 
  {
    tiny_mce_js_exec_counter[5664]++;
    p.onGetContent.dispatch(p, q);
  }
  tiny_mce_js_exec_counter[5665]++;
  return q.content;
}, isDirty: function() {
  tiny_mce_js_exec_counter[5666]++;
  tiny_mce_js_exec_counter[5667]++;
  var p = this;
  tiny_mce_js_exec_counter[5669]++;
  return m.trim(p.startContent) != m.trim(p.getContent({format: "raw", no_events: 1})) && !p.isNotDirty;
}, getContainer: function() {
  tiny_mce_js_exec_counter[5670]++;
  tiny_mce_js_exec_counter[5671]++;
  var p = this;
  if (!p.container) 
  {
    tiny_mce_js_exec_counter[5673]++;
    p.container = n.get(p.editorContainer || p.id + "_parent");
  }
  tiny_mce_js_exec_counter[5674]++;
  return p.container;
}, getContentAreaContainer: function() {
  tiny_mce_js_exec_counter[5675]++;
  tiny_mce_js_exec_counter[5676]++;
  return this.contentAreaContainer;
}, getElement: function() {
  tiny_mce_js_exec_counter[5677]++;
  tiny_mce_js_exec_counter[5678]++;
  return n.get(this.settings.content_element || this.id);
}, getWin: function() {
  tiny_mce_js_exec_counter[5679]++;
  tiny_mce_js_exec_counter[5680]++;
  var p = this, q;
  if (!p.contentWindow) 
  {
    tiny_mce_js_exec_counter[5682]++;
    q = n.get(p.id + "_ifr");
    if (q) 
    {
      tiny_mce_js_exec_counter[5683]++;
      p.contentWindow = q.contentWindow;
    }
  }
  tiny_mce_js_exec_counter[5684]++;
  return p.contentWindow;
}, getDoc: function() {
  tiny_mce_js_exec_counter[5685]++;
  tiny_mce_js_exec_counter[5686]++;
  var q = this, p;
  if (!q.contentDocument) 
  {
    tiny_mce_js_exec_counter[5688]++;
    p = q.getWin();
    if (p) 
    {
      tiny_mce_js_exec_counter[5689]++;
      q.contentDocument = p.document;
    }
  }
  tiny_mce_js_exec_counter[5690]++;
  return q.contentDocument;
}, getBody: function() {
  tiny_mce_js_exec_counter[5691]++;
  tiny_mce_js_exec_counter[5692]++;
  return this.bodyElement || this.getDoc().body;
}, convertURL: function(p, x, v) {
  tiny_mce_js_exec_counter[5693]++;
  tiny_mce_js_exec_counter[5694]++;
  var q = this, r = q.settings;
  if (r.urlconverter_callback) 
  {
    tiny_mce_js_exec_counter[5696]++;
    return q.execCallback("urlconverter_callback", p, v, true, x);
  }
  if (!r.convert_urls || (v && v.nodeName == "LINK") || p.indexOf("file:") === 0) 
  {
    tiny_mce_js_exec_counter[5697]++;
    return p;
  }
  if (r.relative_urls) 
  {
    tiny_mce_js_exec_counter[5698]++;
    return q.documentBaseURI.toRelative(p);
  }
  tiny_mce_js_exec_counter[5699]++;
  p = q.documentBaseURI.toAbsolute(p, r.remove_script_host);
  tiny_mce_js_exec_counter[5700]++;
  return p;
}, addVisual: function(r) {
  tiny_mce_js_exec_counter[5701]++;
  tiny_mce_js_exec_counter[5703]++;
  var p = this, q = p.settings;
  tiny_mce_js_exec_counter[5705]++;
  r = r || p.getBody();
  if (!d(p.hasVisual)) 
  {
    tiny_mce_js_exec_counter[5706]++;
    p.hasVisual = q.visual;
  }
  tiny_mce_js_exec_counter[5707]++;
  i(p.dom.select("table,a", r), function(t) {
  tiny_mce_js_exec_counter[5708]++;
  tiny_mce_js_exec_counter[5710]++;
  var s;
  switch (t.nodeName) {
    case "TABLE":
      {
        tiny_mce_js_exec_counter[5712]++;
        s = p.dom.getAttrib(t, "border");
        if (!s || s == "0") 
        {
          if (p.hasVisual) 
          {
            tiny_mce_js_exec_counter[5713]++;
            p.dom.addClass(t, q.visual_table_class);
          } else {
            tiny_mce_js_exec_counter[5714]++;
            p.dom.removeClass(t, q.visual_table_class);
          }
        }
        tiny_mce_js_exec_counter[5715]++;
        return;
      }
    case "A":
      {
        tiny_mce_js_exec_counter[5716]++;
        s = p.dom.getAttrib(t, "name");
        if (s) 
        {
          if (p.hasVisual) 
          {
            tiny_mce_js_exec_counter[5717]++;
            p.dom.addClass(t, "mceItemAnchor");
          } else {
            tiny_mce_js_exec_counter[5718]++;
            p.dom.removeClass(t, "mceItemAnchor");
          }
        }
        tiny_mce_js_exec_counter[5719]++;
        return;
      }
  }
  tiny_mce_js_exec_counter[5709]++;
});
  tiny_mce_js_exec_counter[5720]++;
  p.onVisualAid.dispatch(p, r, p.hasVisual);
  tiny_mce_js_exec_counter[5702]++;
}, remove: function() {
  tiny_mce_js_exec_counter[5721]++;
  tiny_mce_js_exec_counter[5723]++;
  var p = this, q = p.getContainer();
  tiny_mce_js_exec_counter[5725]++;
  p.removed = 1;
  tiny_mce_js_exec_counter[5726]++;
  p.hide();
  tiny_mce_js_exec_counter[5727]++;
  p.execCallback("remove_instance_callback", p);
  tiny_mce_js_exec_counter[5728]++;
  p.onRemove.dispatch(p);
  tiny_mce_js_exec_counter[5729]++;
  p.onExecCommand.listeners = [];
  tiny_mce_js_exec_counter[5730]++;
  m.remove(p);
  tiny_mce_js_exec_counter[5731]++;
  n.remove(q);
  tiny_mce_js_exec_counter[5722]++;
}, destroy: function(q) {
  tiny_mce_js_exec_counter[5732]++;
  tiny_mce_js_exec_counter[5734]++;
  var p = this;
  if (p.destroyed) 
  {
    tiny_mce_js_exec_counter[5736]++;
    return;
  }
  if (!q) 
  {
    tiny_mce_js_exec_counter[5737]++;
    m.removeUnload(p.destroy);
    tiny_mce_js_exec_counter[5738]++;
    tinyMCE.onBeforeUnload.remove(p._beforeUnload);
    if (p.theme && p.theme.destroy) 
    {
      tiny_mce_js_exec_counter[5739]++;
      p.theme.destroy();
    }
    tiny_mce_js_exec_counter[5740]++;
    p.controlManager.destroy();
    tiny_mce_js_exec_counter[5741]++;
    p.selection.destroy();
    tiny_mce_js_exec_counter[5742]++;
    p.dom.destroy();
    if (!p.settings.content_editable) 
    {
      tiny_mce_js_exec_counter[5743]++;
      j.clear(p.getWin());
      tiny_mce_js_exec_counter[5744]++;
      j.clear(p.getDoc());
    }
    tiny_mce_js_exec_counter[5745]++;
    j.clear(p.getBody());
    tiny_mce_js_exec_counter[5746]++;
    j.clear(p.formElement);
  }
  if (p.formElement) 
  {
    tiny_mce_js_exec_counter[5747]++;
    p.formElement.submit = p.formElement._mceOldSubmit;
    tiny_mce_js_exec_counter[5748]++;
    p.formElement._mceOldSubmit = null;
  }
  tiny_mce_js_exec_counter[5749]++;
  p.contentAreaContainer = p.formElement = p.container = p.settings.content_element = p.bodyElement = p.contentDocument = p.contentWindow = null;
  if (p.selection) 
  {
    tiny_mce_js_exec_counter[5750]++;
    p.selection = p.selection.win = p.selection.dom = p.selection.dom.doc = null;
  }
  tiny_mce_js_exec_counter[5751]++;
  p.destroyed = 1;
  tiny_mce_js_exec_counter[5733]++;
}, _addEvents: function() {
  tiny_mce_js_exec_counter[5752]++;
  tiny_mce_js_exec_counter[5754]++;
  var B = this, r, C = B.settings, q = B.dom, x = {mouseup: "onMouseUp", mousedown: "onMouseDown", click: "onClick", keyup: "onKeyUp", keydown: "onKeyDown", keypress: "onKeyPress", submit: "onSubmit", reset: "onReset", contextmenu: "onContextMenu", dblclick: "onDblClick", paste: "onPaste"};
  function p(t, D) {
    tiny_mce_js_exec_counter[5756]++;
    tiny_mce_js_exec_counter[5758]++;
    var s = t.type;
    if (B.removed) 
    {
      tiny_mce_js_exec_counter[5760]++;
      return;
    }
    if (B.onEvent.dispatch(B, t, D) !== false) 
    {
      tiny_mce_js_exec_counter[5761]++;
      B[x[t.fakeType || t.type]].dispatch(B, t, D);
    }
    tiny_mce_js_exec_counter[5757]++;
  }
  tiny_mce_js_exec_counter[5762]++;
  i(x, function(t, s) {
  tiny_mce_js_exec_counter[5763]++;
  switch (s) {
    case "contextmenu":
      {
        tiny_mce_js_exec_counter[5765]++;
        q.bind(B.getDoc(), s, p);
        tiny_mce_js_exec_counter[5766]++;
        break;
      }
    case "paste":
      {
        tiny_mce_js_exec_counter[5767]++;
        q.bind(B.getBody(), s, function(D) {
  tiny_mce_js_exec_counter[5768]++;
  tiny_mce_js_exec_counter[5770]++;
  p(D);
  tiny_mce_js_exec_counter[5769]++;
});
        tiny_mce_js_exec_counter[5771]++;
        break;
      }
    case "submit":
    case "reset":
      {
        tiny_mce_js_exec_counter[5772]++;
        q.bind(B.getElement().form || n.getParent(B.id, "form"), s, p);
        tiny_mce_js_exec_counter[5773]++;
        break;
      }
    default:
      {
        tiny_mce_js_exec_counter[5774]++;
        q.bind(C.content_editable ? B.getBody() : B.getDoc(), s, p);
      }
  }
  tiny_mce_js_exec_counter[5764]++;
});
  tiny_mce_js_exec_counter[5775]++;
  q.bind(C.content_editable ? B.getBody() : (a ? B.getDoc() : B.getWin()), "focus", function(s) {
  tiny_mce_js_exec_counter[5776]++;
  tiny_mce_js_exec_counter[5778]++;
  B.focus(true);
  tiny_mce_js_exec_counter[5777]++;
});
  if (m.isGecko) 
  {
    tiny_mce_js_exec_counter[5779]++;
    q.bind(B.getDoc(), "DOMNodeInserted", function(t) {
  tiny_mce_js_exec_counter[5780]++;
  tiny_mce_js_exec_counter[5782]++;
  var s;
  tiny_mce_js_exec_counter[5784]++;
  t = t.target;
  if (t.nodeType === 1 && t.nodeName === "IMG" && (s = t.getAttribute("data-mce-src"))) 
  {
    tiny_mce_js_exec_counter[5785]++;
    t.src = B.documentBaseURI.toAbsolute(s);
  }
  tiny_mce_js_exec_counter[5781]++;
});
  }
  if (a) 
  {
    function u() {
      tiny_mce_js_exec_counter[5786]++;
      tiny_mce_js_exec_counter[5788]++;
      var E = this, G = E.getDoc(), F = E.settings;
      if (a && !F.readonly) 
      {
        if (E._isHidden()) 
        {
          try {
            if (!F.content_editable) 
            {
              tiny_mce_js_exec_counter[5790]++;
              G.designMode = "On";
            }
          }          catch (D) {
}
        }
        try {
          tiny_mce_js_exec_counter[5791]++;
          G.execCommand("styleWithCSS", 0, false);
        }        catch (D) {
  if (!E._isHidden()) 
  {
    try {
      tiny_mce_js_exec_counter[5792]++;
      G.execCommand("useCSS", 0, true);
    }    catch (D) {
}
  }
}
        if (!F.table_inline_editing) 
        {
          try {
            tiny_mce_js_exec_counter[5793]++;
            G.execCommand("enableInlineTableEditing", false, false);
          }          catch (D) {
}
        }
        if (!F.object_resizing) 
        {
          try {
            tiny_mce_js_exec_counter[5794]++;
            G.execCommand("enableObjectResizing", false, false);
          }          catch (D) {
}
        }
      }
      tiny_mce_js_exec_counter[5787]++;
    }    tiny_mce_js_exec_counter[5795]++;
    B.onBeforeExecCommand.add(u);
    tiny_mce_js_exec_counter[5796]++;
    B.onMouseDown.add(u);
  }
  if (m.isWebKit) 
  {
    tiny_mce_js_exec_counter[5797]++;
    B.onClick.add(function(s, t) {
  tiny_mce_js_exec_counter[5798]++;
  tiny_mce_js_exec_counter[5800]++;
  t = t.target;
  if (t.nodeName == "IMG" || (t.nodeName == "A" && q.hasClass(t, "mceItemAnchor"))) 
  {
    tiny_mce_js_exec_counter[5801]++;
    B.selection.getSel().setBaseAndExtent(t, 0, t, 1);
    tiny_mce_js_exec_counter[5802]++;
    B.nodeChanged();
  }
  tiny_mce_js_exec_counter[5799]++;
});
  }
  tiny_mce_js_exec_counter[5803]++;
  B.onMouseUp.add(B.nodeChanged);
  tiny_mce_js_exec_counter[5804]++;
  B.onKeyUp.add(function(s, t) {
  tiny_mce_js_exec_counter[5805]++;
  tiny_mce_js_exec_counter[5807]++;
  var D = t.keyCode;
  if ((D >= 33 && D <= 36) || (D >= 37 && D <= 40) || D == 13 || D == 45 || D == 46 || D == 8 || (m.isMac && (D == 91 || D == 93)) || t.ctrlKey) 
  {
    tiny_mce_js_exec_counter[5809]++;
    B.nodeChanged();
  }
  tiny_mce_js_exec_counter[5806]++;
});
  tiny_mce_js_exec_counter[5810]++;
  B.onReset.add(function() {
  tiny_mce_js_exec_counter[5811]++;
  tiny_mce_js_exec_counter[5813]++;
  B.setContent(B.startContent, {format: "raw"});
  tiny_mce_js_exec_counter[5812]++;
});
  if (C.custom_shortcuts) 
  {
    if (C.custom_undo_redo_keyboard_shortcuts) 
    {
      tiny_mce_js_exec_counter[5814]++;
      B.addShortcut("ctrl+z", B.getLang("undo_desc"), "Undo");
      tiny_mce_js_exec_counter[5815]++;
      B.addShortcut("ctrl+y", B.getLang("redo_desc"), "Redo");
    }
    tiny_mce_js_exec_counter[5816]++;
    B.addShortcut("ctrl+b", B.getLang("bold_desc"), "Bold");
    tiny_mce_js_exec_counter[5817]++;
    B.addShortcut("ctrl+i", B.getLang("italic_desc"), "Italic");
    tiny_mce_js_exec_counter[5818]++;
    B.addShortcut("ctrl+u", B.getLang("underline_desc"), "Underline");
    for (r = 1; r <= 6; r++) 
      {
        tiny_mce_js_exec_counter[5819]++;
        B.addShortcut("ctrl+" + r, "", ["FormatBlock", false, "h" + r]);
      }
    tiny_mce_js_exec_counter[5820]++;
    B.addShortcut("ctrl+7", "", ["FormatBlock", false, "<p>"]);
    tiny_mce_js_exec_counter[5821]++;
    B.addShortcut("ctrl+8", "", ["FormatBlock", false, "<div>"]);
    tiny_mce_js_exec_counter[5822]++;
    B.addShortcut("ctrl+9", "", ["FormatBlock", false, "<address>"]);
    function v(t) {
      tiny_mce_js_exec_counter[5823]++;
      tiny_mce_js_exec_counter[5824]++;
      var s = null;
      if (!t.altKey && !t.ctrlKey && !t.metaKey) 
      {
        tiny_mce_js_exec_counter[5826]++;
        return s;
      }
      tiny_mce_js_exec_counter[5827]++;
      i(B.shortcuts, function(D) {
  tiny_mce_js_exec_counter[5828]++;
  if (m.isMac && D.ctrl != t.metaKey) 
  {
    tiny_mce_js_exec_counter[5830]++;
    return;
  } else {
    if (!m.isMac && D.ctrl != t.ctrlKey) 
    {
      tiny_mce_js_exec_counter[5831]++;
      return;
    }
  }
  if (D.alt != t.altKey) 
  {
    tiny_mce_js_exec_counter[5832]++;
    return;
  }
  if (D.shift != t.shiftKey) 
  {
    tiny_mce_js_exec_counter[5833]++;
    return;
  }
  if (t.keyCode == D.keyCode || (t.charCode && t.charCode == D.charCode)) 
  {
    tiny_mce_js_exec_counter[5834]++;
    s = D;
    tiny_mce_js_exec_counter[5835]++;
    return false;
  }
  tiny_mce_js_exec_counter[5829]++;
});
      tiny_mce_js_exec_counter[5836]++;
      return s;
    }    tiny_mce_js_exec_counter[5837]++;
    B.onKeyUp.add(function(s, t) {
  tiny_mce_js_exec_counter[5838]++;
  tiny_mce_js_exec_counter[5840]++;
  var D = v(t);
  if (D) 
  {
    tiny_mce_js_exec_counter[5842]++;
    return j.cancel(t);
  }
  tiny_mce_js_exec_counter[5839]++;
});
    tiny_mce_js_exec_counter[5843]++;
    B.onKeyPress.add(function(s, t) {
  tiny_mce_js_exec_counter[5844]++;
  tiny_mce_js_exec_counter[5846]++;
  var D = v(t);
  if (D) 
  {
    tiny_mce_js_exec_counter[5848]++;
    return j.cancel(t);
  }
  tiny_mce_js_exec_counter[5845]++;
});
    tiny_mce_js_exec_counter[5849]++;
    B.onKeyDown.add(function(s, t) {
  tiny_mce_js_exec_counter[5850]++;
  tiny_mce_js_exec_counter[5852]++;
  var D = v(t);
  if (D) 
  {
    tiny_mce_js_exec_counter[5854]++;
    D.func.call(D.scope);
    tiny_mce_js_exec_counter[5855]++;
    return j.cancel(t);
  }
  tiny_mce_js_exec_counter[5851]++;
});
  }
  if (m.isIE) 
  {
    tiny_mce_js_exec_counter[5856]++;
    q.bind(B.getDoc(), "controlselect", function(D) {
  tiny_mce_js_exec_counter[5857]++;
  tiny_mce_js_exec_counter[5859]++;
  var t = B.resizeInfo, s;
  tiny_mce_js_exec_counter[5861]++;
  D = D.target;
  if (D.nodeName !== "IMG") 
  {
    tiny_mce_js_exec_counter[5862]++;
    return;
  }
  if (t) 
  {
    tiny_mce_js_exec_counter[5863]++;
    q.unbind(t.node, t.ev, t.cb);
  }
  if (!q.hasClass(D, "mceItemNoResize")) 
  {
    tiny_mce_js_exec_counter[5864]++;
    ev = "resizeend";
    tiny_mce_js_exec_counter[5865]++;
    s = q.bind(D, ev, function(F) {
  tiny_mce_js_exec_counter[5866]++;
  tiny_mce_js_exec_counter[5868]++;
  var E;
  tiny_mce_js_exec_counter[5870]++;
  F = F.target;
  if (E = q.getStyle(F, "width")) 
  {
    tiny_mce_js_exec_counter[5871]++;
    q.setAttrib(F, "width", E.replace(/[^0-9%]+/g, ""));
    tiny_mce_js_exec_counter[5872]++;
    q.setStyle(F, "width", "");
  }
  if (E = q.getStyle(F, "height")) 
  {
    tiny_mce_js_exec_counter[5873]++;
    q.setAttrib(F, "height", E.replace(/[^0-9%]+/g, ""));
    tiny_mce_js_exec_counter[5874]++;
    q.setStyle(F, "height", "");
  }
  tiny_mce_js_exec_counter[5867]++;
});
  } else {
    tiny_mce_js_exec_counter[5875]++;
    ev = "resizestart";
    tiny_mce_js_exec_counter[5876]++;
    s = q.bind(D, "resizestart", j.cancel, j);
  }
  tiny_mce_js_exec_counter[5877]++;
  t = B.resizeInfo = {node: D, ev: ev, cb: s};
  tiny_mce_js_exec_counter[5858]++;
});
    tiny_mce_js_exec_counter[5878]++;
    B.onKeyDown.add(function(s, D) {
  tiny_mce_js_exec_counter[5879]++;
  tiny_mce_js_exec_counter[5881]++;
  var t;
  switch (D.keyCode) {
    case 8:
      {
        tiny_mce_js_exec_counter[5883]++;
        t = B.getDoc().selection;
        if (t.createRange && t.createRange().item) 
        {
          tiny_mce_js_exec_counter[5884]++;
          s.dom.remove(t.createRange().item(0));
          tiny_mce_js_exec_counter[5885]++;
          return j.cancel(D);
        }
      }
  }
  tiny_mce_js_exec_counter[5880]++;
});
  }
  if (m.isOpera) 
  {
    tiny_mce_js_exec_counter[5886]++;
    B.onClick.add(function(s, t) {
  tiny_mce_js_exec_counter[5887]++;
  tiny_mce_js_exec_counter[5889]++;
  j.prevent(t);
  tiny_mce_js_exec_counter[5888]++;
});
  }
  if (C.custom_undo_redo) 
  {
    function y() {
      tiny_mce_js_exec_counter[5890]++;
      tiny_mce_js_exec_counter[5892]++;
      B.undoManager.typing = false;
      tiny_mce_js_exec_counter[5893]++;
      B.undoManager.add();
      tiny_mce_js_exec_counter[5891]++;
    }    tiny_mce_js_exec_counter[5894]++;
    q.bind(B.getDoc(), "focusout", function(s) {
  tiny_mce_js_exec_counter[5895]++;
  if (!B.removed && B.undoManager.typing) 
  {
    tiny_mce_js_exec_counter[5897]++;
    y();
  }
  tiny_mce_js_exec_counter[5896]++;
});
    tiny_mce_js_exec_counter[5898]++;
    B.onKeyUp.add(function(t, F) {
  tiny_mce_js_exec_counter[5899]++;
  tiny_mce_js_exec_counter[5901]++;
  var s, E, D;
  if (b && F.keyCode == 8) 
  {
    tiny_mce_js_exec_counter[5903]++;
    s = B.selection.getRng();
    if (s.parentElement) 
    {
      tiny_mce_js_exec_counter[5904]++;
      E = s.parentElement();
      tiny_mce_js_exec_counter[5905]++;
      D = B.selection.getBookmark();
      tiny_mce_js_exec_counter[5906]++;
      E.innerHTML = E.innerHTML;
      tiny_mce_js_exec_counter[5907]++;
      B.selection.moveToBookmark(D);
    }
  }
  if ((F.keyCode >= 33 && F.keyCode <= 36) || (F.keyCode >= 37 && F.keyCode <= 40) || F.keyCode == 13 || F.keyCode == 45 || F.ctrlKey) 
  {
    tiny_mce_js_exec_counter[5908]++;
    y();
  }
  tiny_mce_js_exec_counter[5900]++;
});
    tiny_mce_js_exec_counter[5909]++;
    B.onKeyDown.add(function(t, G) {
  tiny_mce_js_exec_counter[5910]++;
  tiny_mce_js_exec_counter[5912]++;
  var s, F, E;
  if (b && G.keyCode == 46) 
  {
    tiny_mce_js_exec_counter[5914]++;
    s = B.selection.getRng();
    if (s.parentElement) 
    {
      tiny_mce_js_exec_counter[5915]++;
      F = s.parentElement();
      if (G.ctrlKey) 
      {
        tiny_mce_js_exec_counter[5916]++;
        s.moveEnd("word", 1);
        tiny_mce_js_exec_counter[5917]++;
        s.select();
      }
      tiny_mce_js_exec_counter[5918]++;
      B.selection.getSel().clear();
      if (s.parentElement() == F) 
      {
        tiny_mce_js_exec_counter[5919]++;
        E = B.selection.getBookmark();
        try {
          tiny_mce_js_exec_counter[5920]++;
          F.innerHTML = F.innerHTML;
        }        catch (D) {
}
        tiny_mce_js_exec_counter[5921]++;
        B.selection.moveToBookmark(E);
      }
      tiny_mce_js_exec_counter[5922]++;
      G.preventDefault();
      tiny_mce_js_exec_counter[5923]++;
      return;
    }
  }
  if ((G.keyCode >= 33 && G.keyCode <= 36) || (G.keyCode >= 37 && G.keyCode <= 40) || G.keyCode == 13 || G.keyCode == 45) 
  {
    if (B.undoManager.typing) 
    {
      tiny_mce_js_exec_counter[5924]++;
      y();
    }
    tiny_mce_js_exec_counter[5925]++;
    return;
  }
  if (!B.undoManager.typing) 
  {
    tiny_mce_js_exec_counter[5926]++;
    B.undoManager.add();
    tiny_mce_js_exec_counter[5927]++;
    B.undoManager.typing = true;
  }
  tiny_mce_js_exec_counter[5911]++;
});
    tiny_mce_js_exec_counter[5928]++;
    B.onMouseDown.add(function() {
  tiny_mce_js_exec_counter[5929]++;
  if (B.undoManager.typing) 
  {
    tiny_mce_js_exec_counter[5931]++;
    y();
  }
  tiny_mce_js_exec_counter[5930]++;
});
  }
  if (m.isGecko) 
  {
    function A() {
      tiny_mce_js_exec_counter[5932]++;
      tiny_mce_js_exec_counter[5933]++;
      B.undoManager.typing = false;
      tiny_mce_js_exec_counter[5934]++;
      B.undoManager.add();
      tiny_mce_js_exec_counter[5935]++;
      var s = B.dom.getAttribs(B.selection.getStart().cloneNode(false));
      tiny_mce_js_exec_counter[5937]++;
      return function() {
  tiny_mce_js_exec_counter[5938]++;
  tiny_mce_js_exec_counter[5940]++;
  var t = B.selection.getStart();
  tiny_mce_js_exec_counter[5942]++;
  B.dom.removeAllAttribs(t);
  tiny_mce_js_exec_counter[5943]++;
  i(s, function(D) {
  tiny_mce_js_exec_counter[5944]++;
  tiny_mce_js_exec_counter[5946]++;
  t.setAttributeNode(D.cloneNode(true));
  tiny_mce_js_exec_counter[5945]++;
});
  tiny_mce_js_exec_counter[5947]++;
  B.undoManager.typing = false;
  tiny_mce_js_exec_counter[5948]++;
  B.undoManager.add();
  tiny_mce_js_exec_counter[5939]++;
};
    }    function z() {
      tiny_mce_js_exec_counter[5949]++;
      tiny_mce_js_exec_counter[5950]++;
      var t = B.selection;
      tiny_mce_js_exec_counter[5952]++;
      return !t.isCollapsed() && t.getStart() != t.getEnd();
    }    tiny_mce_js_exec_counter[5953]++;
    B.onKeyPress.add(function(s, D) {
  tiny_mce_js_exec_counter[5954]++;
  if ((D.keyCode == 8 || D.keyCode == 46) && z()) 
  {
    tiny_mce_js_exec_counter[5956]++;
    var t = A();
    tiny_mce_js_exec_counter[5958]++;
    B.getDoc().execCommand("delete", false, null);
    tiny_mce_js_exec_counter[5959]++;
    t();
    tiny_mce_js_exec_counter[5960]++;
    return j.cancel(D);
  }
  tiny_mce_js_exec_counter[5955]++;
});
    tiny_mce_js_exec_counter[5961]++;
    B.dom.bind(B.getDoc(), "cut", function(t) {
  tiny_mce_js_exec_counter[5962]++;
  if (z()) 
  {
    tiny_mce_js_exec_counter[5964]++;
    var s = A();
    tiny_mce_js_exec_counter[5966]++;
    B.onKeyUp.addToTop(j.cancel, j);
    tiny_mce_js_exec_counter[5967]++;
    setTimeout(function() {
  tiny_mce_js_exec_counter[5968]++;
  tiny_mce_js_exec_counter[5970]++;
  s();
  tiny_mce_js_exec_counter[5971]++;
  B.onKeyUp.remove(j.cancel, j);
  tiny_mce_js_exec_counter[5969]++;
}, 0);
  }
  tiny_mce_js_exec_counter[5963]++;
});
  }
  tiny_mce_js_exec_counter[5753]++;
}, _isHidden: function() {
  tiny_mce_js_exec_counter[5972]++;
  tiny_mce_js_exec_counter[5973]++;
  var p;
  if (!a) 
  {
    tiny_mce_js_exec_counter[5975]++;
    return 0;
  }
  tiny_mce_js_exec_counter[5976]++;
  p = this.selection.getSel();
  tiny_mce_js_exec_counter[5977]++;
  return (!p || !p.rangeCount || p.rangeCount == 0);
}});
  tiny_mce_js_exec_counter[5073]++;
})(tinymce);
tiny_mce_js_exec_counter[5978]++;
(function(c) {
  tiny_mce_js_exec_counter[5979]++;
  tiny_mce_js_exec_counter[5981]++;
  var d = c.each, e, a = true, b = false;
  tiny_mce_js_exec_counter[5983]++;
  c.EditorCommands = function(n) {
  tiny_mce_js_exec_counter[5984]++;
  tiny_mce_js_exec_counter[5986]++;
  var l = n.dom, p = n.selection, j = {state: {}, exec: {}, value: {}}, k = n.settings, o;
  function q(y, x, v) {
    tiny_mce_js_exec_counter[5988]++;
    tiny_mce_js_exec_counter[5989]++;
    var u;
    tiny_mce_js_exec_counter[5991]++;
    y = y.toLowerCase();
    if (u = j.exec[y]) 
    {
      tiny_mce_js_exec_counter[5992]++;
      u(y, x, v);
      tiny_mce_js_exec_counter[5993]++;
      return a;
    }
    tiny_mce_js_exec_counter[5994]++;
    return b;
  }
  function m(v) {
    tiny_mce_js_exec_counter[5995]++;
    tiny_mce_js_exec_counter[5996]++;
    var u;
    tiny_mce_js_exec_counter[5998]++;
    v = v.toLowerCase();
    if (u = j.state[v]) 
    {
      tiny_mce_js_exec_counter[5999]++;
      return u(v);
    }
    tiny_mce_js_exec_counter[6000]++;
    return -1;
  }
  function h(v) {
    tiny_mce_js_exec_counter[6001]++;
    tiny_mce_js_exec_counter[6002]++;
    var u;
    tiny_mce_js_exec_counter[6004]++;
    v = v.toLowerCase();
    if (u = j.value[v]) 
    {
      tiny_mce_js_exec_counter[6005]++;
      return u(v);
    }
    tiny_mce_js_exec_counter[6006]++;
    return b;
  }
  function t(u, v) {
    tiny_mce_js_exec_counter[6007]++;
    tiny_mce_js_exec_counter[6009]++;
    v = v || "exec";
    tiny_mce_js_exec_counter[6010]++;
    d(u, function(y, x) {
  tiny_mce_js_exec_counter[6011]++;
  tiny_mce_js_exec_counter[6013]++;
  d(x.toLowerCase().split(","), function(z) {
  tiny_mce_js_exec_counter[6014]++;
  tiny_mce_js_exec_counter[6016]++;
  j[v][z] = y;
  tiny_mce_js_exec_counter[6015]++;
});
  tiny_mce_js_exec_counter[6012]++;
});
    tiny_mce_js_exec_counter[6008]++;
  }
  tiny_mce_js_exec_counter[6017]++;
  c.extend(this, {execCommand: q, queryCommandState: m, queryCommandValue: h, addCommands: t});
  function f(x, v, u) {
    tiny_mce_js_exec_counter[6018]++;
    if (v === e) 
    {
      tiny_mce_js_exec_counter[6019]++;
      v = b;
    }
    if (u === e) 
    {
      tiny_mce_js_exec_counter[6020]++;
      u = null;
    }
    tiny_mce_js_exec_counter[6021]++;
    return n.getDoc().execCommand(x, v, u);
  }
  function s(u) {
    tiny_mce_js_exec_counter[6022]++;
    tiny_mce_js_exec_counter[6023]++;
    return n.formatter.match(u);
  }
  function r(u, v) {
    tiny_mce_js_exec_counter[6024]++;
    tiny_mce_js_exec_counter[6026]++;
    n.formatter.toggle(u, v ? {value: v} : e);
    tiny_mce_js_exec_counter[6025]++;
  }
  function i(u) {
    tiny_mce_js_exec_counter[6027]++;
    tiny_mce_js_exec_counter[6029]++;
    o = p.getBookmark(u);
    tiny_mce_js_exec_counter[6028]++;
  }
  function g() {
    tiny_mce_js_exec_counter[6030]++;
    tiny_mce_js_exec_counter[6032]++;
    p.moveToBookmark(o);
    tiny_mce_js_exec_counter[6031]++;
  }
  tiny_mce_js_exec_counter[6033]++;
  t({"mceResetDesignMode,mceBeginUndoLevel": function() {
  tiny_mce_js_exec_counter[6034]++;
  tiny_mce_js_exec_counter[6035]++;
}, "mceEndUndoLevel,mceAddUndoLevel": function() {
  tiny_mce_js_exec_counter[6036]++;
  tiny_mce_js_exec_counter[6038]++;
  n.undoManager.add();
  tiny_mce_js_exec_counter[6037]++;
}, "Cut,Copy,Paste": function(y) {
  tiny_mce_js_exec_counter[6039]++;
  tiny_mce_js_exec_counter[6041]++;
  var x = n.getDoc(), u;
  try {
    tiny_mce_js_exec_counter[6043]++;
    f(y);
  }  catch (v) {
  tiny_mce_js_exec_counter[6044]++;
  u = a;
}
  if (u || !x.queryCommandSupported(y)) 
  {
    if (c.isGecko) 
    {
      tiny_mce_js_exec_counter[6045]++;
      n.windowManager.confirm(n.getLang("clipboard_msg"), function(z) {
  tiny_mce_js_exec_counter[6046]++;
  if (z) 
  {
    tiny_mce_js_exec_counter[6048]++;
    open("http://www.mozilla.org/editor/midasdemo/securityprefs.html", "_blank");
  }
  tiny_mce_js_exec_counter[6047]++;
});
    } else {
      tiny_mce_js_exec_counter[6049]++;
      n.windowManager.alert(n.getLang("clipboard_no_support"));
    }
  }
  tiny_mce_js_exec_counter[6040]++;
}, unlink: function(u) {
  tiny_mce_js_exec_counter[6050]++;
  if (p.isCollapsed()) 
  {
    tiny_mce_js_exec_counter[6052]++;
    p.select(p.getNode());
  }
  tiny_mce_js_exec_counter[6053]++;
  f(u);
  tiny_mce_js_exec_counter[6054]++;
  p.collapse(b);
  tiny_mce_js_exec_counter[6051]++;
}, "JustifyLeft,JustifyCenter,JustifyRight,JustifyFull": function(u) {
  tiny_mce_js_exec_counter[6055]++;
  tiny_mce_js_exec_counter[6057]++;
  var v = u.substring(7);
  tiny_mce_js_exec_counter[6059]++;
  d("left,center,right,full".split(","), function(x) {
  tiny_mce_js_exec_counter[6060]++;
  if (v != x) 
  {
    tiny_mce_js_exec_counter[6062]++;
    n.formatter.remove("align" + x);
  }
  tiny_mce_js_exec_counter[6061]++;
});
  tiny_mce_js_exec_counter[6063]++;
  r("align" + v);
  tiny_mce_js_exec_counter[6064]++;
  q("mceRepaint");
  tiny_mce_js_exec_counter[6056]++;
}, "InsertUnorderedList,InsertOrderedList": function(x) {
  tiny_mce_js_exec_counter[6065]++;
  tiny_mce_js_exec_counter[6067]++;
  var u, v;
  tiny_mce_js_exec_counter[6069]++;
  f(x);
  tiny_mce_js_exec_counter[6070]++;
  u = l.getParent(p.getNode(), "ol,ul");
  if (u) 
  {
    tiny_mce_js_exec_counter[6071]++;
    v = u.parentNode;
    if (/^(H[1-6]|P|ADDRESS|PRE)$/.test(v.nodeName)) 
    {
      tiny_mce_js_exec_counter[6072]++;
      i();
      tiny_mce_js_exec_counter[6073]++;
      l.split(v, u);
      tiny_mce_js_exec_counter[6074]++;
      g();
    }
  }
  tiny_mce_js_exec_counter[6066]++;
}, "Bold,Italic,Underline,Strikethrough": function(u) {
  tiny_mce_js_exec_counter[6075]++;
  tiny_mce_js_exec_counter[6077]++;
  r(u);
  tiny_mce_js_exec_counter[6076]++;
}, "ForeColor,HiliteColor,FontName": function(x, v, u) {
  tiny_mce_js_exec_counter[6078]++;
  tiny_mce_js_exec_counter[6080]++;
  r(x, u);
  tiny_mce_js_exec_counter[6079]++;
}, FontSize: function(y, x, v) {
  tiny_mce_js_exec_counter[6081]++;
  tiny_mce_js_exec_counter[6083]++;
  var u, z;
  if (v >= 1 && v <= 7) 
  {
    tiny_mce_js_exec_counter[6085]++;
    z = c.explode(k.font_size_style_values);
    tiny_mce_js_exec_counter[6086]++;
    u = c.explode(k.font_size_classes);
    if (u) 
    {
      tiny_mce_js_exec_counter[6087]++;
      v = u[v - 1] || v;
    } else {
      tiny_mce_js_exec_counter[6088]++;
      v = z[v - 1] || v;
    }
  }
  tiny_mce_js_exec_counter[6089]++;
  r(y, v);
  tiny_mce_js_exec_counter[6082]++;
}, RemoveFormat: function(u) {
  tiny_mce_js_exec_counter[6090]++;
  tiny_mce_js_exec_counter[6092]++;
  n.formatter.remove(u);
  tiny_mce_js_exec_counter[6091]++;
}, mceBlockQuote: function(u) {
  tiny_mce_js_exec_counter[6093]++;
  tiny_mce_js_exec_counter[6095]++;
  r("blockquote");
  tiny_mce_js_exec_counter[6094]++;
}, FormatBlock: function(x, v, u) {
  tiny_mce_js_exec_counter[6096]++;
  tiny_mce_js_exec_counter[6097]++;
  return r(u || "p");
}, mceCleanup: function() {
  tiny_mce_js_exec_counter[6098]++;
  tiny_mce_js_exec_counter[6100]++;
  var u = p.getBookmark();
  tiny_mce_js_exec_counter[6102]++;
  n.setContent(n.getContent({cleanup: a}), {cleanup: a});
  tiny_mce_js_exec_counter[6103]++;
  p.moveToBookmark(u);
  tiny_mce_js_exec_counter[6099]++;
}, mceRemoveNode: function(y, x, v) {
  tiny_mce_js_exec_counter[6104]++;
  tiny_mce_js_exec_counter[6106]++;
  var u = v || p.getNode();
  if (u != n.getBody()) 
  {
    tiny_mce_js_exec_counter[6108]++;
    i();
    tiny_mce_js_exec_counter[6109]++;
    n.dom.remove(u, a);
    tiny_mce_js_exec_counter[6110]++;
    g();
  }
  tiny_mce_js_exec_counter[6105]++;
}, mceSelectNodeDepth: function(y, x, v) {
  tiny_mce_js_exec_counter[6111]++;
  tiny_mce_js_exec_counter[6113]++;
  var u = 0;
  tiny_mce_js_exec_counter[6115]++;
  l.getParent(p.getNode(), function(z) {
  tiny_mce_js_exec_counter[6116]++;
  if (z.nodeType == 1 && u++ == v) 
  {
    tiny_mce_js_exec_counter[6118]++;
    p.select(z);
    tiny_mce_js_exec_counter[6119]++;
    return b;
  }
  tiny_mce_js_exec_counter[6117]++;
}, n.getBody());
  tiny_mce_js_exec_counter[6112]++;
}, mceSelectNode: function(x, v, u) {
  tiny_mce_js_exec_counter[6120]++;
  tiny_mce_js_exec_counter[6122]++;
  p.select(u);
  tiny_mce_js_exec_counter[6121]++;
}, mceInsertContent: function(z, D, E) {
  tiny_mce_js_exec_counter[6123]++;
  tiny_mce_js_exec_counter[6125]++;
  var C, u, x, F, y, u, A, G, B;
  function v(H, J) {
    tiny_mce_js_exec_counter[6127]++;
    tiny_mce_js_exec_counter[6129]++;
    var I, K = new c.dom.TreeWalker(H, J);
    while ((I = K.current())) 
      {
        if ((I.nodeType == 3 && c.trim(I.nodeValue).length) || I.nodeName == "BR" || I.nodeName == "IMG") 
        {
          tiny_mce_js_exec_counter[6131]++;
          return I;
        }
        tiny_mce_js_exec_counter[6132]++;
        K.prev();
      }
    tiny_mce_js_exec_counter[6128]++;
  }
  tiny_mce_js_exec_counter[6133]++;
  B = {content: E, format: "html"};
  tiny_mce_js_exec_counter[6134]++;
  p.onBeforeSetContent.dispatch(p, B);
  tiny_mce_js_exec_counter[6135]++;
  E = B.content;
  if (E.indexOf("{$caret}") == -1) 
  {
    tiny_mce_js_exec_counter[6136]++;
    E += "{$caret}";
  }
  tiny_mce_js_exec_counter[6137]++;
  p.setContent('<span id="__mce">\ufeff</span>', {no_events: false});
  tiny_mce_js_exec_counter[6138]++;
  l.setOuterHTML("__mce", E.replace(/\{\$caret\}/, '<span data-mce-type="bookmark" id="__mce">\ufeff</span>'));
  tiny_mce_js_exec_counter[6139]++;
  C = l.select("#__mce")[0];
  tiny_mce_js_exec_counter[6140]++;
  x = l.getRoot();
  if (C.previousSibling && l.isBlock(C.previousSibling) || C.parentNode == x) 
  {
    tiny_mce_js_exec_counter[6141]++;
    y = v(C.previousSibling, x);
    if (y) 
    {
      if (y.nodeName == "BR") 
      {
        tiny_mce_js_exec_counter[6142]++;
        y.parentNode.insertBefore(C, y);
      } else {
        tiny_mce_js_exec_counter[6143]++;
        l.insertAfter(C, y);
      }
    }
  }
  while (C) 
    {
      if (C === x) 
      {
        tiny_mce_js_exec_counter[6144]++;
        l.setOuterHTML(F, new c.html.Serializer({}, n.schema).serialize(new c.html.DomParser({remove_trailing_brs: true}, n.schema).parse(l.getOuterHTML(F))));
        tiny_mce_js_exec_counter[6145]++;
        break;
      }
      tiny_mce_js_exec_counter[6146]++;
      F = C;
      tiny_mce_js_exec_counter[6147]++;
      C = C.parentNode;
    }
  tiny_mce_js_exec_counter[6148]++;
  C = l.select("#__mce")[0];
  if (C) 
  {
    tiny_mce_js_exec_counter[6149]++;
    y = v(C.previousSibling, x);
    tiny_mce_js_exec_counter[6150]++;
    l.remove(C);
    if (y) 
    {
      tiny_mce_js_exec_counter[6151]++;
      u = l.createRng();
      if (y.nodeType == 3) 
      {
        tiny_mce_js_exec_counter[6152]++;
        u.setStart(y, y.length);
        tiny_mce_js_exec_counter[6153]++;
        u.setEnd(y, y.length);
      } else {
        if (y.nodeName == "BR") 
        {
          tiny_mce_js_exec_counter[6154]++;
          u.setStartBefore(y);
          tiny_mce_js_exec_counter[6155]++;
          u.setEndBefore(y);
        } else {
          tiny_mce_js_exec_counter[6156]++;
          u.setStartAfter(y);
          tiny_mce_js_exec_counter[6157]++;
          u.setEndAfter(y);
        }
      }
      tiny_mce_js_exec_counter[6158]++;
      p.setRng(u);
      if (!c.isIE) 
      {
        tiny_mce_js_exec_counter[6159]++;
        y = l.create("span", null, "\xa0");
        tiny_mce_js_exec_counter[6160]++;
        u.insertNode(y);
        tiny_mce_js_exec_counter[6161]++;
        A = l.getRect(y);
        tiny_mce_js_exec_counter[6162]++;
        G = l.getViewPort(n.getWin());
        if ((A.y > G.y + G.h || A.y < G.y) || (A.x > G.x + G.w || A.x < G.x)) 
        {
          tiny_mce_js_exec_counter[6163]++;
          n.getBody().scrollLeft = A.x;
          tiny_mce_js_exec_counter[6164]++;
          n.getBody().scrollTop = A.y;
        }
        tiny_mce_js_exec_counter[6165]++;
        l.remove(y);
      }
    }
  }
  tiny_mce_js_exec_counter[6166]++;
  p.onSetContent.dispatch(p, B);
  tiny_mce_js_exec_counter[6167]++;
  n.addVisual();
  tiny_mce_js_exec_counter[6124]++;
}, mceInsertRawHTML: function(x, v, u) {
  tiny_mce_js_exec_counter[6168]++;
  tiny_mce_js_exec_counter[6170]++;
  p.setContent("tiny_mce_marker");
  tiny_mce_js_exec_counter[6171]++;
  n.setContent(n.getContent().replace(/tiny_mce_marker/g, function() {
  tiny_mce_js_exec_counter[6172]++;
  tiny_mce_js_exec_counter[6173]++;
  return u;
}));
  tiny_mce_js_exec_counter[6169]++;
}, mceSetContent: function(x, v, u) {
  tiny_mce_js_exec_counter[6174]++;
  tiny_mce_js_exec_counter[6176]++;
  n.setContent(u);
  tiny_mce_js_exec_counter[6175]++;
}, "Indent,Outdent": function(y) {
  tiny_mce_js_exec_counter[6177]++;
  tiny_mce_js_exec_counter[6179]++;
  var v, u, x;
  tiny_mce_js_exec_counter[6181]++;
  v = k.indentation;
  tiny_mce_js_exec_counter[6182]++;
  u = /[a-z%]+$/i.exec(v);
  tiny_mce_js_exec_counter[6183]++;
  v = parseInt(v);
  if (!m("InsertUnorderedList") && !m("InsertOrderedList")) 
  {
    tiny_mce_js_exec_counter[6184]++;
    d(p.getSelectedBlocks(), function(z) {
  tiny_mce_js_exec_counter[6185]++;
  if (y == "outdent") 
  {
    tiny_mce_js_exec_counter[6187]++;
    x = Math.max(0, parseInt(z.style.paddingLeft || 0) - v);
    tiny_mce_js_exec_counter[6188]++;
    l.setStyle(z, "paddingLeft", x ? x + u : "");
  } else {
    tiny_mce_js_exec_counter[6189]++;
    l.setStyle(z, "paddingLeft", (parseInt(z.style.paddingLeft || 0) + v) + u);
  }
  tiny_mce_js_exec_counter[6186]++;
});
  } else {
    tiny_mce_js_exec_counter[6190]++;
    f(y);
  }
  tiny_mce_js_exec_counter[6178]++;
}, mceRepaint: function() {
  tiny_mce_js_exec_counter[6191]++;
  tiny_mce_js_exec_counter[6193]++;
  var v;
  if (c.isGecko) 
  {
    try {
      tiny_mce_js_exec_counter[6195]++;
      i(a);
      if (p.getSel()) 
      {
        tiny_mce_js_exec_counter[6196]++;
        p.getSel().selectAllChildren(n.getBody());
      }
      tiny_mce_js_exec_counter[6197]++;
      p.collapse(a);
      tiny_mce_js_exec_counter[6198]++;
      g();
    }    catch (u) {
}
  }
  tiny_mce_js_exec_counter[6192]++;
}, mceToggleFormat: function(x, v, u) {
  tiny_mce_js_exec_counter[6199]++;
  tiny_mce_js_exec_counter[6201]++;
  n.formatter.toggle(u);
  tiny_mce_js_exec_counter[6200]++;
}, InsertHorizontalRule: function() {
  tiny_mce_js_exec_counter[6202]++;
  tiny_mce_js_exec_counter[6204]++;
  p.setContent("<hr />");
  tiny_mce_js_exec_counter[6203]++;
}, mceToggleVisualAid: function() {
  tiny_mce_js_exec_counter[6205]++;
  tiny_mce_js_exec_counter[6207]++;
  n.hasVisual = !n.hasVisual;
  tiny_mce_js_exec_counter[6208]++;
  n.addVisual();
  tiny_mce_js_exec_counter[6206]++;
}, mceReplaceContent: function(x, v, u) {
  tiny_mce_js_exec_counter[6209]++;
  tiny_mce_js_exec_counter[6211]++;
  n.execCommand("mceInsertContent", false, p.setContent(u.replace(/\{\$selection\}/g, p.getContent({format: "text"}))));
  tiny_mce_js_exec_counter[6210]++;
}, mceInsertLink: function(A, z, y) {
  tiny_mce_js_exec_counter[6212]++;
  tiny_mce_js_exec_counter[6214]++;
  var x = l.getParent(p.getNode(), "a"), v, u;
  if (c.is(y, "string")) 
  {
    tiny_mce_js_exec_counter[6216]++;
    y = {href: y};
  }
  tiny_mce_js_exec_counter[6217]++;
  y.href = y.href.replace(" ", "%20");
  if (!x) 
  {
    if (c.isWebKit) 
    {
      tiny_mce_js_exec_counter[6218]++;
      v = l.getParent(p.getNode(), "img");
      if (v) 
      {
        tiny_mce_js_exec_counter[6219]++;
        u = v.style.cssFloat;
        tiny_mce_js_exec_counter[6220]++;
        v.style.cssFloat = null;
      }
    }
    tiny_mce_js_exec_counter[6221]++;
    f("CreateLink", b, "javascript:mctmp(0);");
    if (u) 
    {
      tiny_mce_js_exec_counter[6222]++;
      v.style.cssFloat = u;
    }
    tiny_mce_js_exec_counter[6223]++;
    d(l.select("a[href='javascript:mctmp(0);']"), function(B) {
  tiny_mce_js_exec_counter[6224]++;
  tiny_mce_js_exec_counter[6226]++;
  l.setAttribs(B, y);
  tiny_mce_js_exec_counter[6225]++;
});
  } else {
    if (y.href) 
    {
      tiny_mce_js_exec_counter[6227]++;
      l.setAttribs(x, y);
    } else {
      tiny_mce_js_exec_counter[6228]++;
      n.dom.remove(x, a);
    }
  }
  tiny_mce_js_exec_counter[6213]++;
}, selectAll: function() {
  tiny_mce_js_exec_counter[6229]++;
  tiny_mce_js_exec_counter[6231]++;
  var v = l.getRoot(), u = l.createRng();
  tiny_mce_js_exec_counter[6233]++;
  u.setStart(v, 0);
  tiny_mce_js_exec_counter[6234]++;
  u.setEnd(v, v.childNodes.length);
  tiny_mce_js_exec_counter[6235]++;
  n.selection.setRng(u);
  tiny_mce_js_exec_counter[6230]++;
}});
  tiny_mce_js_exec_counter[6236]++;
  t({"JustifyLeft,JustifyCenter,JustifyRight,JustifyFull": function(u) {
  tiny_mce_js_exec_counter[6237]++;
  tiny_mce_js_exec_counter[6238]++;
  return s("align" + u.substring(7));
}, "Bold,Italic,Underline,Strikethrough": function(u) {
  tiny_mce_js_exec_counter[6239]++;
  tiny_mce_js_exec_counter[6240]++;
  return s(u);
}, mceBlockQuote: function() {
  tiny_mce_js_exec_counter[6241]++;
  tiny_mce_js_exec_counter[6242]++;
  return s("blockquote");
}, Outdent: function() {
  tiny_mce_js_exec_counter[6243]++;
  tiny_mce_js_exec_counter[6244]++;
  var u;
  if (k.inline_styles) 
  {
    if ((u = l.getParent(p.getStart(), l.isBlock)) && parseInt(u.style.paddingLeft) > 0) 
    {
      tiny_mce_js_exec_counter[6246]++;
      return a;
    }
    if ((u = l.getParent(p.getEnd(), l.isBlock)) && parseInt(u.style.paddingLeft) > 0) 
    {
      tiny_mce_js_exec_counter[6247]++;
      return a;
    }
  }
  tiny_mce_js_exec_counter[6248]++;
  return m("InsertUnorderedList") || m("InsertOrderedList") || (!k.inline_styles && !!l.getParent(p.getNode(), "BLOCKQUOTE"));
}, "InsertUnorderedList,InsertOrderedList": function(u) {
  tiny_mce_js_exec_counter[6249]++;
  tiny_mce_js_exec_counter[6250]++;
  return l.getParent(p.getNode(), u == "insertunorderedlist" ? "UL" : "OL");
}}, "state");
  tiny_mce_js_exec_counter[6251]++;
  t({"FontSize,FontName": function(x) {
  tiny_mce_js_exec_counter[6252]++;
  tiny_mce_js_exec_counter[6253]++;
  var v = 0, u;
  if (u = l.getParent(p.getNode(), "span")) 
  {
    if (x == "fontsize") 
    {
      tiny_mce_js_exec_counter[6255]++;
      v = u.style.fontSize;
    } else {
      tiny_mce_js_exec_counter[6256]++;
      v = u.style.fontFamily.replace(/, /g, ",").replace(/[\'\"]/g, "").toLowerCase();
    }
  }
  tiny_mce_js_exec_counter[6257]++;
  return v;
}}, "value");
  if (k.custom_undo_redo) 
  {
    tiny_mce_js_exec_counter[6258]++;
    t({Undo: function() {
  tiny_mce_js_exec_counter[6259]++;
  tiny_mce_js_exec_counter[6261]++;
  n.undoManager.undo();
  tiny_mce_js_exec_counter[6260]++;
}, Redo: function() {
  tiny_mce_js_exec_counter[6262]++;
  tiny_mce_js_exec_counter[6264]++;
  n.undoManager.redo();
  tiny_mce_js_exec_counter[6263]++;
}});
  }
  tiny_mce_js_exec_counter[5985]++;
};
  tiny_mce_js_exec_counter[5980]++;
})(tinymce);
tiny_mce_js_exec_counter[6265]++;
(function(b) {
  tiny_mce_js_exec_counter[6266]++;
  tiny_mce_js_exec_counter[6268]++;
  var a = b.util.Dispatcher;
  tiny_mce_js_exec_counter[6270]++;
  b.UndoManager = function(e) {
  tiny_mce_js_exec_counter[6271]++;
  tiny_mce_js_exec_counter[6272]++;
  var c, d = 0, g = [];
  function f() {
    tiny_mce_js_exec_counter[6274]++;
    tiny_mce_js_exec_counter[6275]++;
    return b.trim(e.getContent({format: "raw", no_events: 1}));
  }
  tiny_mce_js_exec_counter[6276]++;
  return c = {typing: false, onAdd: new a(c), onUndo: new a(c), onRedo: new a(c), add: function(l) {
  tiny_mce_js_exec_counter[6277]++;
  tiny_mce_js_exec_counter[6278]++;
  var h, j = e.settings, k;
  tiny_mce_js_exec_counter[6280]++;
  l = l || {};
  tiny_mce_js_exec_counter[6281]++;
  l.content = f();
  tiny_mce_js_exec_counter[6282]++;
  k = g[d];
  if (k && k.content == l.content) 
  {
    if (d > 0 || g.length == 1) 
    {
      tiny_mce_js_exec_counter[6283]++;
      return null;
    }
  }
  if (j.custom_undo_redo_levels) 
  {
    if (g.length > j.custom_undo_redo_levels) 
    {
      for (h = 0; h < g.length - 1; h++) 
        {
          tiny_mce_js_exec_counter[6284]++;
          g[h] = g[h + 1];
        }
      tiny_mce_js_exec_counter[6285]++;
      g.length--;
      tiny_mce_js_exec_counter[6286]++;
      d = g.length;
    }
  }
  tiny_mce_js_exec_counter[6287]++;
  l.bookmark = e.selection.getBookmark(2, true);
  if (d < g.length - 1) 
  {
    tiny_mce_js_exec_counter[6288]++;
    g.length = d + 1;
  }
  tiny_mce_js_exec_counter[6289]++;
  g.push(l);
  tiny_mce_js_exec_counter[6290]++;
  d = g.length - 1;
  tiny_mce_js_exec_counter[6291]++;
  c.onAdd.dispatch(c, l);
  tiny_mce_js_exec_counter[6292]++;
  e.isNotDirty = 0;
  tiny_mce_js_exec_counter[6293]++;
  return l;
}, undo: function() {
  tiny_mce_js_exec_counter[6294]++;
  tiny_mce_js_exec_counter[6295]++;
  var j, h;
  if (c.typing) 
  {
    tiny_mce_js_exec_counter[6297]++;
    c.add();
    tiny_mce_js_exec_counter[6298]++;
    c.typing = false;
  }
  if (d > 0) 
  {
    tiny_mce_js_exec_counter[6299]++;
    j = g[--d];
    tiny_mce_js_exec_counter[6300]++;
    e.setContent(j.content, {format: "raw"});
    tiny_mce_js_exec_counter[6301]++;
    e.selection.moveToBookmark(j.bookmark);
    tiny_mce_js_exec_counter[6302]++;
    c.onUndo.dispatch(c, j);
  }
  tiny_mce_js_exec_counter[6303]++;
  return j;
}, redo: function() {
  tiny_mce_js_exec_counter[6304]++;
  tiny_mce_js_exec_counter[6305]++;
  var h;
  if (d < g.length - 1) 
  {
    tiny_mce_js_exec_counter[6307]++;
    h = g[++d];
    tiny_mce_js_exec_counter[6308]++;
    e.setContent(h.content, {format: "raw"});
    tiny_mce_js_exec_counter[6309]++;
    e.selection.moveToBookmark(h.bookmark);
    tiny_mce_js_exec_counter[6310]++;
    c.onRedo.dispatch(c, h);
  }
  tiny_mce_js_exec_counter[6311]++;
  return h;
}, clear: function() {
  tiny_mce_js_exec_counter[6312]++;
  tiny_mce_js_exec_counter[6314]++;
  g = [];
  tiny_mce_js_exec_counter[6315]++;
  d = 0;
  tiny_mce_js_exec_counter[6316]++;
  c.typing = false;
  tiny_mce_js_exec_counter[6313]++;
}, hasUndo: function() {
  tiny_mce_js_exec_counter[6317]++;
  tiny_mce_js_exec_counter[6318]++;
  return d > 0 || c.typing;
}, hasRedo: function() {
  tiny_mce_js_exec_counter[6319]++;
  tiny_mce_js_exec_counter[6320]++;
  return d < g.length - 1;
}};
};
  tiny_mce_js_exec_counter[6267]++;
})(tinymce);
tiny_mce_js_exec_counter[6321]++;
(function(m) {
  tiny_mce_js_exec_counter[6322]++;
  tiny_mce_js_exec_counter[6324]++;
  var k = m.dom.Event, c = m.isIE, a = m.isGecko, b = m.isOpera, j = m.each, i = m.extend, d = true, h = false;
  function l(p) {
    tiny_mce_js_exec_counter[6326]++;
    tiny_mce_js_exec_counter[6328]++;
    var q, o, n;
do {
      if (/^(SPAN|STRONG|B|EM|I|FONT|STRIKE|U)$/.test(p.nodeName)) 
      {
        if (q) 
        {
          tiny_mce_js_exec_counter[6330]++;
          o = p.cloneNode(false);
          tiny_mce_js_exec_counter[6331]++;
          o.appendChild(q);
          tiny_mce_js_exec_counter[6332]++;
          q = o;
        } else {
          tiny_mce_js_exec_counter[6333]++;
          q = n = p.cloneNode(false);
        }
        tiny_mce_js_exec_counter[6334]++;
        q.removeAttribute("id");
      }
    } while (p = p.parentNode);
    if (q) 
    {
      tiny_mce_js_exec_counter[6335]++;
      return {wrapper: q, inner: n};
    }
    tiny_mce_js_exec_counter[6327]++;
  }
  function g(o, p) {
    tiny_mce_js_exec_counter[6336]++;
    tiny_mce_js_exec_counter[6337]++;
    var n = p.ownerDocument.createRange();
    tiny_mce_js_exec_counter[6339]++;
    n.setStart(o.endContainer, o.endOffset);
    tiny_mce_js_exec_counter[6340]++;
    n.setEndAfter(p);
    tiny_mce_js_exec_counter[6341]++;
    return n.cloneContents().textContent.length == 0;
  }
  function f(o) {
    tiny_mce_js_exec_counter[6342]++;
    tiny_mce_js_exec_counter[6343]++;
    o = o.innerHTML;
    tiny_mce_js_exec_counter[6344]++;
    o = o.replace(/<(img|hr|table|input|select|textarea)[ \>]/gi, "-");
    tiny_mce_js_exec_counter[6345]++;
    o = o.replace(/<[^>]+>/g, "");
    tiny_mce_js_exec_counter[6346]++;
    return o.replace(/[ \u00a0\t\r\n]+/g, "") == "";
  }
  function e(p, r, n) {
    tiny_mce_js_exec_counter[6347]++;
    tiny_mce_js_exec_counter[6348]++;
    var o, q;
    if (f(n)) 
    {
      tiny_mce_js_exec_counter[6350]++;
      o = r.getParent(n, "ul,ol");
      if (!r.getParent(o.parentNode, "ul,ol")) 
      {
        tiny_mce_js_exec_counter[6351]++;
        r.split(o, n);
        tiny_mce_js_exec_counter[6352]++;
        q = r.create("p", 0, '<br data-mce-bogus="1" />');
        tiny_mce_js_exec_counter[6353]++;
        r.replace(q, n);
        tiny_mce_js_exec_counter[6354]++;
        p.select(q, 1);
      }
      tiny_mce_js_exec_counter[6355]++;
      return h;
    }
    tiny_mce_js_exec_counter[6356]++;
    return d;
  }
  tiny_mce_js_exec_counter[6357]++;
  m.create("tinymce.ForceBlocks", {ForceBlocks: function(n) {
  tiny_mce_js_exec_counter[6358]++;
  tiny_mce_js_exec_counter[6360]++;
  var o = this, p = n.settings, q;
  tiny_mce_js_exec_counter[6362]++;
  o.editor = n;
  tiny_mce_js_exec_counter[6363]++;
  o.dom = n.dom;
  tiny_mce_js_exec_counter[6364]++;
  q = (p.forced_root_block || "p").toLowerCase();
  tiny_mce_js_exec_counter[6365]++;
  p.element = q.toUpperCase();
  tiny_mce_js_exec_counter[6366]++;
  n.onPreInit.add(o.setup, o);
  if (p.forced_root_block) 
  {
    tiny_mce_js_exec_counter[6367]++;
    n.onInit.add(o.forceRoots, o);
    tiny_mce_js_exec_counter[6368]++;
    n.onSetContent.add(o.forceRoots, o);
    tiny_mce_js_exec_counter[6369]++;
    n.onBeforeGetContent.add(o.forceRoots, o);
    tiny_mce_js_exec_counter[6370]++;
    n.onExecCommand.add(function(r, s) {
  tiny_mce_js_exec_counter[6371]++;
  if (s == "mceInsertContent") 
  {
    tiny_mce_js_exec_counter[6373]++;
    o.forceRoots();
    tiny_mce_js_exec_counter[6374]++;
    r.nodeChanged();
  }
  tiny_mce_js_exec_counter[6372]++;
});
  }
  tiny_mce_js_exec_counter[6359]++;
}, setup: function() {
  tiny_mce_js_exec_counter[6375]++;
  tiny_mce_js_exec_counter[6377]++;
  var o = this, n = o.editor, q = n.settings, u = n.dom, p = n.selection;
  if (q.forced_root_block) 
  {
    tiny_mce_js_exec_counter[6379]++;
    n.onBeforeExecCommand.add(o.forceRoots, o);
    tiny_mce_js_exec_counter[6380]++;
    n.onKeyUp.add(o.forceRoots, o);
    tiny_mce_js_exec_counter[6381]++;
    n.onPreProcess.add(o.forceRoots, o);
  }
  if (q.force_br_newlines) 
  {
    if (c) 
    {
      tiny_mce_js_exec_counter[6382]++;
      n.onKeyPress.add(function(s, t) {
  tiny_mce_js_exec_counter[6383]++;
  tiny_mce_js_exec_counter[6385]++;
  var v;
  if (t.keyCode == 13 && p.getNode().nodeName != "LI") 
  {
    tiny_mce_js_exec_counter[6387]++;
    p.setContent('<br id="__" /> ', {format: "raw"});
    tiny_mce_js_exec_counter[6388]++;
    v = u.get("__");
    tiny_mce_js_exec_counter[6389]++;
    v.removeAttribute("id");
    tiny_mce_js_exec_counter[6390]++;
    p.select(v);
    tiny_mce_js_exec_counter[6391]++;
    p.collapse();
    tiny_mce_js_exec_counter[6392]++;
    return k.cancel(t);
  }
  tiny_mce_js_exec_counter[6384]++;
});
    }
  }
  if (q.force_p_newlines) 
  {
    if (!c) 
    {
      tiny_mce_js_exec_counter[6393]++;
      n.onKeyPress.add(function(s, t) {
  tiny_mce_js_exec_counter[6394]++;
  if (t.keyCode == 13 && !t.shiftKey && !o.insertPara(t)) 
  {
    tiny_mce_js_exec_counter[6396]++;
    k.cancel(t);
  }
  tiny_mce_js_exec_counter[6395]++;
});
    } else {
      tiny_mce_js_exec_counter[6397]++;
      m.addUnload(function() {
  tiny_mce_js_exec_counter[6398]++;
  tiny_mce_js_exec_counter[6400]++;
  o._previousFormats = 0;
  tiny_mce_js_exec_counter[6399]++;
});
      tiny_mce_js_exec_counter[6401]++;
      n.onKeyPress.add(function(s, t) {
  tiny_mce_js_exec_counter[6402]++;
  tiny_mce_js_exec_counter[6404]++;
  o._previousFormats = 0;
  if (t.keyCode == 13 && !t.shiftKey && s.selection.isCollapsed() && q.keep_styles) 
  {
    tiny_mce_js_exec_counter[6405]++;
    o._previousFormats = l(s.selection.getStart());
  }
  tiny_mce_js_exec_counter[6403]++;
});
      tiny_mce_js_exec_counter[6406]++;
      n.onKeyUp.add(function(t, x) {
  tiny_mce_js_exec_counter[6407]++;
  if (x.keyCode == 13 && !x.shiftKey) 
  {
    tiny_mce_js_exec_counter[6409]++;
    var v = t.selection.getStart(), s = o._previousFormats;
    if (!v.hasChildNodes() && s) 
    {
      tiny_mce_js_exec_counter[6411]++;
      v = u.getParent(v, u.isBlock);
      if (v && v.nodeName != "LI") 
      {
        tiny_mce_js_exec_counter[6412]++;
        v.innerHTML = "";
        if (o._previousFormats) 
        {
          tiny_mce_js_exec_counter[6413]++;
          v.appendChild(s.wrapper);
          tiny_mce_js_exec_counter[6414]++;
          s.inner.innerHTML = "\ufeff";
        } else {
          tiny_mce_js_exec_counter[6415]++;
          v.innerHTML = "\ufeff";
        }
        tiny_mce_js_exec_counter[6416]++;
        p.select(v, 1);
        tiny_mce_js_exec_counter[6417]++;
        p.collapse(true);
        tiny_mce_js_exec_counter[6418]++;
        t.getDoc().execCommand("Delete", false, null);
        tiny_mce_js_exec_counter[6419]++;
        o._previousFormats = 0;
      }
    }
  }
  tiny_mce_js_exec_counter[6408]++;
});
    }
    if (a) 
    {
      tiny_mce_js_exec_counter[6420]++;
      n.onKeyDown.add(function(s, t) {
  tiny_mce_js_exec_counter[6421]++;
  if ((t.keyCode == 8 || t.keyCode == 46) && !t.shiftKey) 
  {
    tiny_mce_js_exec_counter[6423]++;
    o.backspaceDelete(t, t.keyCode == 8);
  }
  tiny_mce_js_exec_counter[6422]++;
});
    }
  }
  if (m.isWebKit) 
  {
    function r(t) {
      tiny_mce_js_exec_counter[6424]++;
      tiny_mce_js_exec_counter[6426]++;
      var s = p.getRng(), v, z = u.create("div", null, " "), y, x = u.getViewPort(t.getWin()).h;
      tiny_mce_js_exec_counter[6428]++;
      s.insertNode(v = u.create("br"));
      tiny_mce_js_exec_counter[6429]++;
      s.setStartAfter(v);
      tiny_mce_js_exec_counter[6430]++;
      s.setEndAfter(v);
      tiny_mce_js_exec_counter[6431]++;
      p.setRng(s);
      if (p.getSel().focusNode == v.previousSibling) 
      {
        tiny_mce_js_exec_counter[6432]++;
        p.select(u.insertAfter(u.doc.createTextNode("\xa0"), v));
        tiny_mce_js_exec_counter[6433]++;
        p.collapse(d);
      }
      tiny_mce_js_exec_counter[6434]++;
      u.insertAfter(z, v);
      tiny_mce_js_exec_counter[6435]++;
      y = u.getPos(z).y;
      tiny_mce_js_exec_counter[6436]++;
      u.remove(z);
      if (y > x) 
      {
        tiny_mce_js_exec_counter[6437]++;
        t.getWin().scrollTo(0, y);
      }
      tiny_mce_js_exec_counter[6425]++;
    }    tiny_mce_js_exec_counter[6438]++;
    n.onKeyPress.add(function(s, t) {
  tiny_mce_js_exec_counter[6439]++;
  if (t.keyCode == 13 && (t.shiftKey || (q.force_br_newlines && !u.getParent(p.getNode(), "h1,h2,h3,h4,h5,h6,ol,ul")))) 
  {
    tiny_mce_js_exec_counter[6441]++;
    r(s);
    tiny_mce_js_exec_counter[6442]++;
    k.cancel(t);
  }
  tiny_mce_js_exec_counter[6440]++;
});
  }
  if (c) 
  {
    if (q.element != "P") 
    {
      tiny_mce_js_exec_counter[6443]++;
      n.onKeyPress.add(function(s, t) {
  tiny_mce_js_exec_counter[6444]++;
  tiny_mce_js_exec_counter[6446]++;
  o.lastElm = p.getNode().nodeName;
  tiny_mce_js_exec_counter[6445]++;
});
      tiny_mce_js_exec_counter[6447]++;
      n.onKeyUp.add(function(t, v) {
  tiny_mce_js_exec_counter[6448]++;
  tiny_mce_js_exec_counter[6450]++;
  var y, x = p.getNode(), s = t.getBody();
  if (s.childNodes.length === 1 && x.nodeName == "P") 
  {
    tiny_mce_js_exec_counter[6452]++;
    x = u.rename(x, q.element);
    tiny_mce_js_exec_counter[6453]++;
    p.select(x);
    tiny_mce_js_exec_counter[6454]++;
    p.collapse();
    tiny_mce_js_exec_counter[6455]++;
    t.nodeChanged();
  } else {
    if (v.keyCode == 13 && !v.shiftKey && o.lastElm != "P") 
    {
      tiny_mce_js_exec_counter[6456]++;
      y = u.getParent(x, "p");
      if (y) 
      {
        tiny_mce_js_exec_counter[6457]++;
        u.rename(y, q.element);
        tiny_mce_js_exec_counter[6458]++;
        t.nodeChanged();
      }
    }
  }
  tiny_mce_js_exec_counter[6449]++;
});
    }
  }
  tiny_mce_js_exec_counter[6376]++;
}, find: function(v, q, r) {
  tiny_mce_js_exec_counter[6459]++;
  tiny_mce_js_exec_counter[6460]++;
  var p = this.editor, o = p.getDoc().createTreeWalker(v, 4, null, h), u = -1;
  while (v = o.nextNode()) 
    {
      tiny_mce_js_exec_counter[6462]++;
      u++;
      if (q == 0 && v == r) 
      {
        tiny_mce_js_exec_counter[6463]++;
        return u;
      }
      if (q == 1 && u == r) 
      {
        tiny_mce_js_exec_counter[6464]++;
        return v;
      }
    }
  tiny_mce_js_exec_counter[6465]++;
  return -1;
}, forceRoots: function(x, I) {
  tiny_mce_js_exec_counter[6466]++;
  tiny_mce_js_exec_counter[6468]++;
  var z = this, x = z.editor, M = x.getBody(), J = x.getDoc(), P = x.selection, A = P.getSel(), B = P.getRng(), N = -2, v, G, o, p, K = -16777215;
  tiny_mce_js_exec_counter[6470]++;
  var L, q, O, F, C, u = M.childNodes, E, D, y;
  for (E = u.length - 1; E >= 0; E--) 
    {
      tiny_mce_js_exec_counter[6472]++;
      L = u[E];
      if (L.nodeType === 1 && L.getAttribute("data-mce-type")) 
      {
        tiny_mce_js_exec_counter[6473]++;
        q = null;
        tiny_mce_js_exec_counter[6474]++;
        continue;
      }
      if (L.nodeType === 3 || (!z.dom.isBlock(L) && L.nodeType !== 8 && !/^(script|mce:script|style|mce:style)$/i.test(L.nodeName))) 
      {
        if (!q) 
        {
          if (L.nodeType != 3 || /[^\s]/g.test(L.nodeValue)) 
          {
            if (N == -2 && B) 
            {
              if (!c || B.setStart) 
              {
                if (B.startContainer.nodeType == 1 && (D = B.startContainer.childNodes[B.startOffset]) && D.nodeType == 1) 
                {
                  tiny_mce_js_exec_counter[6475]++;
                  y = D.getAttribute("id");
                  tiny_mce_js_exec_counter[6476]++;
                  D.setAttribute("id", "__mce");
                } else {
                  if (x.dom.getParent(B.startContainer, function(n) {
  tiny_mce_js_exec_counter[6477]++;
  tiny_mce_js_exec_counter[6478]++;
  return n === M;
})) 
                  {
                    tiny_mce_js_exec_counter[6479]++;
                    G = B.startOffset;
                    tiny_mce_js_exec_counter[6480]++;
                    o = B.endOffset;
                    tiny_mce_js_exec_counter[6481]++;
                    N = z.find(M, 0, B.startContainer);
                    tiny_mce_js_exec_counter[6482]++;
                    v = z.find(M, 0, B.endContainer);
                  }
                }
              } else {
                if (B.item) 
                {
                  tiny_mce_js_exec_counter[6483]++;
                  p = J.body.createTextRange();
                  tiny_mce_js_exec_counter[6484]++;
                  p.moveToElementText(B.item(0));
                  tiny_mce_js_exec_counter[6485]++;
                  B = p;
                }
                tiny_mce_js_exec_counter[6486]++;
                p = J.body.createTextRange();
                tiny_mce_js_exec_counter[6487]++;
                p.moveToElementText(M);
                tiny_mce_js_exec_counter[6488]++;
                p.collapse(1);
                tiny_mce_js_exec_counter[6489]++;
                O = p.move("character", K) * -1;
                tiny_mce_js_exec_counter[6490]++;
                p = B.duplicate();
                tiny_mce_js_exec_counter[6491]++;
                p.collapse(1);
                tiny_mce_js_exec_counter[6492]++;
                F = p.move("character", K) * -1;
                tiny_mce_js_exec_counter[6493]++;
                p = B.duplicate();
                tiny_mce_js_exec_counter[6494]++;
                p.collapse(0);
                tiny_mce_js_exec_counter[6495]++;
                C = (p.move("character", K) * -1) - F;
                tiny_mce_js_exec_counter[6496]++;
                N = F - O;
                tiny_mce_js_exec_counter[6497]++;
                v = C;
              }
            }
            tiny_mce_js_exec_counter[6498]++;
            q = x.dom.create(x.settings.forced_root_block);
            tiny_mce_js_exec_counter[6499]++;
            L.parentNode.replaceChild(q, L);
            tiny_mce_js_exec_counter[6500]++;
            q.appendChild(L);
          }
        } else {
          if (q.hasChildNodes()) 
          {
            tiny_mce_js_exec_counter[6501]++;
            q.insertBefore(L, q.firstChild);
          } else {
            tiny_mce_js_exec_counter[6502]++;
            q.appendChild(L);
          }
        }
      } else {
        tiny_mce_js_exec_counter[6503]++;
        q = null;
      }
    }
  if (N != -2) 
  {
    if (!c || B.setStart) 
    {
      tiny_mce_js_exec_counter[6504]++;
      q = M.getElementsByTagName(x.settings.element)[0];
      tiny_mce_js_exec_counter[6505]++;
      B = J.createRange();
      if (N != -1) 
      {
        tiny_mce_js_exec_counter[6506]++;
        B.setStart(z.find(M, 1, N), G);
      } else {
        tiny_mce_js_exec_counter[6507]++;
        B.setStart(q, 0);
      }
      if (v != -1) 
      {
        tiny_mce_js_exec_counter[6508]++;
        B.setEnd(z.find(M, 1, v), o);
      } else {
        tiny_mce_js_exec_counter[6509]++;
        B.setEnd(q, 0);
      }
      if (A) 
      {
        tiny_mce_js_exec_counter[6510]++;
        A.removeAllRanges();
        tiny_mce_js_exec_counter[6511]++;
        A.addRange(B);
      }
    } else {
      try {
        tiny_mce_js_exec_counter[6512]++;
        B = A.createRange();
        tiny_mce_js_exec_counter[6513]++;
        B.moveToElementText(M);
        tiny_mce_js_exec_counter[6514]++;
        B.collapse(1);
        tiny_mce_js_exec_counter[6515]++;
        B.moveStart("character", N);
        tiny_mce_js_exec_counter[6516]++;
        B.moveEnd("character", v);
        tiny_mce_js_exec_counter[6517]++;
        B.select();
      }      catch (H) {
}
    }
  } else {
    if ((!c || B.setStart) && (D = x.dom.get("__mce"))) 
    {
      if (y) 
      {
        tiny_mce_js_exec_counter[6518]++;
        D.setAttribute("id", y);
      } else {
        tiny_mce_js_exec_counter[6519]++;
        D.removeAttribute("id");
      }
      tiny_mce_js_exec_counter[6520]++;
      B = J.createRange();
      tiny_mce_js_exec_counter[6521]++;
      B.setStartBefore(D);
      tiny_mce_js_exec_counter[6522]++;
      B.setEndBefore(D);
      tiny_mce_js_exec_counter[6523]++;
      P.setRng(B);
    }
  }
  tiny_mce_js_exec_counter[6467]++;
}, getParentBlock: function(p) {
  tiny_mce_js_exec_counter[6524]++;
  tiny_mce_js_exec_counter[6525]++;
  var o = this.dom;
  tiny_mce_js_exec_counter[6527]++;
  return o.getParent(p, o.isBlock);
}, insertPara: function(S) {
  tiny_mce_js_exec_counter[6528]++;
  tiny_mce_js_exec_counter[6529]++;
  var G = this, x = G.editor, O = x.dom, T = x.getDoc(), X = x.settings, H = x.selection.getSel(), I = H.getRangeAt(0), W = T.body;
  tiny_mce_js_exec_counter[6531]++;
  var L, M, J, Q, P, u, p, v, A, o, E, V, q, z, K, N = O.getViewPort(x.getWin()), D, F, C;
  tiny_mce_js_exec_counter[6533]++;
  L = T.createRange();
  tiny_mce_js_exec_counter[6534]++;
  L.setStart(H.anchorNode, H.anchorOffset);
  tiny_mce_js_exec_counter[6535]++;
  L.collapse(d);
  tiny_mce_js_exec_counter[6536]++;
  M = T.createRange();
  tiny_mce_js_exec_counter[6537]++;
  M.setStart(H.focusNode, H.focusOffset);
  tiny_mce_js_exec_counter[6538]++;
  M.collapse(d);
  tiny_mce_js_exec_counter[6539]++;
  J = L.compareBoundaryPoints(L.START_TO_END, M) < 0;
  tiny_mce_js_exec_counter[6540]++;
  Q = J ? H.anchorNode : H.focusNode;
  tiny_mce_js_exec_counter[6541]++;
  P = J ? H.anchorOffset : H.focusOffset;
  tiny_mce_js_exec_counter[6542]++;
  u = J ? H.focusNode : H.anchorNode;
  tiny_mce_js_exec_counter[6543]++;
  p = J ? H.focusOffset : H.anchorOffset;
  if (Q === u && /^(TD|TH)$/.test(Q.nodeName)) 
  {
    if (Q.firstChild.nodeName == "BR") 
    {
      tiny_mce_js_exec_counter[6544]++;
      O.remove(Q.firstChild);
    }
    if (Q.childNodes.length == 0) 
    {
      tiny_mce_js_exec_counter[6545]++;
      x.dom.add(Q, X.element, null, "<br />");
      tiny_mce_js_exec_counter[6546]++;
      V = x.dom.add(Q, X.element, null, "<br />");
    } else {
      tiny_mce_js_exec_counter[6547]++;
      K = Q.innerHTML;
      tiny_mce_js_exec_counter[6548]++;
      Q.innerHTML = "";
      tiny_mce_js_exec_counter[6549]++;
      x.dom.add(Q, X.element, null, K);
      tiny_mce_js_exec_counter[6550]++;
      V = x.dom.add(Q, X.element, null, "<br />");
    }
    tiny_mce_js_exec_counter[6551]++;
    I = T.createRange();
    tiny_mce_js_exec_counter[6552]++;
    I.selectNodeContents(V);
    tiny_mce_js_exec_counter[6553]++;
    I.collapse(1);
    tiny_mce_js_exec_counter[6554]++;
    x.selection.setRng(I);
    tiny_mce_js_exec_counter[6555]++;
    return h;
  }
  if (Q == W && u == W && W.firstChild && x.dom.isBlock(W.firstChild)) 
  {
    tiny_mce_js_exec_counter[6556]++;
    Q = u = Q.firstChild;
    tiny_mce_js_exec_counter[6557]++;
    P = p = 0;
    tiny_mce_js_exec_counter[6558]++;
    L = T.createRange();
    tiny_mce_js_exec_counter[6559]++;
    L.setStart(Q, 0);
    tiny_mce_js_exec_counter[6560]++;
    M = T.createRange();
    tiny_mce_js_exec_counter[6561]++;
    M.setStart(u, 0);
  }
  tiny_mce_js_exec_counter[6562]++;
  Q = Q.nodeName == "HTML" ? T.body : Q;
  tiny_mce_js_exec_counter[6563]++;
  Q = Q.nodeName == "BODY" ? Q.firstChild : Q;
  tiny_mce_js_exec_counter[6564]++;
  u = u.nodeName == "HTML" ? T.body : u;
  tiny_mce_js_exec_counter[6565]++;
  u = u.nodeName == "BODY" ? u.firstChild : u;
  tiny_mce_js_exec_counter[6566]++;
  v = G.getParentBlock(Q);
  tiny_mce_js_exec_counter[6567]++;
  A = G.getParentBlock(u);
  tiny_mce_js_exec_counter[6568]++;
  o = v ? v.nodeName : X.element;
  if (K = G.dom.getParent(v, "li,pre")) 
  {
    if (K.nodeName == "LI") 
    {
      tiny_mce_js_exec_counter[6569]++;
      return e(x.selection, G.dom, K);
    }
    tiny_mce_js_exec_counter[6570]++;
    return d;
  }
  if (v && (v.nodeName == "CAPTION" || /absolute|relative|fixed/gi.test(O.getStyle(v, "position", 1)))) 
  {
    tiny_mce_js_exec_counter[6571]++;
    o = X.element;
    tiny_mce_js_exec_counter[6572]++;
    v = null;
  }
  if (A && (A.nodeName == "CAPTION" || /absolute|relative|fixed/gi.test(O.getStyle(v, "position", 1)))) 
  {
    tiny_mce_js_exec_counter[6573]++;
    o = X.element;
    tiny_mce_js_exec_counter[6574]++;
    A = null;
  }
  if (/(TD|TABLE|TH|CAPTION)/.test(o) || (v && o == "DIV" && /left|right/gi.test(O.getStyle(v, "float", 1)))) 
  {
    tiny_mce_js_exec_counter[6575]++;
    o = X.element;
    tiny_mce_js_exec_counter[6576]++;
    v = A = null;
  }
  tiny_mce_js_exec_counter[6577]++;
  E = (v && v.nodeName == o) ? v.cloneNode(0) : x.dom.create(o);
  tiny_mce_js_exec_counter[6578]++;
  V = (A && A.nodeName == o) ? A.cloneNode(0) : x.dom.create(o);
  tiny_mce_js_exec_counter[6579]++;
  V.removeAttribute("id");
  if (/^(H[1-6])$/.test(o) && g(I, v)) 
  {
    tiny_mce_js_exec_counter[6580]++;
    V = x.dom.create(X.element);
  }
  tiny_mce_js_exec_counter[6581]++;
  K = q = Q;
do {
    if (K == W || K.nodeType == 9 || G.dom.isBlock(K) || /(TD|TABLE|TH|CAPTION)/.test(K.nodeName)) 
    {
      tiny_mce_js_exec_counter[6582]++;
      break;
    }
    tiny_mce_js_exec_counter[6583]++;
    q = K;
  } while ((K = K.previousSibling ? K.previousSibling : K.parentNode));
  tiny_mce_js_exec_counter[6584]++;
  K = z = u;
do {
    if (K == W || K.nodeType == 9 || G.dom.isBlock(K) || /(TD|TABLE|TH|CAPTION)/.test(K.nodeName)) 
    {
      tiny_mce_js_exec_counter[6585]++;
      break;
    }
    tiny_mce_js_exec_counter[6586]++;
    z = K;
  } while ((K = K.nextSibling ? K.nextSibling : K.parentNode));
  if (q.nodeName == o) 
  {
    tiny_mce_js_exec_counter[6587]++;
    L.setStart(q, 0);
  } else {
    tiny_mce_js_exec_counter[6588]++;
    L.setStartBefore(q);
  }
  tiny_mce_js_exec_counter[6589]++;
  L.setEnd(Q, P);
  tiny_mce_js_exec_counter[6590]++;
  E.appendChild(L.cloneContents() || T.createTextNode(""));
  try {
    tiny_mce_js_exec_counter[6591]++;
    M.setEndAfter(z);
  }  catch (R) {
}
  tiny_mce_js_exec_counter[6592]++;
  M.setStart(u, p);
  tiny_mce_js_exec_counter[6593]++;
  V.appendChild(M.cloneContents() || T.createTextNode(""));
  tiny_mce_js_exec_counter[6594]++;
  I = T.createRange();
  if (!q.previousSibling && q.parentNode.nodeName == o) 
  {
    tiny_mce_js_exec_counter[6595]++;
    I.setStartBefore(q.parentNode);
  } else {
    if (L.startContainer.nodeName == o && L.startOffset == 0) 
    {
      tiny_mce_js_exec_counter[6596]++;
      I.setStartBefore(L.startContainer);
    } else {
      tiny_mce_js_exec_counter[6597]++;
      I.setStart(L.startContainer, L.startOffset);
    }
  }
  if (!z.nextSibling && z.parentNode.nodeName == o) 
  {
    tiny_mce_js_exec_counter[6598]++;
    I.setEndAfter(z.parentNode);
  } else {
    tiny_mce_js_exec_counter[6599]++;
    I.setEnd(M.endContainer, M.endOffset);
  }
  tiny_mce_js_exec_counter[6600]++;
  I.deleteContents();
  if (b) 
  {
    tiny_mce_js_exec_counter[6601]++;
    x.getWin().scrollTo(0, N.y);
  }
  if (E.firstChild && E.firstChild.nodeName == o) 
  {
    tiny_mce_js_exec_counter[6602]++;
    E.innerHTML = E.firstChild.innerHTML;
  }
  if (V.firstChild && V.firstChild.nodeName == o) 
  {
    tiny_mce_js_exec_counter[6603]++;
    V.innerHTML = V.firstChild.innerHTML;
  }
  if (f(E)) 
  {
    tiny_mce_js_exec_counter[6604]++;
    E.innerHTML = "<br />";
  }
  function U(y, s) {
    tiny_mce_js_exec_counter[6605]++;
    tiny_mce_js_exec_counter[6607]++;
    var r = [], Z, Y, t;
    tiny_mce_js_exec_counter[6609]++;
    y.innerHTML = "";
    if (X.keep_styles) 
    {
      tiny_mce_js_exec_counter[6610]++;
      Y = s;
do {
        if (/^(SPAN|STRONG|B|EM|I|FONT|STRIKE|U)$/.test(Y.nodeName)) 
        {
          tiny_mce_js_exec_counter[6611]++;
          Z = Y.cloneNode(h);
          tiny_mce_js_exec_counter[6612]++;
          O.setAttrib(Z, "id", "");
          tiny_mce_js_exec_counter[6613]++;
          r.push(Z);
        }
      } while (Y = Y.parentNode);
    }
    if (r.length > 0) 
    {
      for (t = r.length - 1 , Z = y; t >= 0; t--) 
        {
          tiny_mce_js_exec_counter[6614]++;
          Z = Z.appendChild(r[t]);
        }
      tiny_mce_js_exec_counter[6615]++;
      r[0].innerHTML = b ? "\xa0" : "<br />";
      tiny_mce_js_exec_counter[6616]++;
      return r[0];
    } else {
      tiny_mce_js_exec_counter[6617]++;
      y.innerHTML = b ? "\xa0" : "<br />";
    }
    tiny_mce_js_exec_counter[6606]++;
  }
  if (f(V)) 
  {
    tiny_mce_js_exec_counter[6618]++;
    C = U(V, u);
  }
  if (b && parseFloat(opera.version()) < 9.5) 
  {
    tiny_mce_js_exec_counter[6619]++;
    I.insertNode(E);
    tiny_mce_js_exec_counter[6620]++;
    I.insertNode(V);
  } else {
    tiny_mce_js_exec_counter[6621]++;
    I.insertNode(V);
    tiny_mce_js_exec_counter[6622]++;
    I.insertNode(E);
  }
  tiny_mce_js_exec_counter[6623]++;
  V.normalize();
  tiny_mce_js_exec_counter[6624]++;
  E.normalize();
  function B(r) {
    tiny_mce_js_exec_counter[6625]++;
    tiny_mce_js_exec_counter[6626]++;
    return T.createTreeWalker(r, NodeFilter.SHOW_TEXT, null, h).nextNode() || r;
  }
  tiny_mce_js_exec_counter[6627]++;
  I = T.createRange();
  tiny_mce_js_exec_counter[6628]++;
  I.selectNodeContents(a ? B(C || V) : C || V);
  tiny_mce_js_exec_counter[6629]++;
  I.collapse(1);
  tiny_mce_js_exec_counter[6630]++;
  H.removeAllRanges();
  tiny_mce_js_exec_counter[6631]++;
  H.addRange(I);
  tiny_mce_js_exec_counter[6632]++;
  D = x.dom.getPos(V).y;
  if (D < N.y || D + 25 > N.y + N.h) 
  {
    tiny_mce_js_exec_counter[6633]++;
    x.getWin().scrollTo(0, D < N.y ? D : D - N.h + 25);
  }
  tiny_mce_js_exec_counter[6634]++;
  return h;
}, backspaceDelete: function(v, C) {
  tiny_mce_js_exec_counter[6635]++;
  tiny_mce_js_exec_counter[6637]++;
  var D = this, u = D.editor, z = u.getBody(), s = u.dom, q, x = u.selection, p = x.getRng(), y = p.startContainer, q, A, B, o;
  if (!C && p.collapsed && y.nodeType == 1 && p.startOffset == y.childNodes.length) 
  {
    tiny_mce_js_exec_counter[6639]++;
    o = new m.dom.TreeWalker(y.lastChild, y);
    for (q = y.lastChild; q; q = o.prev()) 
      {
        if (q.nodeType == 3) 
        {
          tiny_mce_js_exec_counter[6640]++;
          p.setStart(q, q.nodeValue.length);
          tiny_mce_js_exec_counter[6641]++;
          p.collapse(true);
          tiny_mce_js_exec_counter[6642]++;
          x.setRng(p);
          tiny_mce_js_exec_counter[6643]++;
          return;
        }
      }
  }
  if (y && u.dom.isBlock(y) && !/^(TD|TH)$/.test(y.nodeName) && C) 
  {
    if (y.childNodes.length == 0 || (y.childNodes.length == 1 && y.firstChild.nodeName == "BR")) 
    {
      tiny_mce_js_exec_counter[6644]++;
      q = y;
      while ((q = q.previousSibling) && !u.dom.isBlock(q)) 
        {
        }
      if (q) 
      {
        if (y != z.firstChild) 
        {
          tiny_mce_js_exec_counter[6645]++;
          A = u.dom.doc.createTreeWalker(q, NodeFilter.SHOW_TEXT, null, h);
          while (B = A.nextNode()) 
            {
              tiny_mce_js_exec_counter[6646]++;
              q = B;
            }
          tiny_mce_js_exec_counter[6647]++;
          p = u.getDoc().createRange();
          tiny_mce_js_exec_counter[6648]++;
          p.setStart(q, q.nodeValue ? q.nodeValue.length : 0);
          tiny_mce_js_exec_counter[6649]++;
          p.setEnd(q, q.nodeValue ? q.nodeValue.length : 0);
          tiny_mce_js_exec_counter[6650]++;
          x.setRng(p);
          tiny_mce_js_exec_counter[6651]++;
          u.dom.remove(y);
        }
        tiny_mce_js_exec_counter[6652]++;
        return k.cancel(v);
      }
    }
  }
  tiny_mce_js_exec_counter[6636]++;
}});
  tiny_mce_js_exec_counter[6323]++;
})(tinymce);
tiny_mce_js_exec_counter[6653]++;
(function(c) {
  tiny_mce_js_exec_counter[6654]++;
  tiny_mce_js_exec_counter[6656]++;
  var b = c.DOM, a = c.dom.Event, d = c.each, e = c.extend;
  tiny_mce_js_exec_counter[6658]++;
  c.create("tinymce.ControlManager", {ControlManager: function(f, j) {
  tiny_mce_js_exec_counter[6659]++;
  tiny_mce_js_exec_counter[6661]++;
  var h = this, g;
  tiny_mce_js_exec_counter[6663]++;
  j = j || {};
  tiny_mce_js_exec_counter[6664]++;
  h.editor = f;
  tiny_mce_js_exec_counter[6665]++;
  h.controls = {};
  tiny_mce_js_exec_counter[6666]++;
  h.onAdd = new c.util.Dispatcher(h);
  tiny_mce_js_exec_counter[6667]++;
  h.onPostRender = new c.util.Dispatcher(h);
  tiny_mce_js_exec_counter[6668]++;
  h.prefix = j.prefix || f.id + "_";
  tiny_mce_js_exec_counter[6669]++;
  h._cls = {};
  tiny_mce_js_exec_counter[6670]++;
  h.onPostRender.add(function() {
  tiny_mce_js_exec_counter[6671]++;
  tiny_mce_js_exec_counter[6673]++;
  d(h.controls, function(i) {
  tiny_mce_js_exec_counter[6674]++;
  tiny_mce_js_exec_counter[6676]++;
  i.postRender();
  tiny_mce_js_exec_counter[6675]++;
});
  tiny_mce_js_exec_counter[6672]++;
});
  tiny_mce_js_exec_counter[6660]++;
}, get: function(f) {
  tiny_mce_js_exec_counter[6677]++;
  tiny_mce_js_exec_counter[6678]++;
  return this.controls[this.prefix + f] || this.controls[f];
}, setActive: function(h, f) {
  tiny_mce_js_exec_counter[6679]++;
  tiny_mce_js_exec_counter[6680]++;
  var g = null;
  if (g = this.get(h)) 
  {
    tiny_mce_js_exec_counter[6682]++;
    g.setActive(f);
  }
  tiny_mce_js_exec_counter[6683]++;
  return g;
}, setDisabled: function(h, f) {
  tiny_mce_js_exec_counter[6684]++;
  tiny_mce_js_exec_counter[6685]++;
  var g = null;
  if (g = this.get(h)) 
  {
    tiny_mce_js_exec_counter[6687]++;
    g.setDisabled(f);
  }
  tiny_mce_js_exec_counter[6688]++;
  return g;
}, add: function(g) {
  tiny_mce_js_exec_counter[6689]++;
  tiny_mce_js_exec_counter[6690]++;
  var f = this;
  if (g) 
  {
    tiny_mce_js_exec_counter[6692]++;
    f.controls[g.id] = g;
    tiny_mce_js_exec_counter[6693]++;
    f.onAdd.dispatch(g, f);
  }
  tiny_mce_js_exec_counter[6694]++;
  return g;
}, createControl: function(i) {
  tiny_mce_js_exec_counter[6695]++;
  tiny_mce_js_exec_counter[6696]++;
  var h, g = this, f = g.editor;
  tiny_mce_js_exec_counter[6698]++;
  d(f.plugins, function(j) {
  tiny_mce_js_exec_counter[6699]++;
  if (j.createControl) 
  {
    tiny_mce_js_exec_counter[6701]++;
    h = j.createControl(i, g);
    if (h) 
    {
      tiny_mce_js_exec_counter[6702]++;
      return false;
    }
  }
  tiny_mce_js_exec_counter[6700]++;
});
  switch (i) {
    case "|":
    case "separator":
      {
        tiny_mce_js_exec_counter[6703]++;
        return g.createSeparator();
      }
  }
  if (!h && f.buttons && (h = f.buttons[i])) 
  {
    tiny_mce_js_exec_counter[6704]++;
    return g.createButton(i, h);
  }
  tiny_mce_js_exec_counter[6705]++;
  return g.add(h);
}, createDropMenu: function(f, n, h) {
  tiny_mce_js_exec_counter[6706]++;
  tiny_mce_js_exec_counter[6707]++;
  var m = this, i = m.editor, j, g, k, l;
  tiny_mce_js_exec_counter[6709]++;
  n = e({"class": "mceDropDown", constrain: i.settings.constrain_menus}, n);
  tiny_mce_js_exec_counter[6710]++;
  n["class"] = n["class"] + " " + i.getParam("skin") + "Skin";
  if (k = i.getParam("skin_variant")) 
  {
    tiny_mce_js_exec_counter[6711]++;
    n["class"] += " " + i.getParam("skin") + "Skin" + k.substring(0, 1).toUpperCase() + k.substring(1);
  }
  tiny_mce_js_exec_counter[6712]++;
  f = m.prefix + f;
  tiny_mce_js_exec_counter[6713]++;
  l = h || m._cls.dropmenu || c.ui.DropMenu;
  tiny_mce_js_exec_counter[6714]++;
  j = m.controls[f] = new l(f, n);
  tiny_mce_js_exec_counter[6715]++;
  j.onAddItem.add(function(r, q) {
  tiny_mce_js_exec_counter[6716]++;
  tiny_mce_js_exec_counter[6718]++;
  var p = q.settings;
  tiny_mce_js_exec_counter[6720]++;
  p.title = i.getLang(p.title, p.title);
  if (!p.onclick) 
  {
    tiny_mce_js_exec_counter[6721]++;
    p.onclick = function(o) {
  tiny_mce_js_exec_counter[6722]++;
  if (p.cmd) 
  {
    tiny_mce_js_exec_counter[6724]++;
    i.execCommand(p.cmd, p.ui || false, p.value);
  }
  tiny_mce_js_exec_counter[6723]++;
};
  }
  tiny_mce_js_exec_counter[6717]++;
});
  tiny_mce_js_exec_counter[6725]++;
  i.onRemove.add(function() {
  tiny_mce_js_exec_counter[6726]++;
  tiny_mce_js_exec_counter[6728]++;
  j.destroy();
  tiny_mce_js_exec_counter[6727]++;
});
  if (c.isIE) 
  {
    tiny_mce_js_exec_counter[6729]++;
    j.onShowMenu.add(function() {
  tiny_mce_js_exec_counter[6730]++;
  tiny_mce_js_exec_counter[6732]++;
  i.focus();
  tiny_mce_js_exec_counter[6733]++;
  g = i.selection.getBookmark(1);
  tiny_mce_js_exec_counter[6731]++;
});
    tiny_mce_js_exec_counter[6734]++;
    j.onHideMenu.add(function() {
  tiny_mce_js_exec_counter[6735]++;
  if (g) 
  {
    tiny_mce_js_exec_counter[6737]++;
    i.selection.moveToBookmark(g);
    tiny_mce_js_exec_counter[6738]++;
    g = 0;
  }
  tiny_mce_js_exec_counter[6736]++;
});
  }
  tiny_mce_js_exec_counter[6739]++;
  return m.add(j);
}, createListBox: function(m, i, l) {
  tiny_mce_js_exec_counter[6740]++;
  tiny_mce_js_exec_counter[6741]++;
  var h = this, g = h.editor, j, k, f;
  if (h.get(m)) 
  {
    tiny_mce_js_exec_counter[6743]++;
    return null;
  }
  tiny_mce_js_exec_counter[6744]++;
  i.title = g.translate(i.title);
  tiny_mce_js_exec_counter[6745]++;
  i.scope = i.scope || g;
  if (!i.onselect) 
  {
    tiny_mce_js_exec_counter[6746]++;
    i.onselect = function(n) {
  tiny_mce_js_exec_counter[6747]++;
  tiny_mce_js_exec_counter[6749]++;
  g.execCommand(i.cmd, i.ui || false, n || i.value);
  tiny_mce_js_exec_counter[6748]++;
};
  }
  tiny_mce_js_exec_counter[6750]++;
  i = e({title: i.title, "class": "mce_" + m, scope: i.scope, control_manager: h}, i);
  tiny_mce_js_exec_counter[6751]++;
  m = h.prefix + m;
  if (g.settings.use_native_selects) 
  {
    tiny_mce_js_exec_counter[6752]++;
    k = new c.ui.NativeListBox(m, i);
  } else {
    tiny_mce_js_exec_counter[6753]++;
    f = l || h._cls.listbox || c.ui.ListBox;
    tiny_mce_js_exec_counter[6754]++;
    k = new f(m, i, g);
  }
  tiny_mce_js_exec_counter[6755]++;
  h.controls[m] = k;
  if (c.isWebKit) 
  {
    tiny_mce_js_exec_counter[6756]++;
    k.onPostRender.add(function(p, o) {
  tiny_mce_js_exec_counter[6757]++;
  tiny_mce_js_exec_counter[6759]++;
  a.add(o, "mousedown", function() {
  tiny_mce_js_exec_counter[6760]++;
  tiny_mce_js_exec_counter[6762]++;
  g.bookmark = g.selection.getBookmark(1);
  tiny_mce_js_exec_counter[6761]++;
});
  tiny_mce_js_exec_counter[6763]++;
  a.add(o, "focus", function() {
  tiny_mce_js_exec_counter[6764]++;
  tiny_mce_js_exec_counter[6766]++;
  g.selection.moveToBookmark(g.bookmark);
  tiny_mce_js_exec_counter[6767]++;
  g.bookmark = null;
  tiny_mce_js_exec_counter[6765]++;
});
  tiny_mce_js_exec_counter[6758]++;
});
  }
  if (k.hideMenu) 
  {
    tiny_mce_js_exec_counter[6768]++;
    g.onMouseDown.add(k.hideMenu, k);
  }
  tiny_mce_js_exec_counter[6769]++;
  return h.add(k);
}, createButton: function(m, i, l) {
  tiny_mce_js_exec_counter[6770]++;
  tiny_mce_js_exec_counter[6771]++;
  var h = this, g = h.editor, j, k, f;
  if (h.get(m)) 
  {
    tiny_mce_js_exec_counter[6773]++;
    return null;
  }
  tiny_mce_js_exec_counter[6774]++;
  i.title = g.translate(i.title);
  tiny_mce_js_exec_counter[6775]++;
  i.label = g.translate(i.label);
  tiny_mce_js_exec_counter[6776]++;
  i.scope = i.scope || g;
  if (!i.onclick && !i.menu_button) 
  {
    tiny_mce_js_exec_counter[6777]++;
    i.onclick = function() {
  tiny_mce_js_exec_counter[6778]++;
  tiny_mce_js_exec_counter[6780]++;
  g.execCommand(i.cmd, i.ui || false, i.value);
  tiny_mce_js_exec_counter[6779]++;
};
  }
  tiny_mce_js_exec_counter[6781]++;
  i = e({title: i.title, "class": "mce_" + m, unavailable_prefix: g.getLang("unavailable", ""), scope: i.scope, control_manager: h}, i);
  tiny_mce_js_exec_counter[6782]++;
  m = h.prefix + m;
  if (i.menu_button) 
  {
    tiny_mce_js_exec_counter[6783]++;
    f = l || h._cls.menubutton || c.ui.MenuButton;
    tiny_mce_js_exec_counter[6784]++;
    k = new f(m, i, g);
    tiny_mce_js_exec_counter[6785]++;
    g.onMouseDown.add(k.hideMenu, k);
  } else {
    tiny_mce_js_exec_counter[6786]++;
    f = h._cls.button || c.ui.Button;
    tiny_mce_js_exec_counter[6787]++;
    k = new f(m, i);
  }
  tiny_mce_js_exec_counter[6788]++;
  return h.add(k);
}, createMenuButton: function(h, f, g) {
  tiny_mce_js_exec_counter[6789]++;
  tiny_mce_js_exec_counter[6790]++;
  f = f || {};
  tiny_mce_js_exec_counter[6791]++;
  f.menu_button = 1;
  tiny_mce_js_exec_counter[6792]++;
  return this.createButton(h, f, g);
}, createSplitButton: function(m, i, l) {
  tiny_mce_js_exec_counter[6793]++;
  tiny_mce_js_exec_counter[6794]++;
  var h = this, g = h.editor, j, k, f;
  if (h.get(m)) 
  {
    tiny_mce_js_exec_counter[6796]++;
    return null;
  }
  tiny_mce_js_exec_counter[6797]++;
  i.title = g.translate(i.title);
  tiny_mce_js_exec_counter[6798]++;
  i.scope = i.scope || g;
  if (!i.onclick) 
  {
    tiny_mce_js_exec_counter[6799]++;
    i.onclick = function(n) {
  tiny_mce_js_exec_counter[6800]++;
  tiny_mce_js_exec_counter[6802]++;
  g.execCommand(i.cmd, i.ui || false, n || i.value);
  tiny_mce_js_exec_counter[6801]++;
};
  }
  if (!i.onselect) 
  {
    tiny_mce_js_exec_counter[6803]++;
    i.onselect = function(n) {
  tiny_mce_js_exec_counter[6804]++;
  tiny_mce_js_exec_counter[6806]++;
  g.execCommand(i.cmd, i.ui || false, n || i.value);
  tiny_mce_js_exec_counter[6805]++;
};
  }
  tiny_mce_js_exec_counter[6807]++;
  i = e({title: i.title, "class": "mce_" + m, scope: i.scope, control_manager: h}, i);
  tiny_mce_js_exec_counter[6808]++;
  m = h.prefix + m;
  tiny_mce_js_exec_counter[6809]++;
  f = l || h._cls.splitbutton || c.ui.SplitButton;
  tiny_mce_js_exec_counter[6810]++;
  k = h.add(new f(m, i, g));
  tiny_mce_js_exec_counter[6811]++;
  g.onMouseDown.add(k.hideMenu, k);
  tiny_mce_js_exec_counter[6812]++;
  return k;
}, createColorSplitButton: function(f, n, h) {
  tiny_mce_js_exec_counter[6813]++;
  tiny_mce_js_exec_counter[6814]++;
  var l = this, j = l.editor, i, k, m, g;
  if (l.get(f)) 
  {
    tiny_mce_js_exec_counter[6816]++;
    return null;
  }
  tiny_mce_js_exec_counter[6817]++;
  n.title = j.translate(n.title);
  tiny_mce_js_exec_counter[6818]++;
  n.scope = n.scope || j;
  if (!n.onclick) 
  {
    tiny_mce_js_exec_counter[6819]++;
    n.onclick = function(o) {
  tiny_mce_js_exec_counter[6820]++;
  if (c.isIE) 
  {
    tiny_mce_js_exec_counter[6822]++;
    g = j.selection.getBookmark(1);
  }
  tiny_mce_js_exec_counter[6823]++;
  j.execCommand(n.cmd, n.ui || false, o || n.value);
  tiny_mce_js_exec_counter[6821]++;
};
  }
  if (!n.onselect) 
  {
    tiny_mce_js_exec_counter[6824]++;
    n.onselect = function(o) {
  tiny_mce_js_exec_counter[6825]++;
  tiny_mce_js_exec_counter[6827]++;
  j.execCommand(n.cmd, n.ui || false, o || n.value);
  tiny_mce_js_exec_counter[6826]++;
};
  }
  tiny_mce_js_exec_counter[6828]++;
  n = e({title: n.title, "class": "mce_" + f, menu_class: j.getParam("skin") + "Skin", scope: n.scope, more_colors_title: j.getLang("more_colors")}, n);
  tiny_mce_js_exec_counter[6829]++;
  f = l.prefix + f;
  tiny_mce_js_exec_counter[6830]++;
  m = h || l._cls.colorsplitbutton || c.ui.ColorSplitButton;
  tiny_mce_js_exec_counter[6831]++;
  k = new m(f, n, j);
  tiny_mce_js_exec_counter[6832]++;
  j.onMouseDown.add(k.hideMenu, k);
  tiny_mce_js_exec_counter[6833]++;
  j.onRemove.add(function() {
  tiny_mce_js_exec_counter[6834]++;
  tiny_mce_js_exec_counter[6836]++;
  k.destroy();
  tiny_mce_js_exec_counter[6835]++;
});
  if (c.isIE) 
  {
    tiny_mce_js_exec_counter[6837]++;
    k.onShowMenu.add(function() {
  tiny_mce_js_exec_counter[6838]++;
  tiny_mce_js_exec_counter[6840]++;
  j.focus();
  tiny_mce_js_exec_counter[6841]++;
  g = j.selection.getBookmark(1);
  tiny_mce_js_exec_counter[6839]++;
});
    tiny_mce_js_exec_counter[6842]++;
    k.onHideMenu.add(function() {
  tiny_mce_js_exec_counter[6843]++;
  if (g) 
  {
    tiny_mce_js_exec_counter[6845]++;
    j.selection.moveToBookmark(g);
    tiny_mce_js_exec_counter[6846]++;
    g = 0;
  }
  tiny_mce_js_exec_counter[6844]++;
});
  }
  tiny_mce_js_exec_counter[6847]++;
  return l.add(k);
}, createToolbar: function(k, h, j) {
  tiny_mce_js_exec_counter[6848]++;
  tiny_mce_js_exec_counter[6849]++;
  var i, g = this, f;
  tiny_mce_js_exec_counter[6851]++;
  k = g.prefix + k;
  tiny_mce_js_exec_counter[6852]++;
  f = j || g._cls.toolbar || c.ui.Toolbar;
  tiny_mce_js_exec_counter[6853]++;
  i = new f(k, h, g.editor);
  if (g.get(k)) 
  {
    tiny_mce_js_exec_counter[6854]++;
    return null;
  }
  tiny_mce_js_exec_counter[6855]++;
  return g.add(i);
}, createToolbarGroup: function(k, h, j) {
  tiny_mce_js_exec_counter[6856]++;
  tiny_mce_js_exec_counter[6857]++;
  var i, g = this, f;
  tiny_mce_js_exec_counter[6859]++;
  k = g.prefix + k;
  tiny_mce_js_exec_counter[6860]++;
  f = j || this._cls.toolbarGroup || c.ui.ToolbarGroup;
  tiny_mce_js_exec_counter[6861]++;
  i = new f(k, h, g.editor);
  if (g.get(k)) 
  {
    tiny_mce_js_exec_counter[6862]++;
    return null;
  }
  tiny_mce_js_exec_counter[6863]++;
  return g.add(i);
}, createSeparator: function(g) {
  tiny_mce_js_exec_counter[6864]++;
  tiny_mce_js_exec_counter[6865]++;
  var f = g || this._cls.separator || c.ui.Separator;
  tiny_mce_js_exec_counter[6867]++;
  return new f();
}, setControlType: function(g, f) {
  tiny_mce_js_exec_counter[6868]++;
  tiny_mce_js_exec_counter[6869]++;
  return this._cls[g.toLowerCase()] = f;
}, destroy: function() {
  tiny_mce_js_exec_counter[6870]++;
  tiny_mce_js_exec_counter[6872]++;
  d(this.controls, function(f) {
  tiny_mce_js_exec_counter[6873]++;
  tiny_mce_js_exec_counter[6875]++;
  f.destroy();
  tiny_mce_js_exec_counter[6874]++;
});
  tiny_mce_js_exec_counter[6876]++;
  this.controls = null;
  tiny_mce_js_exec_counter[6871]++;
}});
  tiny_mce_js_exec_counter[6655]++;
})(tinymce);
tiny_mce_js_exec_counter[6877]++;
(function(d) {
  tiny_mce_js_exec_counter[6878]++;
  tiny_mce_js_exec_counter[6880]++;
  var a = d.util.Dispatcher, e = d.each, c = d.isIE, b = d.isOpera;
  tiny_mce_js_exec_counter[6882]++;
  d.create("tinymce.WindowManager", {WindowManager: function(f) {
  tiny_mce_js_exec_counter[6883]++;
  tiny_mce_js_exec_counter[6885]++;
  var g = this;
  tiny_mce_js_exec_counter[6887]++;
  g.editor = f;
  tiny_mce_js_exec_counter[6888]++;
  g.onOpen = new a(g);
  tiny_mce_js_exec_counter[6889]++;
  g.onClose = new a(g);
  tiny_mce_js_exec_counter[6890]++;
  g.params = {};
  tiny_mce_js_exec_counter[6891]++;
  g.features = {};
  tiny_mce_js_exec_counter[6884]++;
}, open: function(z, h) {
  tiny_mce_js_exec_counter[6892]++;
  tiny_mce_js_exec_counter[6894]++;
  var v = this, k = "", n, m, i = v.editor.settings.dialog_type == "modal", q, o, j, g = d.DOM.getViewPort(), r;
  tiny_mce_js_exec_counter[6896]++;
  z = z || {};
  tiny_mce_js_exec_counter[6897]++;
  h = h || {};
  tiny_mce_js_exec_counter[6898]++;
  o = b ? g.w : screen.width;
  tiny_mce_js_exec_counter[6899]++;
  j = b ? g.h : screen.height;
  tiny_mce_js_exec_counter[6900]++;
  z.name = z.name || "mc_" + new Date().getTime();
  tiny_mce_js_exec_counter[6901]++;
  z.width = parseInt(z.width || 320);
  tiny_mce_js_exec_counter[6902]++;
  z.height = parseInt(z.height || 240);
  tiny_mce_js_exec_counter[6903]++;
  z.resizable = true;
  tiny_mce_js_exec_counter[6904]++;
  z.left = z.left || parseInt(o / 2) - (z.width / 2);
  tiny_mce_js_exec_counter[6905]++;
  z.top = z.top || parseInt(j / 2) - (z.height / 2);
  tiny_mce_js_exec_counter[6906]++;
  h.inline = false;
  tiny_mce_js_exec_counter[6907]++;
  h.mce_width = z.width;
  tiny_mce_js_exec_counter[6908]++;
  h.mce_height = z.height;
  tiny_mce_js_exec_counter[6909]++;
  h.mce_auto_focus = z.auto_focus;
  if (i) 
  {
    if (c) 
    {
      tiny_mce_js_exec_counter[6910]++;
      z.center = true;
      tiny_mce_js_exec_counter[6911]++;
      z.help = false;
      tiny_mce_js_exec_counter[6912]++;
      z.dialogWidth = z.width + "px";
      tiny_mce_js_exec_counter[6913]++;
      z.dialogHeight = z.height + "px";
      tiny_mce_js_exec_counter[6914]++;
      z.scroll = z.scrollbars || false;
    }
  }
  tiny_mce_js_exec_counter[6915]++;
  e(z, function(p, f) {
  tiny_mce_js_exec_counter[6916]++;
  if (d.is(p, "boolean")) 
  {
    tiny_mce_js_exec_counter[6918]++;
    p = p ? "yes" : "no";
  }
  if (!/^(name|url)$/.test(f)) 
  {
    if (c && i) 
    {
      tiny_mce_js_exec_counter[6919]++;
      k += (k ? ";" : "") + f + ":" + p;
    } else {
      tiny_mce_js_exec_counter[6920]++;
      k += (k ? "," : "") + f + "=" + p;
    }
  }
  tiny_mce_js_exec_counter[6917]++;
});
  tiny_mce_js_exec_counter[6921]++;
  v.features = z;
  tiny_mce_js_exec_counter[6922]++;
  v.params = h;
  tiny_mce_js_exec_counter[6923]++;
  v.onOpen.dispatch(v, z, h);
  tiny_mce_js_exec_counter[6924]++;
  r = z.url || z.file;
  tiny_mce_js_exec_counter[6925]++;
  r = d._addVer(r);
  try {
    if (c && i) 
    {
      tiny_mce_js_exec_counter[6926]++;
      q = 1;
      tiny_mce_js_exec_counter[6927]++;
      window.showModalDialog(r, window, k);
    } else {
      tiny_mce_js_exec_counter[6928]++;
      q = window.open(r, z.name, k);
    }
  }  catch (l) {
}
  if (!q) 
  {
    tiny_mce_js_exec_counter[6929]++;
    alert(v.editor.getLang("popup_blocked"));
  }
  tiny_mce_js_exec_counter[6893]++;
}, close: function(f) {
  tiny_mce_js_exec_counter[6930]++;
  tiny_mce_js_exec_counter[6932]++;
  f.close();
  tiny_mce_js_exec_counter[6933]++;
  this.onClose.dispatch(this);
  tiny_mce_js_exec_counter[6931]++;
}, createInstance: function(i, h, g, m, l, k) {
  tiny_mce_js_exec_counter[6934]++;
  tiny_mce_js_exec_counter[6935]++;
  var j = d.resolve(i);
  tiny_mce_js_exec_counter[6937]++;
  return new j(h, g, m, l, k);
}, confirm: function(h, f, i, g) {
  tiny_mce_js_exec_counter[6938]++;
  tiny_mce_js_exec_counter[6940]++;
  g = g || window;
  tiny_mce_js_exec_counter[6941]++;
  f.call(i || this, g.confirm(this._decode(this.editor.getLang(h, h))));
  tiny_mce_js_exec_counter[6939]++;
}, alert: function(h, f, j, g) {
  tiny_mce_js_exec_counter[6942]++;
  tiny_mce_js_exec_counter[6944]++;
  var i = this;
  tiny_mce_js_exec_counter[6946]++;
  g = g || window;
  tiny_mce_js_exec_counter[6947]++;
  g.alert(i._decode(i.editor.getLang(h, h)));
  if (f) 
  {
    tiny_mce_js_exec_counter[6948]++;
    f.call(j || i);
  }
  tiny_mce_js_exec_counter[6943]++;
}, resizeBy: function(f, g, h) {
  tiny_mce_js_exec_counter[6949]++;
  tiny_mce_js_exec_counter[6951]++;
  h.resizeBy(f, g);
  tiny_mce_js_exec_counter[6950]++;
}, _decode: function(f) {
  tiny_mce_js_exec_counter[6952]++;
  tiny_mce_js_exec_counter[6953]++;
  return d.DOM.decode(f).replace(/\\n/g, "\n");
}});
  tiny_mce_js_exec_counter[6879]++;
}(tinymce));
tiny_mce_js_exec_counter[6954]++;
(function(a) {
  tiny_mce_js_exec_counter[6955]++;
  tiny_mce_js_exec_counter[6957]++;
  a.Formatter = function(T) {
  tiny_mce_js_exec_counter[6958]++;
  tiny_mce_js_exec_counter[6960]++;
  var K = {}, M = a.each, c = T.dom, p = T.selection, s = a.dom.TreeWalker, I = new a.dom.RangeUtils(c), d = T.schema.isValidChild, E = c.isBlock, k = T.settings.forced_root_block, r = c.nodeIndex, D = "\ufeff", e = /^(src|href|style)$/, Q = false, A = true, o, N = {apply: [], remove: []};
  function y(U) {
    tiny_mce_js_exec_counter[6962]++;
    tiny_mce_js_exec_counter[6963]++;
    return U instanceof Array;
  }
  function l(V, U) {
    tiny_mce_js_exec_counter[6964]++;
    tiny_mce_js_exec_counter[6965]++;
    return c.getParents(V, U, c.getRoot());
  }
  function b(U) {
    tiny_mce_js_exec_counter[6966]++;
    tiny_mce_js_exec_counter[6967]++;
    return U.nodeType === 1 && (U.face === "mceinline" || U.style.fontFamily === "mceinline");
  }
  function P(U) {
    tiny_mce_js_exec_counter[6968]++;
    tiny_mce_js_exec_counter[6969]++;
    return U ? K[U] : K;
  }
  function j(U, V) {
    tiny_mce_js_exec_counter[6970]++;
    if (U) 
    {
      if (typeof (U) !== "string") 
      {
        tiny_mce_js_exec_counter[6972]++;
        M(U, function(X, W) {
  tiny_mce_js_exec_counter[6973]++;
  tiny_mce_js_exec_counter[6975]++;
  j(W, X);
  tiny_mce_js_exec_counter[6974]++;
});
      } else {
        tiny_mce_js_exec_counter[6976]++;
        V = V.length ? V : [V];
        tiny_mce_js_exec_counter[6977]++;
        M(V, function(W) {
  tiny_mce_js_exec_counter[6978]++;
  if (W.deep === o) 
  {
    tiny_mce_js_exec_counter[6980]++;
    W.deep = !W.selector;
  }
  if (W.split === o) 
  {
    tiny_mce_js_exec_counter[6981]++;
    W.split = !W.selector || W.inline;
  }
  if (W.remove === o && W.selector && !W.inline) 
  {
    tiny_mce_js_exec_counter[6982]++;
    W.remove = "none";
  }
  if (W.selector && W.inline) 
  {
    tiny_mce_js_exec_counter[6983]++;
    W.mixed = true;
    tiny_mce_js_exec_counter[6984]++;
    W.block_expand = true;
  }
  if (typeof (W.classes) === "string") 
  {
    tiny_mce_js_exec_counter[6985]++;
    W.classes = W.classes.split(/\s+/);
  }
  tiny_mce_js_exec_counter[6979]++;
});
        tiny_mce_js_exec_counter[6986]++;
        K[U] = V;
      }
    }
    tiny_mce_js_exec_counter[6971]++;
  }
  function R(W, ad, Y) {
    tiny_mce_js_exec_counter[6987]++;
    tiny_mce_js_exec_counter[6989]++;
    var Z = P(W), ae = Z[0], ac, V, ab, aa = p.isCollapsed();
    function X(ah) {
      tiny_mce_js_exec_counter[6991]++;
      tiny_mce_js_exec_counter[6992]++;
      var ag = ah.startContainer, ak = ah.startOffset, aj, ai;
      if (ag.nodeType == 1 || ag.nodeValue === "") 
      {
        tiny_mce_js_exec_counter[6994]++;
        ag = ag.nodeType == 1 ? ag.childNodes[ak] : ag;
        if (ag) 
        {
          tiny_mce_js_exec_counter[6995]++;
          aj = new s(ag, ag.parentNode);
          for (ai = aj.current(); ai; ai = aj.next()) 
            {
              if (ai.nodeType == 3 && !f(ai)) 
              {
                tiny_mce_js_exec_counter[6996]++;
                ah.setStart(ai, 0);
                tiny_mce_js_exec_counter[6997]++;
                break;
              }
            }
        }
      }
      tiny_mce_js_exec_counter[6998]++;
      return ah;
    }
    function U(ah, ag) {
      tiny_mce_js_exec_counter[6999]++;
      tiny_mce_js_exec_counter[7001]++;
      ag = ag || ae;
      if (ah) 
      {
        tiny_mce_js_exec_counter[7002]++;
        M(ag.styles, function(aj, ai) {
  tiny_mce_js_exec_counter[7003]++;
  tiny_mce_js_exec_counter[7005]++;
  c.setStyle(ah, ai, q(aj, ad));
  tiny_mce_js_exec_counter[7004]++;
});
        tiny_mce_js_exec_counter[7006]++;
        M(ag.attributes, function(aj, ai) {
  tiny_mce_js_exec_counter[7007]++;
  tiny_mce_js_exec_counter[7009]++;
  c.setAttrib(ah, ai, q(aj, ad));
  tiny_mce_js_exec_counter[7008]++;
});
        tiny_mce_js_exec_counter[7010]++;
        M(ag.classes, function(ai) {
  tiny_mce_js_exec_counter[7011]++;
  tiny_mce_js_exec_counter[7013]++;
  ai = q(ai, ad);
  if (!c.hasClass(ah, ai)) 
  {
    tiny_mce_js_exec_counter[7014]++;
    c.addClass(ah, ai);
  }
  tiny_mce_js_exec_counter[7012]++;
});
      }
      tiny_mce_js_exec_counter[7000]++;
    }
    function af(ah) {
      tiny_mce_js_exec_counter[7015]++;
      tiny_mce_js_exec_counter[7017]++;
      var ag = [], aj, ai;
      tiny_mce_js_exec_counter[7019]++;
      aj = ae.inline || ae.block;
      tiny_mce_js_exec_counter[7020]++;
      ai = c.create(aj);
      tiny_mce_js_exec_counter[7021]++;
      U(ai);
      tiny_mce_js_exec_counter[7022]++;
      I.walk(ah, function(ak) {
  tiny_mce_js_exec_counter[7023]++;
  tiny_mce_js_exec_counter[7025]++;
  var al;
  function am(an) {
    tiny_mce_js_exec_counter[7027]++;
    tiny_mce_js_exec_counter[7029]++;
    var aq = an.nodeName.toLowerCase(), ap = an.parentNode.nodeName.toLowerCase(), ao;
    if (g(aq, "br")) 
    {
      tiny_mce_js_exec_counter[7031]++;
      al = 0;
      if (ae.block) 
      {
        tiny_mce_js_exec_counter[7032]++;
        c.remove(an);
      }
      tiny_mce_js_exec_counter[7033]++;
      return;
    }
    if (ae.wrapper && v(an, W, ad)) 
    {
      tiny_mce_js_exec_counter[7034]++;
      al = 0;
      tiny_mce_js_exec_counter[7035]++;
      return;
    }
    if (ae.block && !ae.wrapper && F(aq)) 
    {
      tiny_mce_js_exec_counter[7036]++;
      an = c.rename(an, aj);
      tiny_mce_js_exec_counter[7037]++;
      U(an);
      tiny_mce_js_exec_counter[7038]++;
      ag.push(an);
      tiny_mce_js_exec_counter[7039]++;
      al = 0;
      tiny_mce_js_exec_counter[7040]++;
      return;
    }
    if (ae.selector) 
    {
      tiny_mce_js_exec_counter[7041]++;
      M(Z, function(ar) {
  tiny_mce_js_exec_counter[7042]++;
  if ("collapsed" in ar && ar.collapsed !== aa) 
  {
    tiny_mce_js_exec_counter[7044]++;
    return;
  }
  if (c.is(an, ar.selector) && !b(an)) 
  {
    tiny_mce_js_exec_counter[7045]++;
    U(an, ar);
    tiny_mce_js_exec_counter[7046]++;
    ao = true;
  }
  tiny_mce_js_exec_counter[7043]++;
});
      if (!ae.inline || ao) 
      {
        tiny_mce_js_exec_counter[7047]++;
        al = 0;
        tiny_mce_js_exec_counter[7048]++;
        return;
      }
    }
    if (d(aj, aq) && d(ap, aj) && !(an.nodeType === 3 && an.nodeValue.length === 1 && an.nodeValue.charCodeAt(0) === 65279)) 
    {
      if (!al) 
      {
        tiny_mce_js_exec_counter[7049]++;
        al = ai.cloneNode(Q);
        tiny_mce_js_exec_counter[7050]++;
        an.parentNode.insertBefore(al, an);
        tiny_mce_js_exec_counter[7051]++;
        ag.push(al);
      }
      tiny_mce_js_exec_counter[7052]++;
      al.appendChild(an);
    } else {
      tiny_mce_js_exec_counter[7053]++;
      al = 0;
      tiny_mce_js_exec_counter[7054]++;
      M(a.grep(an.childNodes), am);
      tiny_mce_js_exec_counter[7055]++;
      al = 0;
    }
    tiny_mce_js_exec_counter[7028]++;
  }
  tiny_mce_js_exec_counter[7056]++;
  M(ak, am);
  tiny_mce_js_exec_counter[7024]++;
});
      if (ae.wrap_links === false) 
      {
        tiny_mce_js_exec_counter[7057]++;
        M(ag, function(ak) {
  tiny_mce_js_exec_counter[7058]++;
  function al(ap) {
    tiny_mce_js_exec_counter[7060]++;
    tiny_mce_js_exec_counter[7062]++;
    var ao, an, am;
    if (ap.nodeName === "A") 
    {
      tiny_mce_js_exec_counter[7064]++;
      an = ai.cloneNode(Q);
      tiny_mce_js_exec_counter[7065]++;
      ag.push(an);
      tiny_mce_js_exec_counter[7066]++;
      am = a.grep(ap.childNodes);
      for (ao = 0; ao < am.length; ao++) 
        {
          tiny_mce_js_exec_counter[7067]++;
          an.appendChild(am[ao]);
        }
      tiny_mce_js_exec_counter[7068]++;
      ap.appendChild(an);
    }
    tiny_mce_js_exec_counter[7069]++;
    M(a.grep(ap.childNodes), al);
    tiny_mce_js_exec_counter[7061]++;
  }
  tiny_mce_js_exec_counter[7070]++;
  al(ak);
  tiny_mce_js_exec_counter[7059]++;
});
      }
      tiny_mce_js_exec_counter[7071]++;
      M(ag, function(am) {
  tiny_mce_js_exec_counter[7072]++;
  tiny_mce_js_exec_counter[7074]++;
  var ak;
  function an(ap) {
    tiny_mce_js_exec_counter[7076]++;
    tiny_mce_js_exec_counter[7077]++;
    var ao = 0;
    tiny_mce_js_exec_counter[7079]++;
    M(ap.childNodes, function(aq) {
  tiny_mce_js_exec_counter[7080]++;
  if (!f(aq) && !G(aq)) 
  {
    tiny_mce_js_exec_counter[7082]++;
    ao++;
  }
  tiny_mce_js_exec_counter[7081]++;
});
    tiny_mce_js_exec_counter[7083]++;
    return ao;
  }
  function al(ao) {
    tiny_mce_js_exec_counter[7084]++;
    tiny_mce_js_exec_counter[7085]++;
    var aq, ap;
    tiny_mce_js_exec_counter[7087]++;
    M(ao.childNodes, function(ar) {
  tiny_mce_js_exec_counter[7088]++;
  if (ar.nodeType == 1 && !G(ar) && !b(ar)) 
  {
    tiny_mce_js_exec_counter[7090]++;
    aq = ar;
    tiny_mce_js_exec_counter[7091]++;
    return Q;
  }
  tiny_mce_js_exec_counter[7089]++;
});
    if (aq && h(aq, ae)) 
    {
      tiny_mce_js_exec_counter[7092]++;
      ap = aq.cloneNode(Q);
      tiny_mce_js_exec_counter[7093]++;
      U(ap);
      tiny_mce_js_exec_counter[7094]++;
      c.replace(ap, ao, A);
      tiny_mce_js_exec_counter[7095]++;
      c.remove(aq, 1);
    }
    tiny_mce_js_exec_counter[7096]++;
    return ap || ao;
  }
  tiny_mce_js_exec_counter[7097]++;
  ak = an(am);
  if ((ag.length > 1 || !E(am)) && ak === 0) 
  {
    tiny_mce_js_exec_counter[7098]++;
    c.remove(am, 1);
    tiny_mce_js_exec_counter[7099]++;
    return;
  }
  if (ae.inline || ae.wrapper) 
  {
    if (!ae.exact && ak === 1) 
    {
      tiny_mce_js_exec_counter[7100]++;
      am = al(am);
    }
    tiny_mce_js_exec_counter[7101]++;
    M(Z, function(ao) {
  tiny_mce_js_exec_counter[7102]++;
  tiny_mce_js_exec_counter[7104]++;
  M(c.select(ao.inline, am), function(aq) {
  tiny_mce_js_exec_counter[7105]++;
  tiny_mce_js_exec_counter[7107]++;
  var ap;
  if (ao.wrap_links === false) 
  {
    tiny_mce_js_exec_counter[7109]++;
    ap = aq.parentNode;
do {
      if (ap.nodeName === "A") 
      {
        tiny_mce_js_exec_counter[7110]++;
        return;
      }
    } while (ap = ap.parentNode);
  }
  tiny_mce_js_exec_counter[7111]++;
  S(ao, ad, aq, ao.exact ? aq : null);
  tiny_mce_js_exec_counter[7106]++;
});
  tiny_mce_js_exec_counter[7103]++;
});
    if (v(am.parentNode, W, ad)) 
    {
      tiny_mce_js_exec_counter[7112]++;
      c.remove(am, 1);
      tiny_mce_js_exec_counter[7113]++;
      am = 0;
      tiny_mce_js_exec_counter[7114]++;
      return A;
    }
    if (ae.merge_with_parents) 
    {
      tiny_mce_js_exec_counter[7115]++;
      c.getParent(am.parentNode, function(ao) {
  tiny_mce_js_exec_counter[7116]++;
  if (v(ao, W, ad)) 
  {
    tiny_mce_js_exec_counter[7118]++;
    c.remove(am, 1);
    tiny_mce_js_exec_counter[7119]++;
    am = 0;
    tiny_mce_js_exec_counter[7120]++;
    return A;
  }
  tiny_mce_js_exec_counter[7117]++;
});
    }
    if (am) 
    {
      tiny_mce_js_exec_counter[7121]++;
      am = t(B(am), am);
      tiny_mce_js_exec_counter[7122]++;
      am = t(am, B(am, A));
    }
  }
  tiny_mce_js_exec_counter[7073]++;
});
      tiny_mce_js_exec_counter[7016]++;
    }
    if (ae) 
    {
      if (Y) 
      {
        tiny_mce_js_exec_counter[7123]++;
        V = c.createRng();
        tiny_mce_js_exec_counter[7124]++;
        V.setStartBefore(Y);
        tiny_mce_js_exec_counter[7125]++;
        V.setEndAfter(Y);
        tiny_mce_js_exec_counter[7126]++;
        af(n(V, Z));
      } else {
        if (!aa || !ae.inline || c.select("td.mceSelected,th.mceSelected").length) 
        {
          tiny_mce_js_exec_counter[7127]++;
          ac = p.getBookmark();
          tiny_mce_js_exec_counter[7128]++;
          af(n(p.getRng(A), Z));
          tiny_mce_js_exec_counter[7129]++;
          p.moveToBookmark(ac);
          tiny_mce_js_exec_counter[7130]++;
          p.setRng(X(p.getRng(A)));
          tiny_mce_js_exec_counter[7131]++;
          T.nodeChanged();
        } else {
          tiny_mce_js_exec_counter[7132]++;
          O("apply", W, ad);
        }
      }
    }
    tiny_mce_js_exec_counter[6988]++;
  }
  function z(W, af, Z) {
    tiny_mce_js_exec_counter[7133]++;
    tiny_mce_js_exec_counter[7135]++;
    var aa = P(W), ah = aa[0], ae, ad, V;
    function Y(ak) {
      tiny_mce_js_exec_counter[7137]++;
      tiny_mce_js_exec_counter[7139]++;
      var aj = ak.startContainer, ap = ak.startOffset, ao, an, al, am;
      if (aj.nodeType == 3 && ap >= aj.nodeValue.length - 1) 
      {
        tiny_mce_js_exec_counter[7141]++;
        aj = aj.parentNode;
        tiny_mce_js_exec_counter[7142]++;
        ap = r(aj) + 1;
      }
      if (aj.nodeType == 1) 
      {
        tiny_mce_js_exec_counter[7143]++;
        al = aj.childNodes;
        tiny_mce_js_exec_counter[7144]++;
        aj = al[Math.min(ap, al.length - 1)];
        tiny_mce_js_exec_counter[7145]++;
        ao = new s(aj);
        if (ap > al.length - 1) 
        {
          tiny_mce_js_exec_counter[7146]++;
          ao.next();
        }
        for (an = ao.current(); an; an = ao.next()) 
          {
            if (an.nodeType == 3 && !f(an)) 
            {
              tiny_mce_js_exec_counter[7147]++;
              am = c.create("a", null, D);
              tiny_mce_js_exec_counter[7148]++;
              an.parentNode.insertBefore(am, an);
              tiny_mce_js_exec_counter[7149]++;
              ak.setStart(an, 0);
              tiny_mce_js_exec_counter[7150]++;
              p.setRng(ak);
              tiny_mce_js_exec_counter[7151]++;
              c.remove(am);
              tiny_mce_js_exec_counter[7152]++;
              return;
            }
          }
      }
      tiny_mce_js_exec_counter[7138]++;
    }
    function X(am) {
      tiny_mce_js_exec_counter[7153]++;
      tiny_mce_js_exec_counter[7155]++;
      var al, ak, aj;
      tiny_mce_js_exec_counter[7157]++;
      al = a.grep(am.childNodes);
      for (ak = 0 , aj = aa.length; ak < aj; ak++) 
        {
          if (S(aa[ak], af, am, am)) 
          {
            tiny_mce_js_exec_counter[7158]++;
            break;
          }
        }
      if (ah.deep) 
      {
        for (ak = 0 , aj = al.length; ak < aj; ak++) 
          {
            tiny_mce_js_exec_counter[7159]++;
            X(al[ak]);
          }
      }
      tiny_mce_js_exec_counter[7154]++;
    }
    function ab(aj) {
      tiny_mce_js_exec_counter[7160]++;
      tiny_mce_js_exec_counter[7161]++;
      var ak;
      tiny_mce_js_exec_counter[7163]++;
      M(l(aj.parentNode).reverse(), function(al) {
  tiny_mce_js_exec_counter[7164]++;
  tiny_mce_js_exec_counter[7166]++;
  var am;
  if (!ak && al.id != "_start" && al.id != "_end") 
  {
    tiny_mce_js_exec_counter[7168]++;
    am = v(al, W, af);
    if (am && am.split !== false) 
    {
      tiny_mce_js_exec_counter[7169]++;
      ak = al;
    }
  }
  tiny_mce_js_exec_counter[7165]++;
});
      tiny_mce_js_exec_counter[7170]++;
      return ak;
    }
    function U(am, aj, ao, ar) {
      tiny_mce_js_exec_counter[7171]++;
      tiny_mce_js_exec_counter[7172]++;
      var at, aq, ap, al, an, ak;
      if (am) 
      {
        tiny_mce_js_exec_counter[7174]++;
        ak = am.parentNode;
        for (at = aj.parentNode; at && at != ak; at = at.parentNode) 
          {
            tiny_mce_js_exec_counter[7175]++;
            aq = at.cloneNode(Q);
            for (an = 0; an < aa.length; an++) 
              {
                if (S(aa[an], af, aq, aq)) 
                {
                  tiny_mce_js_exec_counter[7176]++;
                  aq = 0;
                  tiny_mce_js_exec_counter[7177]++;
                  break;
                }
              }
            if (aq) 
            {
              if (ap) 
              {
                tiny_mce_js_exec_counter[7178]++;
                aq.appendChild(ap);
              }
              if (!al) 
              {
                tiny_mce_js_exec_counter[7179]++;
                al = aq;
              }
              tiny_mce_js_exec_counter[7180]++;
              ap = aq;
            }
          }
        if (ar && (!ah.mixed || !E(am))) 
        {
          tiny_mce_js_exec_counter[7181]++;
          aj = c.split(am, aj);
        }
        if (ap) 
        {
          tiny_mce_js_exec_counter[7182]++;
          ao.parentNode.insertBefore(ap, ao);
          tiny_mce_js_exec_counter[7183]++;
          al.appendChild(ao);
        }
      }
      tiny_mce_js_exec_counter[7184]++;
      return aj;
    }
    function ag(aj) {
      tiny_mce_js_exec_counter[7185]++;
      tiny_mce_js_exec_counter[7186]++;
      return U(ab(aj), aj, aj, true);
    }
    function ac(al) {
      tiny_mce_js_exec_counter[7187]++;
      tiny_mce_js_exec_counter[7188]++;
      var ak = c.get(al ? "_start" : "_end"), aj = ak[al ? "firstChild" : "lastChild"];
      if (G(aj)) 
      {
        tiny_mce_js_exec_counter[7190]++;
        aj = aj[al ? "firstChild" : "lastChild"];
      }
      tiny_mce_js_exec_counter[7191]++;
      c.remove(ak, true);
      tiny_mce_js_exec_counter[7192]++;
      return aj;
    }
    function ai(aj) {
      tiny_mce_js_exec_counter[7193]++;
      tiny_mce_js_exec_counter[7195]++;
      var ak, al;
      tiny_mce_js_exec_counter[7197]++;
      aj = n(aj, aa, A);
      if (ah.split) 
      {
        tiny_mce_js_exec_counter[7198]++;
        ak = H(aj, A);
        tiny_mce_js_exec_counter[7199]++;
        al = H(aj);
        if (ak != al) 
        {
          tiny_mce_js_exec_counter[7200]++;
          ak = L(ak, "span", {id: "_start", "data-mce-type": "bookmark"});
          tiny_mce_js_exec_counter[7201]++;
          al = L(al, "span", {id: "_end", "data-mce-type": "bookmark"});
          tiny_mce_js_exec_counter[7202]++;
          ag(ak);
          tiny_mce_js_exec_counter[7203]++;
          ag(al);
          tiny_mce_js_exec_counter[7204]++;
          ak = ac(A);
          tiny_mce_js_exec_counter[7205]++;
          al = ac();
        } else {
          tiny_mce_js_exec_counter[7206]++;
          ak = al = ag(ak);
        }
        tiny_mce_js_exec_counter[7207]++;
        aj.startContainer = ak.parentNode;
        tiny_mce_js_exec_counter[7208]++;
        aj.startOffset = r(ak);
        tiny_mce_js_exec_counter[7209]++;
        aj.endContainer = al.parentNode;
        tiny_mce_js_exec_counter[7210]++;
        aj.endOffset = r(al) + 1;
      }
      tiny_mce_js_exec_counter[7211]++;
      I.walk(aj, function(am) {
  tiny_mce_js_exec_counter[7212]++;
  tiny_mce_js_exec_counter[7214]++;
  M(am, function(an) {
  tiny_mce_js_exec_counter[7215]++;
  tiny_mce_js_exec_counter[7217]++;
  X(an);
  tiny_mce_js_exec_counter[7216]++;
});
  tiny_mce_js_exec_counter[7213]++;
});
      tiny_mce_js_exec_counter[7194]++;
    }
    if (Z) 
    {
      tiny_mce_js_exec_counter[7218]++;
      V = c.createRng();
      tiny_mce_js_exec_counter[7219]++;
      V.setStartBefore(Z);
      tiny_mce_js_exec_counter[7220]++;
      V.setEndAfter(Z);
      tiny_mce_js_exec_counter[7221]++;
      ai(V);
      tiny_mce_js_exec_counter[7222]++;
      return;
    }
    if (!p.isCollapsed() || !ah.inline || c.select("td.mceSelected,th.mceSelected").length) 
    {
      tiny_mce_js_exec_counter[7223]++;
      ae = p.getBookmark();
      tiny_mce_js_exec_counter[7224]++;
      ai(p.getRng(A));
      tiny_mce_js_exec_counter[7225]++;
      p.moveToBookmark(ae);
      if (i(W, af, p.getStart())) 
      {
        tiny_mce_js_exec_counter[7226]++;
        Y(p.getRng(true));
      }
      tiny_mce_js_exec_counter[7227]++;
      T.nodeChanged();
    } else {
      tiny_mce_js_exec_counter[7228]++;
      O("remove", W, af);
    }
    tiny_mce_js_exec_counter[7134]++;
  }
  function C(U, W, V) {
    tiny_mce_js_exec_counter[7229]++;
    if (i(U, W, V)) 
    {
      tiny_mce_js_exec_counter[7231]++;
      z(U, W, V);
    } else {
      tiny_mce_js_exec_counter[7232]++;
      R(U, W, V);
    }
    tiny_mce_js_exec_counter[7230]++;
  }
  function v(V, U, aa, Y) {
    tiny_mce_js_exec_counter[7233]++;
    tiny_mce_js_exec_counter[7235]++;
    var W = P(U), ab, Z, X;
    function ac(ag, ai, aj) {
      tiny_mce_js_exec_counter[7237]++;
      tiny_mce_js_exec_counter[7238]++;
      var af, ah, ad = ai[aj], ae;
      if (ad) 
      {
        if (ad.length === o) 
        {
          for (af in ad) 
            {
              if (ad.hasOwnProperty(af)) 
              {
                if (aj === "attributes") 
                {
                  tiny_mce_js_exec_counter[7240]++;
                  ah = c.getAttrib(ag, af);
                } else {
                  tiny_mce_js_exec_counter[7241]++;
                  ah = J(ag, af);
                }
                if (Y && !ah && !ai.exact) 
                {
                  tiny_mce_js_exec_counter[7242]++;
                  return;
                }
                if ((!Y || ai.exact) && !g(ah, q(ad[af], aa))) 
                {
                  tiny_mce_js_exec_counter[7243]++;
                  return;
                }
              }
            }
        } else {
          for (ae = 0; ae < ad.length; ae++) 
            {
              if (aj === "attributes" ? c.getAttrib(ag, ad[ae]) : J(ag, ad[ae])) 
              {
                tiny_mce_js_exec_counter[7244]++;
                return ai;
              }
            }
        }
      }
      tiny_mce_js_exec_counter[7245]++;
      return ai;
    }
    if (W && V) 
    {
      for (Z = 0; Z < W.length; Z++) 
        {
          tiny_mce_js_exec_counter[7246]++;
          ab = W[Z];
          if (h(V, ab) && ac(V, ab, "attributes") && ac(V, ab, "styles")) 
          {
            if (X = ab.classes) 
            {
              for (Z = 0; Z < X.length; Z++) 
                {
                  if (!c.hasClass(V, X[Z])) 
                  {
                    tiny_mce_js_exec_counter[7247]++;
                    return;
                  }
                }
            }
            tiny_mce_js_exec_counter[7248]++;
            return ab;
          }
        }
    }
    tiny_mce_js_exec_counter[7234]++;
  }
  function i(W, Z, Y) {
    tiny_mce_js_exec_counter[7249]++;
    tiny_mce_js_exec_counter[7250]++;
    var V, X;
    function U(aa) {
      tiny_mce_js_exec_counter[7252]++;
      tiny_mce_js_exec_counter[7253]++;
      aa = c.getParent(aa, function(ab) {
  tiny_mce_js_exec_counter[7254]++;
  tiny_mce_js_exec_counter[7255]++;
  return !!v(ab, W, Z, true);
});
      tiny_mce_js_exec_counter[7256]++;
      return v(aa, W, Z);
    }
    if (Y) 
    {
      tiny_mce_js_exec_counter[7257]++;
      return U(Y);
    }
    if (p.isCollapsed()) 
    {
      for (X = N.apply.length - 1; X >= 0; X--) 
        {
          if (N.apply[X].name == W) 
          {
            tiny_mce_js_exec_counter[7258]++;
            return true;
          }
        }
      for (X = N.remove.length - 1; X >= 0; X--) 
        {
          if (N.remove[X].name == W) 
          {
            tiny_mce_js_exec_counter[7259]++;
            return false;
          }
        }
      tiny_mce_js_exec_counter[7260]++;
      return U(p.getNode());
    }
    tiny_mce_js_exec_counter[7261]++;
    Y = p.getNode();
    if (U(Y)) 
    {
      tiny_mce_js_exec_counter[7262]++;
      return A;
    }
    tiny_mce_js_exec_counter[7263]++;
    V = p.getStart();
    if (V != Y) 
    {
      if (U(V)) 
      {
        tiny_mce_js_exec_counter[7264]++;
        return A;
      }
    }
    tiny_mce_js_exec_counter[7265]++;
    return Q;
  }
  function u(ab, aa) {
    tiny_mce_js_exec_counter[7266]++;
    tiny_mce_js_exec_counter[7267]++;
    var Y, Z = [], X = {}, W, V, U;
    if (p.isCollapsed()) 
    {
      for (V = 0; V < ab.length; V++) 
        {
          for (W = N.remove.length - 1; W >= 0; W--) 
            {
              tiny_mce_js_exec_counter[7269]++;
              U = ab[V];
              if (N.remove[W].name == U) 
              {
                tiny_mce_js_exec_counter[7270]++;
                X[U] = true;
                tiny_mce_js_exec_counter[7271]++;
                break;
              }
            }
        }
      for (W = N.apply.length - 1; W >= 0; W--) 
        {
          for (V = 0; V < ab.length; V++) 
            {
              tiny_mce_js_exec_counter[7272]++;
              U = ab[V];
              if (!X[U] && N.apply[W].name == U) 
              {
                tiny_mce_js_exec_counter[7273]++;
                X[U] = true;
                tiny_mce_js_exec_counter[7274]++;
                Z.push(U);
              }
            }
        }
    }
    tiny_mce_js_exec_counter[7275]++;
    Y = p.getStart();
    tiny_mce_js_exec_counter[7276]++;
    c.getParent(Y, function(ae) {
  tiny_mce_js_exec_counter[7277]++;
  tiny_mce_js_exec_counter[7279]++;
  var ad, ac;
  for (ad = 0; ad < ab.length; ad++) 
    {
      tiny_mce_js_exec_counter[7281]++;
      ac = ab[ad];
      if (!X[ac] && v(ae, ac, aa)) 
      {
        tiny_mce_js_exec_counter[7282]++;
        X[ac] = true;
        tiny_mce_js_exec_counter[7283]++;
        Z.push(ac);
      }
    }
  tiny_mce_js_exec_counter[7278]++;
});
    tiny_mce_js_exec_counter[7284]++;
    return Z;
  }
  function x(Y) {
    tiny_mce_js_exec_counter[7285]++;
    tiny_mce_js_exec_counter[7286]++;
    var aa = P(Y), X, W, Z, V, U;
    if (aa) 
    {
      tiny_mce_js_exec_counter[7288]++;
      X = p.getStart();
      tiny_mce_js_exec_counter[7289]++;
      W = l(X);
      for (V = aa.length - 1; V >= 0; V--) 
        {
          tiny_mce_js_exec_counter[7290]++;
          U = aa[V].selector;
          if (!U) 
          {
            tiny_mce_js_exec_counter[7291]++;
            return A;
          }
          for (Z = W.length - 1; Z >= 0; Z--) 
            {
              if (c.is(W[Z], U)) 
              {
                tiny_mce_js_exec_counter[7292]++;
                return A;
              }
            }
        }
    }
    tiny_mce_js_exec_counter[7293]++;
    return Q;
  }
  tiny_mce_js_exec_counter[7294]++;
  a.extend(this, {get: P, register: j, apply: R, remove: z, toggle: C, match: i, matchAll: u, matchNode: v, canApply: x});
  function h(U, V) {
    tiny_mce_js_exec_counter[7295]++;
    if (g(U, V.inline)) 
    {
      tiny_mce_js_exec_counter[7297]++;
      return A;
    }
    if (g(U, V.block)) 
    {
      tiny_mce_js_exec_counter[7298]++;
      return A;
    }
    if (V.selector) 
    {
      tiny_mce_js_exec_counter[7299]++;
      return c.is(U, V.selector);
    }
    tiny_mce_js_exec_counter[7296]++;
  }
  function g(V, U) {
    tiny_mce_js_exec_counter[7300]++;
    tiny_mce_js_exec_counter[7301]++;
    V = V || "";
    tiny_mce_js_exec_counter[7302]++;
    U = U || "";
    tiny_mce_js_exec_counter[7303]++;
    V = "" + (V.nodeName || V);
    tiny_mce_js_exec_counter[7304]++;
    U = "" + (U.nodeName || U);
    tiny_mce_js_exec_counter[7305]++;
    return V.toLowerCase() == U.toLowerCase();
  }
  function J(V, U) {
    tiny_mce_js_exec_counter[7306]++;
    tiny_mce_js_exec_counter[7307]++;
    var W = c.getStyle(V, U);
    if (U == "color" || U == "backgroundColor") 
    {
      tiny_mce_js_exec_counter[7309]++;
      W = c.toHex(W);
    }
    if (U == "fontWeight" && W == 700) 
    {
      tiny_mce_js_exec_counter[7310]++;
      W = "bold";
    }
    tiny_mce_js_exec_counter[7311]++;
    return "" + W;
  }
  function q(U, V) {
    tiny_mce_js_exec_counter[7312]++;
    if (typeof (U) != "string") 
    {
      tiny_mce_js_exec_counter[7313]++;
      U = U(V);
    } else {
      if (V) 
      {
        tiny_mce_js_exec_counter[7314]++;
        U = U.replace(/%(\w+)/g, function(X, W) {
  tiny_mce_js_exec_counter[7315]++;
  tiny_mce_js_exec_counter[7316]++;
  return V[W] || X;
});
      }
    }
    tiny_mce_js_exec_counter[7317]++;
    return U;
  }
  function f(U) {
    tiny_mce_js_exec_counter[7318]++;
    tiny_mce_js_exec_counter[7319]++;
    return U && U.nodeType === 3 && /^([\s\r\n]+|)$/.test(U.nodeValue);
  }
  function L(W, V, U) {
    tiny_mce_js_exec_counter[7320]++;
    tiny_mce_js_exec_counter[7321]++;
    var X = c.create(V, U);
    tiny_mce_js_exec_counter[7323]++;
    W.parentNode.insertBefore(X, W);
    tiny_mce_js_exec_counter[7324]++;
    X.appendChild(W);
    tiny_mce_js_exec_counter[7325]++;
    return X;
  }
  function n(U, ac, X) {
    tiny_mce_js_exec_counter[7326]++;
    tiny_mce_js_exec_counter[7327]++;
    var W = U.startContainer, Z = U.startOffset, af = U.endContainer, aa = U.endOffset, ae, ab;
    function ad(ai, aj, ag, ah) {
      tiny_mce_js_exec_counter[7329]++;
      tiny_mce_js_exec_counter[7330]++;
      var ak, al;
      tiny_mce_js_exec_counter[7332]++;
      ah = ah || c.getRoot();
      for (; ; ) 
        {
          tiny_mce_js_exec_counter[7333]++;
          ak = ai.parentNode;
          if (ak == ah || (!ac[0].block_expand && E(ak))) 
          {
            tiny_mce_js_exec_counter[7334]++;
            return ai;
          }
          for (ae = ak[aj]; ae && ae != ai; ae = ae[ag]) 
            {
              if (ae.nodeType == 1 && !G(ae)) 
              {
                tiny_mce_js_exec_counter[7335]++;
                return ai;
              }
              if (ae.nodeType == 3 && !f(ae)) 
              {
                tiny_mce_js_exec_counter[7336]++;
                return ai;
              }
            }
          tiny_mce_js_exec_counter[7337]++;
          ai = ai.parentNode;
        }
      tiny_mce_js_exec_counter[7338]++;
      return ai;
    }
    if (W.nodeType == 1 && W.hasChildNodes()) 
    {
      tiny_mce_js_exec_counter[7339]++;
      ab = W.childNodes.length - 1;
      tiny_mce_js_exec_counter[7340]++;
      W = W.childNodes[Z > ab ? ab : Z];
      if (W.nodeType == 3) 
      {
        tiny_mce_js_exec_counter[7341]++;
        Z = 0;
      }
    }
    if (af.nodeType == 1 && af.hasChildNodes()) 
    {
      tiny_mce_js_exec_counter[7342]++;
      ab = af.childNodes.length - 1;
      tiny_mce_js_exec_counter[7343]++;
      af = af.childNodes[aa > ab ? ab : aa - 1];
      if (af.nodeType == 3) 
      {
        tiny_mce_js_exec_counter[7344]++;
        aa = af.nodeValue.length;
      }
    }
    if (G(W.parentNode)) 
    {
      tiny_mce_js_exec_counter[7345]++;
      W = W.parentNode;
    }
    if (G(W)) 
    {
      tiny_mce_js_exec_counter[7346]++;
      W = W.nextSibling || W;
    }
    if (G(af.parentNode)) 
    {
      tiny_mce_js_exec_counter[7347]++;
      af = af.parentNode;
    }
    if (G(af)) 
    {
      tiny_mce_js_exec_counter[7348]++;
      af = af.previousSibling || af;
    }
    if (ac[0].inline || ac[0].block_expand) 
    {
      tiny_mce_js_exec_counter[7349]++;
      W = ad(W, "firstChild", "nextSibling");
      tiny_mce_js_exec_counter[7350]++;
      af = ad(af, "lastChild", "previousSibling");
    }
    if (ac[0].selector && ac[0].expand !== Q && !ac[0].inline) 
    {
      function Y(ah, ag) {
        tiny_mce_js_exec_counter[7351]++;
        tiny_mce_js_exec_counter[7352]++;
        var ai, aj, al, ak;
        if (ah.nodeType == 3 && ah.nodeValue.length == 0 && ah[ag]) 
        {
          tiny_mce_js_exec_counter[7354]++;
          ah = ah[ag];
        }
        tiny_mce_js_exec_counter[7355]++;
        ai = l(ah);
        for (aj = 0; aj < ai.length; aj++) 
          {
            for (al = 0; al < ac.length; al++) 
              {
                tiny_mce_js_exec_counter[7356]++;
                ak = ac[al];
                if ("collapsed" in ak && ak.collapsed !== U.collapsed) 
                {
                  tiny_mce_js_exec_counter[7357]++;
                  continue;
                }
                if (c.is(ai[aj], ak.selector)) 
                {
                  tiny_mce_js_exec_counter[7358]++;
                  return ai[aj];
                }
              }
          }
        tiny_mce_js_exec_counter[7359]++;
        return ah;
      }      tiny_mce_js_exec_counter[7360]++;
      W = Y(W, "previousSibling");
      tiny_mce_js_exec_counter[7361]++;
      af = Y(af, "nextSibling");
    }
    if (ac[0].block || ac[0].selector) 
    {
      function V(ah, ag, aj) {
        tiny_mce_js_exec_counter[7362]++;
        tiny_mce_js_exec_counter[7363]++;
        var ai;
        if (!ac[0].wrapper) 
        {
          tiny_mce_js_exec_counter[7365]++;
          ai = c.getParent(ah, ac[0].block);
        }
        if (!ai) 
        {
          tiny_mce_js_exec_counter[7366]++;
          ai = c.getParent(ah.nodeType == 3 ? ah.parentNode : ah, E);
        }
        if (ai && ac[0].wrapper) 
        {
          tiny_mce_js_exec_counter[7367]++;
          ai = l(ai, "ul,ol").reverse()[0] || ai;
        }
        if (!ai) 
        {
          tiny_mce_js_exec_counter[7368]++;
          ai = ah;
          while (ai[ag] && !E(ai[ag])) 
            {
              tiny_mce_js_exec_counter[7369]++;
              ai = ai[ag];
              if (g(ai, "br")) 
              {
                tiny_mce_js_exec_counter[7370]++;
                break;
              }
            }
        }
        tiny_mce_js_exec_counter[7371]++;
        return ai || ah;
      }      tiny_mce_js_exec_counter[7372]++;
      W = V(W, "previousSibling");
      tiny_mce_js_exec_counter[7373]++;
      af = V(af, "nextSibling");
      if (ac[0].block) 
      {
        if (!E(W)) 
        {
          tiny_mce_js_exec_counter[7374]++;
          W = ad(W, "firstChild", "nextSibling");
        }
        if (!E(af)) 
        {
          tiny_mce_js_exec_counter[7375]++;
          af = ad(af, "lastChild", "previousSibling");
        }
      }
    }
    if (W.nodeType == 1) 
    {
      tiny_mce_js_exec_counter[7376]++;
      Z = r(W);
      tiny_mce_js_exec_counter[7377]++;
      W = W.parentNode;
    }
    if (af.nodeType == 1) 
    {
      tiny_mce_js_exec_counter[7378]++;
      aa = r(af) + 1;
      tiny_mce_js_exec_counter[7379]++;
      af = af.parentNode;
    }
    tiny_mce_js_exec_counter[7380]++;
    return {startContainer: W, startOffset: Z, endContainer: af, endOffset: aa};
  }
  function S(aa, Z, X, U) {
    tiny_mce_js_exec_counter[7381]++;
    tiny_mce_js_exec_counter[7383]++;
    var W, V, Y;
    if (!h(X, aa)) 
    {
      tiny_mce_js_exec_counter[7385]++;
      return Q;
    }
    if (aa.remove != "all") 
    {
      tiny_mce_js_exec_counter[7386]++;
      M(aa.styles, function(ac, ab) {
  tiny_mce_js_exec_counter[7387]++;
  tiny_mce_js_exec_counter[7389]++;
  ac = q(ac, Z);
  if (typeof (ab) === "number") 
  {
    tiny_mce_js_exec_counter[7390]++;
    ab = ac;
    tiny_mce_js_exec_counter[7391]++;
    U = 0;
  }
  if (!U || g(J(U, ab), ac)) 
  {
    tiny_mce_js_exec_counter[7392]++;
    c.setStyle(X, ab, "");
  }
  tiny_mce_js_exec_counter[7393]++;
  Y = 1;
  tiny_mce_js_exec_counter[7388]++;
});
      if (Y && c.getAttrib(X, "style") == "") 
      {
        tiny_mce_js_exec_counter[7394]++;
        X.removeAttribute("style");
        tiny_mce_js_exec_counter[7395]++;
        X.removeAttribute("data-mce-style");
      }
      tiny_mce_js_exec_counter[7396]++;
      M(aa.attributes, function(ad, ab) {
  tiny_mce_js_exec_counter[7397]++;
  tiny_mce_js_exec_counter[7399]++;
  var ac;
  tiny_mce_js_exec_counter[7401]++;
  ad = q(ad, Z);
  if (typeof (ab) === "number") 
  {
    tiny_mce_js_exec_counter[7402]++;
    ab = ad;
    tiny_mce_js_exec_counter[7403]++;
    U = 0;
  }
  if (!U || g(c.getAttrib(U, ab), ad)) 
  {
    if (ab == "class") 
    {
      tiny_mce_js_exec_counter[7404]++;
      ad = c.getAttrib(X, ab);
      if (ad) 
      {
        tiny_mce_js_exec_counter[7405]++;
        ac = "";
        tiny_mce_js_exec_counter[7406]++;
        M(ad.split(/\s+/), function(ae) {
  tiny_mce_js_exec_counter[7407]++;
  if (/mce\w+/.test(ae)) 
  {
    tiny_mce_js_exec_counter[7409]++;
    ac += (ac ? " " : "") + ae;
  }
  tiny_mce_js_exec_counter[7408]++;
});
        if (ac) 
        {
          tiny_mce_js_exec_counter[7410]++;
          c.setAttrib(X, ab, ac);
          tiny_mce_js_exec_counter[7411]++;
          return;
        }
      }
    }
    if (ab == "class") 
    {
      tiny_mce_js_exec_counter[7412]++;
      X.removeAttribute("className");
    }
    if (e.test(ab)) 
    {
      tiny_mce_js_exec_counter[7413]++;
      X.removeAttribute("data-mce-" + ab);
    }
    tiny_mce_js_exec_counter[7414]++;
    X.removeAttribute(ab);
  }
  tiny_mce_js_exec_counter[7398]++;
});
      tiny_mce_js_exec_counter[7415]++;
      M(aa.classes, function(ab) {
  tiny_mce_js_exec_counter[7416]++;
  tiny_mce_js_exec_counter[7418]++;
  ab = q(ab, Z);
  if (!U || c.hasClass(U, ab)) 
  {
    tiny_mce_js_exec_counter[7419]++;
    c.removeClass(X, ab);
  }
  tiny_mce_js_exec_counter[7417]++;
});
      tiny_mce_js_exec_counter[7420]++;
      V = c.getAttribs(X);
      for (W = 0; W < V.length; W++) 
        {
          if (V[W].nodeName.indexOf("_") !== 0) 
          {
            tiny_mce_js_exec_counter[7421]++;
            return Q;
          }
        }
    }
    if (aa.remove != "none") 
    {
      tiny_mce_js_exec_counter[7422]++;
      m(X, aa);
      tiny_mce_js_exec_counter[7423]++;
      return A;
    }
    tiny_mce_js_exec_counter[7382]++;
  }
  function m(W, X) {
    tiny_mce_js_exec_counter[7424]++;
    tiny_mce_js_exec_counter[7426]++;
    var U = W.parentNode, V;
    if (X.block) 
    {
      if (!k) 
      {
        function Y(aa, Z, ab) {
          tiny_mce_js_exec_counter[7428]++;
          tiny_mce_js_exec_counter[7429]++;
          aa = B(aa, Z, ab);
          tiny_mce_js_exec_counter[7430]++;
          return !aa || (aa.nodeName == "BR" || E(aa));
        }        if (E(W) && !E(U)) 
        {
          if (!Y(W, Q) && !Y(W.firstChild, A, 1)) 
          {
            tiny_mce_js_exec_counter[7431]++;
            W.insertBefore(c.create("br"), W.firstChild);
          }
          if (!Y(W, A) && !Y(W.lastChild, Q, 1)) 
          {
            tiny_mce_js_exec_counter[7432]++;
            W.appendChild(c.create("br"));
          }
        }
      } else {
        if (U == c.getRoot()) 
        {
          if (!X.list_block || !g(W, X.list_block)) 
          {
            tiny_mce_js_exec_counter[7433]++;
            M(a.grep(W.childNodes), function(Z) {
  tiny_mce_js_exec_counter[7434]++;
  if (d(k, Z.nodeName.toLowerCase())) 
  {
    if (!V) 
    {
      tiny_mce_js_exec_counter[7436]++;
      V = L(Z, k);
    } else {
      tiny_mce_js_exec_counter[7437]++;
      V.appendChild(Z);
    }
  } else {
    tiny_mce_js_exec_counter[7438]++;
    V = 0;
  }
  tiny_mce_js_exec_counter[7435]++;
});
          }
        }
      }
    }
    if (X.selector && X.inline && !g(X.inline, W)) 
    {
      tiny_mce_js_exec_counter[7439]++;
      return;
    }
    tiny_mce_js_exec_counter[7440]++;
    c.remove(W, 1);
    tiny_mce_js_exec_counter[7425]++;
  }
  function B(V, U, W) {
    tiny_mce_js_exec_counter[7441]++;
    if (V) 
    {
      tiny_mce_js_exec_counter[7443]++;
      U = U ? "nextSibling" : "previousSibling";
      for (V = W ? V : V[U]; V; V = V[U]) 
        {
          if (V.nodeType == 1 || !f(V)) 
          {
            tiny_mce_js_exec_counter[7444]++;
            return V;
          }
        }
    }
    tiny_mce_js_exec_counter[7442]++;
  }
  function G(U) {
    tiny_mce_js_exec_counter[7445]++;
    tiny_mce_js_exec_counter[7446]++;
    return U && U.nodeType == 1 && U.getAttribute("data-mce-type") == "bookmark";
  }
  function t(Y, X) {
    tiny_mce_js_exec_counter[7447]++;
    tiny_mce_js_exec_counter[7448]++;
    var U, W, V;
    function aa(ad, ac) {
      tiny_mce_js_exec_counter[7450]++;
      if (ad.nodeName != ac.nodeName) 
      {
        tiny_mce_js_exec_counter[7451]++;
        return Q;
      }
      function ab(af) {
        tiny_mce_js_exec_counter[7452]++;
        tiny_mce_js_exec_counter[7453]++;
        var ag = {};
        tiny_mce_js_exec_counter[7455]++;
        M(c.getAttribs(af), function(ah) {
  tiny_mce_js_exec_counter[7456]++;
  tiny_mce_js_exec_counter[7458]++;
  var ai = ah.nodeName.toLowerCase();
  if (ai.indexOf("_") !== 0 && ai !== "style") 
  {
    tiny_mce_js_exec_counter[7460]++;
    ag[ai] = c.getAttrib(af, ai);
  }
  tiny_mce_js_exec_counter[7457]++;
});
        tiny_mce_js_exec_counter[7461]++;
        return ag;
      }
      function ae(ai, ah) {
        tiny_mce_js_exec_counter[7462]++;
        tiny_mce_js_exec_counter[7463]++;
        var ag, af;
        for (af in ai) 
          {
            if (ai.hasOwnProperty(af)) 
            {
              tiny_mce_js_exec_counter[7465]++;
              ag = ah[af];
              if (ag === o) 
              {
                tiny_mce_js_exec_counter[7466]++;
                return Q;
              }
              if (ai[af] != ag) 
              {
                tiny_mce_js_exec_counter[7467]++;
                return Q;
              }
              tiny_mce_js_exec_counter[7468]++;
              delete ah[af];
            }
          }
        for (af in ah) 
          {
            if (ah.hasOwnProperty(af)) 
            {
              tiny_mce_js_exec_counter[7469]++;
              return Q;
            }
          }
        tiny_mce_js_exec_counter[7470]++;
        return A;
      }
      if (!ae(ab(ad), ab(ac))) 
      {
        tiny_mce_js_exec_counter[7471]++;
        return Q;
      }
      if (!ae(c.parseStyle(c.getAttrib(ad, "style")), c.parseStyle(c.getAttrib(ac, "style")))) 
      {
        tiny_mce_js_exec_counter[7472]++;
        return Q;
      }
      tiny_mce_js_exec_counter[7473]++;
      return A;
    }
    if (Y && X) 
    {
      function Z(ac, ab) {
        tiny_mce_js_exec_counter[7474]++;
        for (W = ac; W; W = W[ab]) 
          {
            if (W.nodeType == 3 && W.nodeValue.length !== 0) 
            {
              tiny_mce_js_exec_counter[7475]++;
              return ac;
            }
            if (W.nodeType == 1 && !G(W)) 
            {
              tiny_mce_js_exec_counter[7476]++;
              return W;
            }
          }
        tiny_mce_js_exec_counter[7477]++;
        return ac;
      }      tiny_mce_js_exec_counter[7478]++;
      Y = Z(Y, "previousSibling");
      tiny_mce_js_exec_counter[7479]++;
      X = Z(X, "nextSibling");
      if (aa(Y, X)) 
      {
        for (W = Y.nextSibling; W && W != X; ) 
          {
            tiny_mce_js_exec_counter[7480]++;
            V = W;
            tiny_mce_js_exec_counter[7481]++;
            W = W.nextSibling;
            tiny_mce_js_exec_counter[7482]++;
            Y.appendChild(V);
          }
        tiny_mce_js_exec_counter[7483]++;
        c.remove(X);
        tiny_mce_js_exec_counter[7484]++;
        M(a.grep(X.childNodes), function(ab) {
  tiny_mce_js_exec_counter[7485]++;
  tiny_mce_js_exec_counter[7487]++;
  Y.appendChild(ab);
  tiny_mce_js_exec_counter[7486]++;
});
        tiny_mce_js_exec_counter[7488]++;
        return Y;
      }
    }
    tiny_mce_js_exec_counter[7489]++;
    return X;
  }
  function F(U) {
    tiny_mce_js_exec_counter[7490]++;
    tiny_mce_js_exec_counter[7491]++;
    return /^(h[1-6]|p|div|pre|address|dl|dt|dd)$/.test(U);
  }
  function H(V, Y) {
    tiny_mce_js_exec_counter[7492]++;
    tiny_mce_js_exec_counter[7493]++;
    var U, X, W;
    tiny_mce_js_exec_counter[7495]++;
    U = V[Y ? "startContainer" : "endContainer"];
    tiny_mce_js_exec_counter[7496]++;
    X = V[Y ? "startOffset" : "endOffset"];
    if (U.nodeType == 1) 
    {
      tiny_mce_js_exec_counter[7497]++;
      W = U.childNodes.length - 1;
      if (!Y && X) 
      {
        tiny_mce_js_exec_counter[7498]++;
        X--;
      }
      tiny_mce_js_exec_counter[7499]++;
      U = U.childNodes[X > W ? W : X];
    }
    tiny_mce_js_exec_counter[7500]++;
    return U;
  }
  function O(Z, V, Y) {
    tiny_mce_js_exec_counter[7501]++;
    tiny_mce_js_exec_counter[7503]++;
    var W, U = N[Z], aa = N[Z == "apply" ? "remove" : "apply"];
    function ab() {
      tiny_mce_js_exec_counter[7505]++;
      tiny_mce_js_exec_counter[7506]++;
      return N.apply.length || N.remove.length;
    }
    function X() {
      tiny_mce_js_exec_counter[7507]++;
      tiny_mce_js_exec_counter[7509]++;
      N.apply = [];
      tiny_mce_js_exec_counter[7510]++;
      N.remove = [];
      tiny_mce_js_exec_counter[7508]++;
    }
    function ac(ad) {
      tiny_mce_js_exec_counter[7511]++;
      tiny_mce_js_exec_counter[7513]++;
      M(N.apply.reverse(), function(ae) {
  tiny_mce_js_exec_counter[7514]++;
  tiny_mce_js_exec_counter[7516]++;
  R(ae.name, ae.vars, ad);
  tiny_mce_js_exec_counter[7515]++;
});
      tiny_mce_js_exec_counter[7517]++;
      M(N.remove.reverse(), function(ae) {
  tiny_mce_js_exec_counter[7518]++;
  tiny_mce_js_exec_counter[7520]++;
  z(ae.name, ae.vars, ad);
  tiny_mce_js_exec_counter[7519]++;
});
      tiny_mce_js_exec_counter[7521]++;
      c.remove(ad, 1);
      tiny_mce_js_exec_counter[7522]++;
      X();
      tiny_mce_js_exec_counter[7512]++;
    }
    for (W = U.length - 1; W >= 0; W--) 
      {
        if (U[W].name == V) 
        {
          tiny_mce_js_exec_counter[7523]++;
          return;
        }
      }
    tiny_mce_js_exec_counter[7524]++;
    U.push({name: V, vars: Y});
    for (W = aa.length - 1; W >= 0; W--) 
      {
        if (aa[W].name == V) 
        {
          tiny_mce_js_exec_counter[7525]++;
          aa.splice(W, 1);
        }
      }
    if (ab()) 
    {
      tiny_mce_js_exec_counter[7526]++;
      T.getDoc().execCommand("FontName", false, "mceinline");
      tiny_mce_js_exec_counter[7527]++;
      N.lastRng = p.getRng();
      tiny_mce_js_exec_counter[7528]++;
      M(c.select("font,span"), function(ae) {
  tiny_mce_js_exec_counter[7529]++;
  tiny_mce_js_exec_counter[7531]++;
  var ad;
  if (b(ae)) 
  {
    tiny_mce_js_exec_counter[7533]++;
    ad = p.getBookmark();
    tiny_mce_js_exec_counter[7534]++;
    ac(ae);
    tiny_mce_js_exec_counter[7535]++;
    p.moveToBookmark(ad);
    tiny_mce_js_exec_counter[7536]++;
    T.nodeChanged();
  }
  tiny_mce_js_exec_counter[7530]++;
});
      if (!N.isListening && ab()) 
      {
        tiny_mce_js_exec_counter[7537]++;
        N.isListening = true;
        tiny_mce_js_exec_counter[7538]++;
        M("onKeyDown,onKeyUp,onKeyPress,onMouseUp".split(","), function(ad) {
  tiny_mce_js_exec_counter[7539]++;
  tiny_mce_js_exec_counter[7541]++;
  T[ad].addToTop(function(ae, af) {
  tiny_mce_js_exec_counter[7542]++;
  if (ab() && !a.dom.RangeUtils.compareRanges(N.lastRng, p.getRng())) 
  {
    tiny_mce_js_exec_counter[7544]++;
    M(c.select("font,span"), function(ah) {
  tiny_mce_js_exec_counter[7545]++;
  tiny_mce_js_exec_counter[7547]++;
  var ai, ag;
  if (b(ah)) 
  {
    tiny_mce_js_exec_counter[7549]++;
    ai = ah.firstChild;
    if (ai) 
    {
      tiny_mce_js_exec_counter[7550]++;
      ac(ah);
      tiny_mce_js_exec_counter[7551]++;
      ag = c.createRng();
      tiny_mce_js_exec_counter[7552]++;
      ag.setStart(ai, ai.nodeValue.length);
      tiny_mce_js_exec_counter[7553]++;
      ag.setEnd(ai, ai.nodeValue.length);
      tiny_mce_js_exec_counter[7554]++;
      p.setRng(ag);
      tiny_mce_js_exec_counter[7555]++;
      ae.nodeChanged();
    } else {
      tiny_mce_js_exec_counter[7556]++;
      c.remove(ah);
    }
  }
  tiny_mce_js_exec_counter[7546]++;
});
    if (af.type == "keyup" || af.type == "mouseup") 
    {
      tiny_mce_js_exec_counter[7557]++;
      X();
    }
  }
  tiny_mce_js_exec_counter[7543]++;
});
  tiny_mce_js_exec_counter[7540]++;
});
      }
    }
    tiny_mce_js_exec_counter[7502]++;
  }
  tiny_mce_js_exec_counter[6959]++;
};
  tiny_mce_js_exec_counter[6956]++;
})(tinymce);
tiny_mce_js_exec_counter[7558]++;
tinymce.onAddEditor.add(function(e, a) {
  tiny_mce_js_exec_counter[7559]++;
  tiny_mce_js_exec_counter[7561]++;
  var d, h, g, c = a.settings;
  if (c.inline_styles) 
  {
    tiny_mce_js_exec_counter[7563]++;
    h = e.explode(c.font_size_style_values);
    function b(j, i) {
      tiny_mce_js_exec_counter[7564]++;
      tiny_mce_js_exec_counter[7566]++;
      e.each(i, function(l, k) {
  tiny_mce_js_exec_counter[7567]++;
  if (l) 
  {
    tiny_mce_js_exec_counter[7569]++;
    g.setStyle(j, k, l);
  }
  tiny_mce_js_exec_counter[7568]++;
});
      tiny_mce_js_exec_counter[7570]++;
      g.rename(j, "span");
      tiny_mce_js_exec_counter[7565]++;
    }    tiny_mce_js_exec_counter[7571]++;
    d = {font: function(j, i) {
  tiny_mce_js_exec_counter[7572]++;
  tiny_mce_js_exec_counter[7574]++;
  b(i, {backgroundColor: i.style.backgroundColor, color: i.color, fontFamily: i.face, fontSize: h[parseInt(i.size) - 1]});
  tiny_mce_js_exec_counter[7573]++;
}, u: function(j, i) {
  tiny_mce_js_exec_counter[7575]++;
  tiny_mce_js_exec_counter[7577]++;
  b(i, {textDecoration: "underline"});
  tiny_mce_js_exec_counter[7576]++;
}, strike: function(j, i) {
  tiny_mce_js_exec_counter[7578]++;
  tiny_mce_js_exec_counter[7580]++;
  b(i, {textDecoration: "line-through"});
  tiny_mce_js_exec_counter[7579]++;
}};
    function f(i, j) {
      tiny_mce_js_exec_counter[7581]++;
      tiny_mce_js_exec_counter[7583]++;
      g = i.dom;
      if (c.convert_fonts_to_spans) 
      {
        tiny_mce_js_exec_counter[7584]++;
        e.each(g.select("font,u,strike", j.node), function(k) {
  tiny_mce_js_exec_counter[7585]++;
  tiny_mce_js_exec_counter[7587]++;
  d[k.nodeName.toLowerCase()](a.dom, k);
  tiny_mce_js_exec_counter[7586]++;
});
      }
      tiny_mce_js_exec_counter[7582]++;
    }    tiny_mce_js_exec_counter[7588]++;
    a.onPreProcess.add(f);
    tiny_mce_js_exec_counter[7589]++;
    a.onSetContent.add(f);
    tiny_mce_js_exec_counter[7590]++;
    a.onInit.add(function() {
  tiny_mce_js_exec_counter[7591]++;
  tiny_mce_js_exec_counter[7593]++;
  a.selection.onSetContent.add(f);
  tiny_mce_js_exec_counter[7592]++;
});
  }
  tiny_mce_js_exec_counter[7560]++;
});
tiny_mce_js_exec_counter[1]++;
