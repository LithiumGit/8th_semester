the_bones_js_exec_counter[0]++;
function lerp(a, b, u) {
  the_bones_js_exec_counter[2]++;
  the_bones_js_exec_counter[3]++;
  return a + (b - a) * u;
}
function map(v, in_min, in_max, out_min, out_max) {
  the_bones_js_exec_counter[4]++;
  the_bones_js_exec_counter[5]++;
  return out_min + (out_max - out_min) * ((v - in_min) / (in_max - in_min));
}
function randInt(max) {
  the_bones_js_exec_counter[6]++;
  the_bones_js_exec_counter[7]++;
  return Math.floor(Math.random() * max);
}
function randInt2(min, max) {
  the_bones_js_exec_counter[8]++;
  the_bones_js_exec_counter[9]++;
  return Math.floor(min + Math.random() * (max - min));
}
function rand(max) {
  the_bones_js_exec_counter[10]++;
  the_bones_js_exec_counter[11]++;
  return Math.random() * max;
}
function rand2(min, max) {
  the_bones_js_exec_counter[12]++;
  the_bones_js_exec_counter[13]++;
  return min + Math.random() * (max - min);
}
function clamp(v, min, max) {
  the_bones_js_exec_counter[14]++;
  the_bones_js_exec_counter[15]++;
  return v < min ? min : (v > max ? max : v);
}
function wrap(v, min, max) {
  the_bones_js_exec_counter[16]++;
  if (v < min) {
    the_bones_js_exec_counter[18]++;
    return max - (min - v) % (max - min);
  } else if (v >= max) {
    the_bones_js_exec_counter[19]++;
    return (v - min) % (max - min) + min;
  } else {
    the_bones_js_exec_counter[20]++;
    return v;
  }
  the_bones_js_exec_counter[17]++;
}
function distSq(x1, y1, x2, y2) {
  the_bones_js_exec_counter[21]++;
  the_bones_js_exec_counter[22]++;
  var xo = x2 - x1;
  the_bones_js_exec_counter[24]++;
  var yo = y2 - y1;
  the_bones_js_exec_counter[26]++;
  return xo * xo + yo * yo;
}
function dist(x1, y1, x2, y2) {
  the_bones_js_exec_counter[27]++;
  the_bones_js_exec_counter[28]++;
  return Math.sqrt(distSq(x1, y1, x2, y2));
}
function rotx(x, angle) {
  the_bones_js_exec_counter[29]++;
  the_bones_js_exec_counter[30]++;
  return x * Math.cos(angle);
}
function roty(y, angle) {
  the_bones_js_exec_counter[31]++;
  the_bones_js_exec_counter[32]++;
  return y * Math.sin(angle);
}
function bezierPoint(a, b, c, d, t) {
  the_bones_js_exec_counter[33]++;
  the_bones_js_exec_counter[34]++;
  var t1 = 1.0 - t;
  the_bones_js_exec_counter[36]++;
  return a * t1 * t1 * t1 + 3 * b * t * t1 * t1 + 3 * c * t * t * t1 + d * t * t * t;
}
function segIntersection(p1, p2, p3, p4) {
  the_bones_js_exec_counter[37]++;
  the_bones_js_exec_counter[38]++;
  var bx = p2.x - p1.x;
  the_bones_js_exec_counter[40]++;
  var by = p2.y - p1.y;
  the_bones_js_exec_counter[42]++;
  var dx = p4.x - p3.x;
  the_bones_js_exec_counter[44]++;
  var dy = p4.y - p3.y;
  the_bones_js_exec_counter[46]++;
  var b_dot_d_perp = bx * dy - by * dx;
  if (b_dot_d_perp == 0) {
    the_bones_js_exec_counter[48]++;
    return null;
  }
  the_bones_js_exec_counter[49]++;
  var cx = p3.x - p1.x;
  the_bones_js_exec_counter[51]++;
  var cy = p3.y - p1.y;
  the_bones_js_exec_counter[53]++;
  var t = (cx * dy - cy * dx) / b_dot_d_perp;
  if (t < 0 || t > 1) {
    the_bones_js_exec_counter[55]++;
    return null;
  }
  the_bones_js_exec_counter[56]++;
  var u = (cx * by - cy * bx) / b_dot_d_perp;
  if (u < 0 || u > 1) {
    the_bones_js_exec_counter[58]++;
    return null;
  }
  the_bones_js_exec_counter[59]++;
  return new Vec2(p1.x + t * bx, p1.y + t * by);
}
function segCircIntersects(l1, l2, cp, cr) {
  the_bones_js_exec_counter[60]++;
  the_bones_js_exec_counter[61]++;
  var u = ((cp.x - l1.x) * (l2.x - l1.x) + (cp.y - l1.y) * (l2.y - l1.y)) / ((l2.x - l1.x) * (l2.x - l1.x) + (l2.y - l1.y) * (l2.y - l1.y));
  if (u < 0) {
    the_bones_js_exec_counter[63]++;
    return Vec2.distSq(l1, cp) < cr * cr;
  }
  if (u > 1) {
    the_bones_js_exec_counter[64]++;
    return Vec2.distSq(l2, cp) < cr * cr;
  }
  the_bones_js_exec_counter[65]++;
  var ox = l1.x + (l2.x - l1.x) * u - cp.x;
  the_bones_js_exec_counter[67]++;
  var oy = l1.y + (l2.y - l1.y) * u - cp.y;
  the_bones_js_exec_counter[69]++;
  return ox * ox + oy * oy <= cr * cr;
}
function curveSegmentBez(v1, v2, v3, v4, s) {
  the_bones_js_exec_counter[70]++;
  the_bones_js_exec_counter[71]++;
  return [new Vec2(v2.x + (s * v3.x - s * v1.x) / 6, v2.y + (s * v3.y - s * v1.y) / 6), new Vec2(v3.x + (s * v2.x - s * v4.x) / 6, v3.y + (s * v2.y - s * v4.y) / 6), new Vec2(v3.x, v3.y)];
}
function semiBezier(t, x0, y0, x1, y1, x2, y2, x3, y3) {
  the_bones_js_exec_counter[72]++;
  if (t == 0.0) 
  {
    the_bones_js_exec_counter[73]++;
    return [x0, y0, x0, y0, x0, y0];
  } else if (t == 1.0) 
  {
    the_bones_js_exec_counter[74]++;
    return [x1, y1, x2, y2, x3, y3];
  }
  the_bones_js_exec_counter[75]++;
  var qx1 = x0 + (x1 - x0) * t;
  the_bones_js_exec_counter[77]++;
  var qy1 = y0 + (y1 - y0) * t;
  the_bones_js_exec_counter[79]++;
  var qx2 = x1 + (x2 - x1) * t;
  the_bones_js_exec_counter[81]++;
  var qy2 = y1 + (y2 - y1) * t;
  the_bones_js_exec_counter[83]++;
  var qx3 = x2 + (x3 - x2) * t;
  the_bones_js_exec_counter[85]++;
  var qy3 = y2 + (y3 - y2) * t;
  the_bones_js_exec_counter[87]++;
  var rx2 = qx1 + (qx2 - qx1) * t;
  the_bones_js_exec_counter[89]++;
  var ry2 = qy1 + (qy2 - qy1) * t;
  the_bones_js_exec_counter[91]++;
  var rx3 = qx2 + (qx3 - qx2) * t;
  the_bones_js_exec_counter[93]++;
  var ry3 = qy2 + (qy3 - qy2) * t;
  the_bones_js_exec_counter[95]++;
  var bx3 = rx2 + (rx3 - rx2) * t;
  the_bones_js_exec_counter[97]++;
  var by3 = ry2 + (ry3 - ry2) * t;
  the_bones_js_exec_counter[99]++;
  return [qx1, qy1, rx2, ry2, bx3, by3];
}
function clone(obj) {
  the_bones_js_exec_counter[100]++;
  if (obj == null || typeof (obj) != 'object') {
    the_bones_js_exec_counter[101]++;
    return obj;
  }
  the_bones_js_exec_counter[102]++;
  var temp = new obj.constructor();
  for (var key in obj) 
    temp[key] = clone(obj[key]);
  the_bones_js_exec_counter[106]++;
  return temp;
}
the_bones_js_exec_counter[107]++;
Array.prototype.indexOf = function(elem) {
  the_bones_js_exec_counter[108]++;
  for (var i = 0; i < this.length; i++) 
    if (this[i] === elem) {
      the_bones_js_exec_counter[109]++;
      return i;
    }
  the_bones_js_exec_counter[110]++;
  return -1;
};
function quadIn(t, b, c, d) {
  the_bones_js_exec_counter[111]++;
  the_bones_js_exec_counter[112]++;
  return c * (t /= d) * t + b;
}
function quadOut(t, b, c, d) {
  the_bones_js_exec_counter[113]++;
  the_bones_js_exec_counter[114]++;
  return -c * (t /= d) * (t - 2) + b;
}
function quadInOut(t, b, c, d) {
  the_bones_js_exec_counter[115]++;
  if ((t /= d / 2) < 1) {
    the_bones_js_exec_counter[116]++;
    return c / 2 * t * t + b;
  }
  the_bones_js_exec_counter[117]++;
  return -c / 2 * ((--t) * (t - 2) - 1) + b;
}
function linearNone(t, b, c, d) {
  the_bones_js_exec_counter[118]++;
  the_bones_js_exec_counter[119]++;
  return c * t / d + b;
}
the_bones_js_exec_counter[1]++;
